{
    "version": "https://jsonfeed.org/version/1",
    "title": "Oikiou's Blog • All posts by \"more_interest\" category",
    "description": "Blog",
    "home_page_url": "https://www.oikiou.top",
    "items": [
        {
            "id": "https://www.oikiou.top/2022/f15ac6f4/",
            "url": "https://www.oikiou.top/2022/f15ac6f4/",
            "title": "Nintendo Switch",
            "date_published": "2022-07-21T14:57:15.000Z",
            "content_html": "<h1 id=\"TX-转-大气层\"><a href=\"#TX-转-大气层\" class=\"headerlink\" title=\"TX 转 大气层\"></a>TX 转 大气层</h1><p><a href=\"https://www.bilibili.com/video/BV1DZ4y1B777/?spm_id_from=333.788\">https://www.bilibili.com/video/BV1DZ4y1B777/?spm_id_from=333.788</a></p>\n<h1 id=\"SD卡内文件结构\"><a href=\"#SD卡内文件结构\" class=\"headerlink\" title=\"SD卡内文件结构\"></a>SD卡内文件结构</h1><p><img src=\"/2022/f15ac6f4/image-20221103090149675.png\" alt=\"image-20221103090149675\"></p>\n<ul>\n<li><ul>\n<li></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"OS相关\"><a href=\"#OS相关\" class=\"headerlink\" title=\"OS相关\"></a>OS相关</h1><h2 id=\"三种不同的OS\"><a href=\"#三种不同的OS\" class=\"headerlink\" title=\"三种不同的OS\"></a>三种不同的OS</h2><p><img src=\"/2022/f15ac6f4/image-20221103092334424.png\" alt=\"image-20221103092334424\"></p>\n<ul>\n<li>大气层-真实系统<ul>\n<li>使用的是机身的正版系统, 插件是使用的是大气层的插件</li>\n</ul>\n</li>\n<li>大气层-虚拟系统<ul>\n<li>使用的是SD卡内全虚拟的系统</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"查看当前OS版本和环境\"><a href=\"#查看当前OS版本和环境\" class=\"headerlink\" title=\"查看当前OS版本和环境\"></a>查看当前OS版本和环境</h2><p><img src=\"/2022/f15ac6f4/image-20221103090700699.png\" alt=\"image-20221103090700699\"></p>\n<h2 id=\"系统升级\"><a href=\"#系统升级\" class=\"headerlink\" title=\"系统升级\"></a>系统升级</h2><p><img src=\"/2022/f15ac6f4/image-20221103090149675.png\" alt=\"image-20221103090149675\"></p>\n<ul>\n<li>系统升级相关<ul>\n<li>一般来说<code>Nintendo</code>和<code>emuMMC</code>是需要保留的文件, 其他文件是大气层系统相关的文件</li>\n<li>小版本升级可以直接在相册内用<code>daybreak</code>升级<code>14.1.1-&gt;14.1.2</code>, 大版本升级<code>14.1.2-&gt;15.0.0</code>因为可能需要升级大气层系统(atmosphere)所以需要把SD卡拆下来, 删掉除了<code>Nintendo</code>和<code>emuMMC</code>之外的全部文件, 然后找升级包去覆盖掉.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"资源及参考链接\"><a href=\"#资源及参考链接\" class=\"headerlink\" title=\"资源及参考链接\"></a>资源及参考链接</h2><p><a href=\"https://darthsternie.net/switch-firmwares/\">Switch 离线升级固件(分为 大陆版 和 全球版)</a></p>\n<p><a href=\"https://shipengliang.com/games/switch-%E5%A4%A7%E6%B0%94%E5%B1%82-atmosphere-%E5%A6%82%E4%BD%95%E7%A6%BB%E7%BA%BF%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F.html\">Switch 大气层 Atmosphere 如何离线升降级系统</a></p>\n<p><a href=\"https://shipengliang.com/games/switch-firmware-%e5%9b%ba%e4%bb%b6%e4%b8%8b%e8%bd%bd.html\">Switch Firmware固件最新版、NS 历史版本下载列表：</a></p>\n<h1 id=\"安装游戏\"><a href=\"#安装游戏\" class=\"headerlink\" title=\"安装游戏\"></a>安装游戏</h1><ul>\n<li>需要准备的工具<ul>\n<li>游戏资源</li>\n<li>NS-Usbloader PC端程序</li>\n<li>Awoo NS端</li>\n<li>USB-C 线缆</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h2><ul>\n<li>优先点击广告, 请勿白嫖, 为众人抱薪者，不可使其冻毙于风雪</li>\n</ul>\n<p><a href=\"https://xxxxx520.com/27637.html\">https://xxxxx520.com/27637.html</a></p>\n<p><a href=\"https://xxxxx520.net/3892.html\">https://xxxxx520.net/3892.html</a></p>\n<h2 id=\"NS-Usbloader-PC端\"><a href=\"#NS-Usbloader-PC端\" class=\"headerlink\" title=\"NS-Usbloader PC端\"></a>NS-Usbloader PC端</h2><ul>\n<li>通过USB安装游戏, 以及电脑端开机注入都可用</li>\n<li>这个需要java环境, 安装JRE(Java Runtime Environment)即可.</li>\n</ul>\n<p><a href=\"https://github.com/developersu/ns-usbloader/\">https://github.com/developersu/ns-usbloader/</a></p>\n<h2 id=\"Awoo-NS端\"><a href=\"#Awoo-NS端\" class=\"headerlink\" title=\"Awoo NS端\"></a>Awoo NS端</h2><ul>\n<li>NS端安装游戏</li>\n</ul>\n<p><a href=\"https://github.com/Huntereb/Awoo-Installer\">https://github.com/Huntereb/Awoo-Installer</a></p>\n<h1 id=\"特斯拉插件-Tesla-Menu-类似快捷菜单\"><a href=\"#特斯拉插件-Tesla-Menu-类似快捷菜单\" class=\"headerlink\" title=\"特斯拉插件(Tesla-Menu) 类似快捷菜单\"></a>特斯拉插件(Tesla-Menu) 类似快捷菜单</h1><blockquote>\n<p>  <strong>Switch特斯拉插件</strong>(Tesla-Menu)是一个很实用的功能插件的集合。可以直接在switch系统的任何界面通过组合按键调取左屏幕弹窗打开各种功能的快捷开关！目前已经实现的，开关switch硬件信息显示，开关FPS显示，<strong>开关超频</strong>，切换TV模式，这个平台就好比是简洁版相册，相册里面的各种软件就是完整版，这个Tesla-Menu平台提供的功能就相当于缩减版！不用复杂的操作，只是简单的开关，好处就是精简不占用太多资源！不用来返相册去开关软件！</p>\n</blockquote>\n<p>调出菜单: <code>L + ↓</code></p>\n<p>FPS界面调出: 同时按下 <code>左右摇杆</code></p>\n<h1 id=\"金手指-作弊器\"><a href=\"#金手指-作弊器\" class=\"headerlink\" title=\"金手指(作弊器)\"></a>金手指(作弊器)</h1><p>进入NS的相册, 将NS作为U盘挂载到电脑, <code>DBI -&gt; Run MTP responder</code>, 找到这个目录<code>此电脑\\Switch\\1: External SD Card\\atmosphere\\contents</code>这个目录就是NS的金手指存放位置.</p>\n<p>目录下64位16进制的文件夹名, 这个序号就代表着不同的游戏.</p>\n<p>我们找到对应游戏, 打开文件夹后, 里面会有一个<code>cheats</code>的文件夹, 我们打开它, 里面有一个<code>*.txt</code>文件, 这个文件应该记录的就是内存地址, 我们去网络上找到别人保存好的内存地址信息(<code>cheats</code>文件), 放到这个<code>atmosphere\\contents</code>目录下, 在NS端就能看到对应的金手指修改选项了, 注意可能需要关掉游戏重新开一下.</p>\n<h2 id=\"64位游戏ID-对应-游戏名查询\"><a href=\"#64位游戏ID-对应-游戏名查询\" class=\"headerlink\" title=\"64位游戏ID 对应 游戏名查询\"></a>64位游戏ID 对应 游戏名查询</h2><p>调出特斯拉界面选择金手指, 即可查到游戏ID</p>\n<p><a href=\"https://github.com/ibnux/switch-cheat/blob/master/GAMES.md\">https://github.com/ibnux/switch-cheat/blob/master/GAMES.md</a></p>\n<p><a href=\"https://switchbrew.org/w/index.php?title=Title_list/Games\">https://switchbrew.org/w/index.php?title=Title_list/Games</a></p>\n<h2 id=\"cheats-金手指\"><a href=\"#cheats-金手指\" class=\"headerlink\" title=\"cheats 金手指\"></a>cheats 金手指</h2><p><a href=\"https://github.com/ibnux/switch-cheat\">https://github.com/ibnux/switch-cheat</a></p>\n",
            "tags": [
                "switch",
                "nintendo",
                "game"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/fc18738/",
            "url": "https://www.oikiou.top/2022/fc18738/",
            "title": "PC Software",
            "date_published": "2022-01-21T14:57:15.000Z",
            "content_html": "<h1 id=\"PC-Windows\"><a href=\"#PC-Windows\" class=\"headerlink\" title=\"PC Windows\"></a>PC Windows</h1><h1 id=\"扫描修复系统\"><a href=\"#扫描修复系统\" class=\"headerlink\" title=\"扫描修复系统\"></a>扫描修复系统</h1><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\">sfc <span class=\"hljs-string\">/SCANNOW</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"DNS解析\"><a href=\"#DNS解析\" class=\"headerlink\" title=\"DNS解析\"></a>DNS解析</h1><h3 id=\"刷新DNS\"><a href=\"#刷新DNS\" class=\"headerlink\" title=\"刷新DNS\"></a>刷新DNS</h3><p><code>ipconfig /flushdns</code></p>\n<h3 id=\"nslookup\"><a href=\"#nslookup\" class=\"headerlink\" title=\"nslookup\"></a>nslookup</h3><p><img src=\"/2022/fc18738/image-20220402175405670.png\" alt=\"image-20220402175405670\"></p>\n<p><img src=\"/2022/fc18738/image-20220402175432533.png\" alt=\"image-20220402175432533\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nslookup<br><br><span class=\"hljs-comment\"># 设置查询类型 name server</span><br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">type</span>=ns<br><br><span class=\"hljs-comment\"># 查询根服务器</span><br>.<br><br><span class=\"hljs-comment\"># Non-authoritative 代表非权威应答 一般是缓存来的</span><br><span class=\"hljs-comment\"># authoritative 表权威应答 根服务器直接返回的</span><br><br><span class=\"hljs-comment\"># 设置查询类型 a ipv4地址</span><br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">type</span>=a<br><br><span class=\"hljs-comment\"># 查询根服务器的ipv4地址</span><br>.<br><br><span class=\"hljs-comment\"># 设置dns服务器地址</span><br>server 198.41.0.4<br><br><span class=\"hljs-comment\"># 设置查询类型 name server</span><br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">type</span>=ns<br><br><span class=\"hljs-comment\"># 查询cf域名服务器</span><br>cf.<br><br><span class=\"hljs-comment\"># 设置查询类型 a ipv4地址</span><br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">type</span>=a<br><br><span class=\"hljs-comment\"># 查询cf域名服务器的ipv4地址</span><br>cf.<br><br>..........<br><br><br>lager.cf.<br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"硬链接-amp-符号链接\"><a href=\"#硬链接-amp-符号链接\" class=\"headerlink\" title=\"硬链接&amp;符号链接\"></a>硬链接&amp;符号链接</h1><blockquote>\n<p>  mklink<br>  创建符号链接。</p>\n<p>  MKLINK [[&#x2F;D] | [&#x2F;H] | [&#x2F;J]] Link Target</p>\n<pre><code class=\"hljs\">      /D      创建目录符号链接。默认为文件\n              符号链接。\n      /H      创建硬链接而非符号链接。\n      /J      创建目录联接。\n      Link    指定新的符号链接名称。\n      Target  指定新链接引用的路径\n              (相对或绝对)。\n</code></pre>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>硬链接（Hard Link）</th>\n<th>目录联接（Junction Point）</th>\n<th>符号链接（Symbolic Link）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>命令</td>\n<td><code>mklink /H Link Target</code></td>\n<td><code>mklink /J Link Target</code></td>\n<td><code>mklink /D Link Target</code></td>\n</tr>\n<tr>\n<td>作用</td>\n<td>为某文件创建别名，可让不同的路径对应同一个文件的数据。</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>链接到文件</td>\n<td>✔️</td>\n<td>❌</td>\n<td>❌</td>\n</tr>\n<tr>\n<td>链接到文件夹</td>\n<td>❌</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>需要提升为管理员权限</td>\n<td>需要</td>\n<td>不需要</td>\n<td>通常需要 <code>[坑1]</code></td>\n</tr>\n<tr>\n<td>跨驱动器卷（盘符）</td>\n<td>❌</td>\n<td>✔️（仅本地计算机）</td>\n<td>✔️（包括 SMB 文件或路径）</td>\n</tr>\n<tr>\n<td>操作系统支持</td>\n<td>Windows NT 3.1 开始支持 Windows 2000 开始有 API <code>CreateHardLink()</code> Windows NT 6.0 开始能使用 <code>mklink /H</code></td>\n<td>Windows 2000+</td>\n<td>Windows Vista+</td>\n</tr>\n<tr>\n<td>可链接到不存在的目标</td>\n<td>❌</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>可链接到相对目录</td>\n<td>❌</td>\n<td>❌（可以使用相对路径创建，但创建完即变绝对路径）</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>删除方法</td>\n<td>del</td>\n<td>rd</td>\n<td>rd &#x2F; del</td>\n</tr>\n<tr>\n<td>当链接被单独删除后</td>\n<td>只有所有指向原始文件的硬链接和原始文件全部删除后文件数据才会被删除。</td>\n<td>Windows Vista 之后原始文件夹不受影响；Windows 2000&#x2F;XP&#x2F;2003 会导致原始子文件夹被删除。</td>\n<td>原始文件夹不受影响。</td>\n</tr>\n<tr>\n<td>当原始文件被单独删除后</td>\n<td>硬链接依然能正常访问到文件的数据。</td>\n<td>目录联接失效，指向不存在的目录。</td>\n<td>符号链接失效，指向不存在的目录</td>\n</tr>\n</tbody></table>\n<p>比较 Windows 上四种不同的文件（夹）链接方式（NTFS 的硬链接、目录联接、符号链接，和大家熟知的快捷方式）</p>\n<p><a href=\"https://blog.walterlv.com/post/ntfs-link-comparisons.html\">https://blog.walterlv.com/post/ntfs-link-comparisons.html</a></p>\n<p>Windows中的硬链接和软链接（hard link 和 Symbolic link）</p>\n<p><a href=\"https://www.cnblogs.com/Naylor/p/7597869.html\">https://www.cnblogs.com/Naylor/p/7597869.html</a></p>\n<p>Windows下mklink使用, 硬链接, 软链接和快捷方式的区别</p>\n<p><a href=\"https://blog.csdn.net/guyue35/article/details/49761347\">https://blog.csdn.net/guyue35/article/details/49761347</a></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dos\">创建链接:<br>mklink /j D:\\System\\Desktop\\Project  D:\\Project<br><br><br><br>删除的命令：<br><span class=\"hljs-built_in\">rmdir</span> 链接名称<br>例如：<span class=\"hljs-built_in\">rmdir</span> d:\\recivefiles <span class=\"hljs-built_in\">rmdir</span> d:\\develop<br>删除虚拟链接目录，并不会删除真实文件，注意，不能使用<span class=\"hljs-built_in\">del</span>命令，<span class=\"hljs-built_in\">del</span>命令会删除真实文件<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n<p>拓展 :  linux下的软链接和硬链接</p>\n<blockquote>\n<p>  同样，在Windows下，链接的功能也是被实现了的（虽然我们不会经常发现）。在Linux下，我们都知道链接有两种形式：硬链接和软链接。所谓硬链接，我们可以理解为硬链接持有的是文件本身（而不是路径）的引用。也就是说，当我们给一个名为a.txt的文件建立硬链接（b.txt）后，那么b.txt指向的位置就是a.txt这个文件本身，而此时，a.txt和b.txt是同级平行的，这个文本文件此时同时拥有两个文件名。当我们删除a.txt时，只是删除了a.txt这个文件名，这个文件仍然被b.txt所引用，所以我们还能够通过b.txt访问。而软链接，持有的则是原链接路径。比如a.txt位于 <del>&#x2F;Document&#x2F;a.txt ，那么为其建立软链接b.txt的内容就是”</del>&#x2F;Document&#x2F;a.txt”，此时，我们访问b.txt，其实是在按照a.txt的路径去访问a.txt。如果我们这时删除a.txt这个文件，那么b.txt也会无效，因为路径已经断掉。</p>\n</blockquote>\n<h1 id=\"NOTE\"><a href=\"#NOTE\" class=\"headerlink\" title=\"NOTE\"></a>NOTE</h1><h2 id=\"窗口主题色-活动和非活动窗口\"><a href=\"#窗口主题色-活动和非活动窗口\" class=\"headerlink\" title=\"窗口主题色 活动和非活动窗口\"></a>窗口主题色 活动和非活动窗口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">regedit 编辑<br>计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\DWM<br><br><span class=\"hljs-comment\"># 活动窗口颜色 </span><br><span class=\"hljs-comment\"># 32位值就是 颜色的RGB 注意的是这里不知道是大小端的问题还是其他什么问题需要RGB数值转换成BGR样式</span><br>AccentColor <br><br><span class=\"hljs-comment\"># 非活动窗口颜色 </span><br>AccentColorInactive <br></code></pre></td></tr></table></figure>\n\n<h2 id=\"添加永久路由\"><a href=\"#添加永久路由\" class=\"headerlink\" title=\"添加永久路由\"></a>添加永久路由</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">route -p add <br><br>route ADD 157.0.0.0 MASK 255.0.0.0  157.55.80.1 METRIC 3 IF 2<br>       destination^      ^mask      ^gateway     metric^    ^<br>                                                   Interface^<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"各类特定文件夹\"><a href=\"#各类特定文件夹\" class=\"headerlink\" title=\"各类特定文件夹\"></a>各类特定文件夹</h2><p><code>win+r</code>输入对应内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">启动文件夹</span><br>shell:startup<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">发送到右键菜单</span><br>shell:sendto<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"修改WIFI位置\"><a href=\"#修改WIFI位置\" class=\"headerlink\" title=\"修改WIFI位置\"></a>修改WIFI位置</h2><figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs moonscript\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\NetworkList\\Profiles<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>展开“Profiles”项，其下面的子项是都是一个网络连接，可以通过查看“ProfilesName”来分辨，双击打开“<code>Category</code>”，</li>\n<li>打开编辑窗口后，修改“数值数据”，这里数值0代表公用网络，1代表专用网络，2代表域网络，设置完后点击确定即可。</li>\n</ul>\n<h2 id=\"填加开机启动\"><a href=\"#填加开机启动\" class=\"headerlink\" title=\"填加开机启动\"></a>填加开机启动</h2><ol>\n<li>添加<code>Windows</code>开机自动执行<code>init-wsl.bat</code>脚本</li>\n</ol>\n<p><code>Windows</code>键+<code>R</code>，输入<code>regedit</code>打开注册列表，在地址栏输入<code>计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code>定位到对应注册表位置，右键新建一个字符串值，键入<code>init-wsl.bat</code>脚本绝对路径即可，如下图！</p>\n<p><img src=\"/2022/fc18738/regedit-add-init-wsl.png\" alt=\"set regedit service\"></p>\n<p>重启计算机即可发现，<code>WSL</code>中的<code>Docker</code>服务已经被启动，通过<code>192.168.33.10</code>可以直接访问到<code>WSL</code>内部的网络！</p>\n",
            "tags": [
                "pc",
                "software",
                "windows"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/eae787f0/",
            "url": "https://www.oikiou.top/2022/eae787f0/",
            "title": "CatDrive猫盘",
            "date_published": "2022-01-21T14:57:15.000Z",
            "content_html": "<h1 id=\"刷机\"><a href=\"#刷机\" class=\"headerlink\" title=\"刷机\"></a>刷机</h1><p>刷机教程很多很多，这边就不赘述了</p>\n<p><a href=\"https://www.jianshu.com/p/77e529fb35f9\">https://www.jianshu.com/p/77e529fb35f9</a></p>\n<p><a href=\"https://www.huakings.cn/post/283.html\">https://www.huakings.cn/post/283.html</a></p>\n<ul>\n<li>建议备好串口刷砖必备</li>\n<li>猫盘ssh 用户名 <strong>root</strong> 密码 <strong>Etech12</strong></li>\n</ul>\n<h1 id=\"变砖刷机\"><a href=\"#变砖刷机\" class=\"headerlink\" title=\"变砖刷机\"></a>变砖刷机</h1><h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://www.bilibili.com/video/av73492887\">https://www.bilibili.com/video/av73492887</a></p>\n<p><a href=\"https://www.huakings.cn/post/186.html\">https://www.huakings.cn/post/186.html</a></p>\n<p><a href=\"http://wiki.espressobin.net/tiki-index.php?page=Bootloader+recovery+via+UART\">http://wiki.espressobin.net/tiki-index.php?page=Bootloader+recovery+via+UART</a></p>\n<h2 id=\"背景知识\"><a href=\"#背景知识\" class=\"headerlink\" title=\"背景知识\"></a>背景知识</h2><p><strong>猫盘引导过程</strong></p>\n<p><img src=\"/2022/eae787f0/image-20211225204417854.png\" alt=\"image-20211225204417854\"></p>\n<p>从 A3720 机器引导，再到SPI FLASH引导，再到SATA硬盘或者EMMC启动</p>\n<p>出现<code>&gt;E</code>就是SPI引导没了，需要用厂商工具把SPI引导刷一遍。</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p><img src=\"/2022/eae787f0/image-20211225203501999.png\" alt=\"image-20211225203501999\"></p>\n<p>发现出现<code>&gt;E</code>，这就说明猫盘SPI引导没了，需要重新刷入uboot，进行救砖。</p>\n<p>首先，需要预装VM启用厂商的Linux环境(ezremaster.iso)，安装VM这步跳过。</p>\n<blockquote>\n<p>创建虚拟机的时候操作系统可以选择Linux 2.2.x内核，</p>\n</blockquote>\n<p>串口的USB设备加到VM内，然后开机。</p>\n<p>输入如下代码，回车运行后会让输入port，<code>/dev/ttyUSB0</code>一般是<code>0</code>输入0回车就会开始刷SPI，然后会出现++++++++，在此期间可以按几下回车。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">sudo sh /wtpd/shua.sh<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/2022/eae787f0/image-20211225204613427.png\" alt=\"image-20211225204613427\"></p>\n<p>等一段时间就会出现<code>marvell&gt;&gt;</code>，至此就已经救砖成功。</p>\n<p><img src=\"/2022/eae787f0/image-20211225205017895.png\" alt=\"image-20211225205017895\"></p>\n<p>接下来就可以用<code>bubt</code>命令正常刷SPI引导了。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">bubt full.bin spi usb<br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><h2 id=\"LED-FAN-控制脚本\"><a href=\"#LED-FAN-控制脚本\" class=\"headerlink\" title=\"LED FAN 控制脚本\"></a>LED FAN 控制脚本</h2><p>参考: <a href=\"https://bbs.nas66.com/thread-9007-1-1.html\">https://bbs.nas66.com/thread-9007-1-1.html</a></p>\n<p>参考: <a href=\"https://bbs.nas66.com/thread-13810-1-1.html\">https://bbs.nas66.com/thread-13810-1-1.html</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">mkdir -p /a_usr<br>cat &gt; /a_usr/ledfan.sh &lt;&lt;EOF<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span><br>if [ ! -d /sys/class/gpio/gpio450 ] ; then<br>echo 450 &gt; /sys/class/gpio/export<br>fi<br>echo out &gt; /sys/class/gpio/gpio450/direction<br>i2cset -y -f 0 0x45 0x00 0x55<br>i2cset -y -f 0 0x45 0x01 0x01<br>i2cset -y -f 0 0x45 0x30 0x07 <br>rm -r /tmp/led/<br>mkdir /tmp/led/<br>echo 1 &gt; /tmp/led/leds.flag<br>while true<br>do<br>sata_temp=&quot;\\$(smartctl -a /dev/hda -d ata | sed -n &#x27;/Temperature_Celsius/p&#x27; | awk &#x27;&#123;print $10&#125;&#x27;)&quot;<br>sata=&quot;\\$(hdparm -C /dev/sda |grep &#x27;drive&#x27;|awk &#x27;&#123;print \\$4&#125;&#x27;)&quot;<br>ledss=&quot;\\$(cat /tmp/led/leds.flag)&quot;<br>if [ \\$sata = standby ];then<br>led=&quot;0x03&quot;<br>leds=&quot;0&quot;<br>fi<br>if [ \\$sata = active/idle ];then<br>led=&quot;0x73&quot;<br>leds=&quot;1&quot;<br>fi<br>if [ \\$sata_temp -ge 55 ];then<br>if [ -f &quot;/tmp/led/led31.flag&quot; ] &amp;&amp; [ \\$ledss = \\$leds ];then <br>sleep 15<br>continue<br>fi<br>i2cset -y -f 0 0x45 0x32 0x00<br>i2cset -y -f 0 0x45 0x33 0x00<br>i2cset -y -f 0 0x45 0x31 \\$&#123;led&#125;<br>i2cset -y -f 0 0x45 0x34 255<br>echo 1 &gt; /sys/class/gpio/gpio450/value<br>rm -rf /tmp/led/led*.flag<br>touch /tmp/led/led31.flag<br>echo \\$&#123;leds&#125; &gt; /tmp/led/leds.flag<br>fi<br>if [ \\$sata_temp -ge 45 ] &amp;&amp; [ \\$sata_temp -lt 55 ];then<br>if [ -f &quot;/tmp/led/led33.flag&quot; ] &amp;&amp; [ \\$ledss = \\$leds ];then<br>sleep 15 <br>continue<br>fi<br>i2cset -y -f 0 0x45 0x31 0x00<br>i2cset -y -f 0 0x45 0x32 0x00<br>i2cset -y -f 0 0x45 0x33 \\$&#123;led&#125;<br>i2cset -y -f 0 0x45 0x36 255<br>echo 1 &gt; /sys/class/gpio/gpio450/value<br>rm -rf /tmp/led/led*.flag<br>touch /tmp/led/led33.flag<br>echo \\$&#123;leds&#125; &gt; /tmp/led/leds.flag<br>fi<br>if [ \\$sata_temp -lt 45 ];then<br>if [ -f &quot;/tmp/led/led32.flag&quot; ] &amp;&amp; [ \\$ledss = \\$leds ];then<br>sleep 15 <br>continue<br>fi<br>i2cset -y -f 0 0x45 0x31 0x00<br>i2cset -y -f 0 0x45 0x33 0x00<br>i2cset -y -f 0 0x45 0x32 \\$&#123;led&#125;<br>i2cset -y -f 0 0x45 0x35 255<br>echo 0 &gt; /sys/class/gpio/gpio450/value<br>rm -rf /tmp/led/led*.flag<br>touch /tmp/led/led32.flag<br>echo \\$&#123;leds&#125; &gt; /tmp/led/leds.flag<br>fi<br>sleep 15<br>done<br>EOF<br>bash /a_usr/ledfan.sh<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"修改SN半白脚本\"><a href=\"#修改SN半白脚本\" class=\"headerlink\" title=\"修改SN半白脚本\"></a>修改SN半白脚本</h2><p>下面的<code>00:11:32:12:34:56</code>最好改成壳子上自己的MAC</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cd ~ &amp;&amp; wget -N --no-check-certificate https://www.huakings.cn/mp202003/macsn.sh &amp;&amp; chmod +x macsn.sh &amp;&amp; bash macsn.sh 00:11:32:12:34:56 1860ABCDE1860 &amp;&amp; rm -f /root/macsn.sh<br></code></pre></td></tr></table></figure>\n\n<p>macsn.sh脚本详细内容如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">macstr=$1<br>sn=$2<br>mac=($&#123;macstr//:/ &#125;)<br>if [ $&#123;#mac[@]&#125; != 6 ];<br>then<br>echo mac address error!<br>exit<br>fi<br>for var in $&#123;mac[@]&#125;<br>do<br>if echo $var | grep -q &#x27;[^0-9A-F]&#x27;<br>then <br>echo mac address error!<br>exit<br>fi <br>if  [[ $&#123;#var&#125; != 2  ]] <br>then<br>echo mac address error!!<br>exit<br>fi<br>done<br>if  [[ $&#123;#sn&#125; != 13  ]] <br>then<br>echo sn error:The SN Length must be 13<br>exit<br>fi<br><br>for((i=0;i&lt;6;i++));<br>do <br>declare -i macchecksum+=0x$&#123;mac[i]&#125;<br>done<br>declare -i macchecksum=$macchecksum%256<br>for((i=0;i&lt;13;i++));<br>do <br>declare -i checksum+=$(printf &#x27;%d&#x27; &quot;&#x27;$&#123;sn:$i:1&#125;&quot;)<br>done<br>if [ $&#123;#checksum&#125; == 3 ];<br>then<br>echo -e -n &quot;\\x$&#123;mac[0]&#125;\\x$&#123;mac[1]&#125;\\x$&#123;mac[2]&#125;\\x$&#123;mac[3]&#125;\\x$&#123;mac[4]&#125;\\x$&#123;mac[5]&#125;\\<br>\\x$(printf &#x27;%x&#x27; $macchecksum)\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0&quot;\\<br>\\SN=$sn&quot;,CHK=&quot;$checksum\\<br>&quot;\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x3C\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x1\\x1\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x1\\x1\\x1\\x1\\<br>\\x0\\x1\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x1\\x1\\x1\\x1\\<br>\\x1\\x0\\x1\\x1\\x1\\x1\\x1\\x0\\<br>\\x1\\x1\\x1\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x1\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0&quot; &gt; vender.bin<br>else<br>echo -e -n &quot;\\x$&#123;mac[0]&#125;\\x$&#123;mac[1]&#125;\\x$&#123;mac[2]&#125;\\x$&#123;mac[3]&#125;\\x$&#123;mac[4]&#125;\\x$&#123;mac[5]&#125;\\<br>\\x$(printf &#x27;%x&#x27; $macchecksum)\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0&quot;\\<br>\\SN=$sn&quot;,CHK=&quot;$checksum\\<br>&quot;\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x3C\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x1\\x1\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x1\\x1\\x1\\x1\\<br>\\x0\\x1\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x1\\x1\\x1\\x1\\<br>\\x1\\x0\\x1\\x1\\x1\\x1\\x1\\x0\\<br>\\x1\\x1\\x1\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x1\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\<br>\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0\\x0&quot; &gt; vender.bin<br>fi<br>dd if=vender.bin of=/dev/mtdblock3<br>rm vender.bin<br>echo Update Success! MAC:$macstr SN:$sn<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"解决猫盘掉ip问题\"><a href=\"#解决猫盘掉ip问题\" class=\"headerlink\" title=\"解决猫盘掉ip问题\"></a>解决猫盘掉ip问题</h2><h3 id=\"最蠢的办法，检查无IP重启\"><a href=\"#最蠢的办法，检查无IP重启\" class=\"headerlink\" title=\"最蠢的办法，检查无IP重启\"></a>最蠢的办法，检查无IP重启</h3><p>将下面脚本添加到，群晖的开机启动</p>\n<p>控制面板-任务计划-新增-触发的任务-用户自定义脚本-开机启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span><br>dt=`date &#x27;+%d/%m/%Y %H:%M:%S&#x27;`<br>echo &quot;$dt&quot;<br>sleep 60<br>num=`ping -c20 223.5.5.5 | tail -2 | head -1 | cut -f 3 -d&quot;,&quot; | cut -f 1 -d&quot;%&quot; | cut -f 2 -d&quot; &quot;`<br>echo $num<br>echo $?<br>if [ $? -eq 0 -a $num -eq 0 ]; then<br>echo &quot;$dt ok&quot; &gt;&gt; /result.txt<br>else<br>echo &quot;$dt noip loss $num reboot&quot; &gt;&gt; /result.txt<br>reboot<br>fi<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"其它办法\"><a href=\"#其它办法\" class=\"headerlink\" title=\"其它办法\"></a>其它办法</h3><p><a href=\"https://bbs.nas66.com/thread-17505-1-1.html\">https://bbs.nas66.com/thread-17505-1-1.html</a></p>\n<p><a href=\"https://bbs.nas66.com/thread-16639-1-1.html\">https://bbs.nas66.com/thread-16639-1-1.html</a></p>\n<p><a href=\"https://bbs.nas66.com/thread-7843-1-1.html\">https://bbs.nas66.com/thread-7843-1-1.html</a></p>\n<p><a href=\"https://bbs.nas66.com/thread-9350-1-1.html\">https://bbs.nas66.com/thread-9350-1-1.html</a></p>\n<p><a href=\"https://bbs.nas66.com/thread-4593-5-3.html\">https://bbs.nas66.com/thread-4593-5-3.html</a></p>\n<h2 id=\"群晖回退x3p\"><a href=\"#群晖回退x3p\" class=\"headerlink\" title=\"群晖回退x3p\"></a>群晖回退x3p</h2><p><a href=\"https://bbs.nas66.com/forum.php?mod=viewthread&tid=2661\">https://bbs.nas66.com/forum.php?mod=viewthread&amp;tid=2661</a></p>\n<p>主要就是刷x3p的UBOOT，插U盘，U盘放x3p的自动安装镜像</p>\n",
            "tags": [
                "cat_drive",
                "linux"
            ]
        },
        {
            "id": "https://www.oikiou.top/2021/154e1146/",
            "url": "https://www.oikiou.top/2021/154e1146/",
            "title": "CAD",
            "date_published": "2021-10-21T14:57:15.000Z",
            "content_html": "<h1 id=\"CAD\"><a href=\"#CAD\" class=\"headerlink\" title=\"CAD\"></a>CAD</h1><h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><ul>\n<li><p>对象捕捉：端点、中点、圆心、、、、、</p>\n</li>\n<li></li>\n<li><p>shift正交</p>\n</li>\n<li><p>shift按住，取消选择</p>\n</li>\n<li><p>连续画直线，空格取消</p>\n</li>\n<li><p>画直线，c键闭合</p>\n</li>\n</ul>\n<h1 id=\"形状\"><a href=\"#形状\" class=\"headerlink\" title=\"形状\"></a>形状</h1><h2 id=\"直线\"><a href=\"#直线\" class=\"headerlink\" title=\"直线\"></a>直线</h2><p>L键</p>\n<h2 id=\"圆\"><a href=\"#圆\" class=\"headerlink\" title=\"圆\"></a>圆</h2><p>C键</p>\n<h3 id=\"圆心-半径\"><a href=\"#圆心-半径\" class=\"headerlink\" title=\"圆心 半径\"></a>圆心 半径</h3><p>D键切换成直径</p>\n<h3 id=\"两点\"><a href=\"#两点\" class=\"headerlink\" title=\"两点\"></a>两点</h3><h3 id=\"三点\"><a href=\"#三点\" class=\"headerlink\" title=\"三点\"></a>三点</h3><h3 id=\"相切-相切-半径\"><a href=\"#相切-相切-半径\" class=\"headerlink\" title=\"相切 相切 半径\"></a>相切 相切 半径</h3><h3 id=\"相切-相切-相切\"><a href=\"#相切-相切-相切\" class=\"headerlink\" title=\"相切 相切 相切\"></a>相切 相切 相切</h3><p>快捷键不详</p>\n<h2 id=\"圆弧\"><a href=\"#圆弧\" class=\"headerlink\" title=\"圆弧\"></a>圆弧</h2><p>ARC键</p>\n<p>逆时针画圆弧</p>\n<h2 id=\"多段线\"><a href=\"#多段线\" class=\"headerlink\" title=\"多段线\"></a>多段线</h2><p>PLI键</p>\n<ul>\n<li>可以赋予宽度</li>\n</ul>\n<h3 id=\"合并多段线\"><a href=\"#合并多段线\" class=\"headerlink\" title=\"合并多段线\"></a>合并多段线</h3><ol>\n<li>PE (pedit 多段线编辑)</li>\n<li>m 选择多段线</li>\n<li>选中后空格确认</li>\n<li>y 转换</li>\n<li>j 合并</li>\n<li></li>\n</ol>\n<h2 id=\"矩形\"><a href=\"#矩形\" class=\"headerlink\" title=\"矩形\"></a>矩形</h2><h2 id=\"多边形\"><a href=\"#多边形\" class=\"headerlink\" title=\"多边形\"></a>多边形</h2><p>POL 键</p>\n<h1 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h1><h2 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h2><p>m 键 move</p>\n<h2 id=\"复制\"><a href=\"#复制\" class=\"headerlink\" title=\"复制\"></a>复制</h2><p>co </p>\n<h2 id=\"拉伸\"><a href=\"#拉伸\" class=\"headerlink\" title=\"拉伸\"></a>拉伸</h2><p>s</p>\n<h2 id=\"旋转\"><a href=\"#旋转\" class=\"headerlink\" title=\"旋转\"></a>旋转</h2><p>ro </p>\n<ul>\n<li>起点开始 逆时针</li>\n<li>c 复制，原来的保留并复制</li>\n<li>r 参照，参照线旋转</li>\n</ul>\n<h2 id=\"镜像\"><a href=\"#镜像\" class=\"headerlink\" title=\"镜像\"></a>镜像</h2><p>mi</p>\n<h2 id=\"缩放\"><a href=\"#缩放\" class=\"headerlink\" title=\"缩放\"></a>缩放</h2><p>sc</p>\n<ul>\n<li>r参照，参照边长缩放</li>\n</ul>\n<h2 id=\"对齐缩放\"><a href=\"#对齐缩放\" class=\"headerlink\" title=\"对齐缩放\"></a>对齐缩放</h2><p>al</p>\n<ul>\n<li>根据边对齐，根据边长缩放</li>\n</ul>\n<h2 id=\"修剪\"><a href=\"#修剪\" class=\"headerlink\" title=\"修剪\"></a>修剪</h2><p>tr</p>\n<ul>\n<li>不选基线默认修剪</li>\n</ul>\n<h2 id=\"延伸\"><a href=\"#延伸\" class=\"headerlink\" title=\"延伸\"></a>延伸</h2><p>ex</p>\n<ul>\n<li>不选基线默认延伸</li>\n</ul>\n<h2 id=\"倒角\"><a href=\"#倒角\" class=\"headerlink\" title=\"倒角\"></a>倒角</h2><p>cha</p>\n<h2 id=\"圆角\"><a href=\"#圆角\" class=\"headerlink\" title=\"圆角\"></a>圆角</h2><p>f</p>\n<h2 id=\"光顺曲线\"><a href=\"#光顺曲线\" class=\"headerlink\" title=\"光顺曲线\"></a>光顺曲线</h2><p>两个曲线光滑连接</p>\n<h2 id=\"矩形阵列\"><a href=\"#矩形阵列\" class=\"headerlink\" title=\"矩形阵列\"></a>矩形阵列</h2><h2 id=\"路径阵列\"><a href=\"#路径阵列\" class=\"headerlink\" title=\"路径阵列\"></a>路径阵列</h2><h2 id=\"圆形阵列\"><a href=\"#圆形阵列\" class=\"headerlink\" title=\"圆形阵列\"></a>圆形阵列</h2><h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><h2 id=\"修改注释标准-gt\"><a href=\"#修改注释标准-gt\" class=\"headerlink\" title=\"修改注释标准 (,-&gt;.)\"></a>修改注释标准 (,-&gt;.)</h2><p>标注样式-&gt;修改-&gt;主单位-&gt;逗号改成点号</p>\n<h2 id=\"空心字-文字转换成线\"><a href=\"#空心字-文字转换成线\" class=\"headerlink\" title=\"空心字 文字转换成线\"></a>空心字 文字转换成线</h2><p><strong>注意：</strong>安装默认不安装拓展工具，如果txtexp找不到命令，需要重装，安装的时候选择组件的时候选上Express Tools。</p>\n<ol>\n<li>mt 创建文字</li>\n<li>txtexp 将文字分解成文字轮廓</li>\n</ol>\n",
            "tags": [
                "cad"
            ]
        },
        {
            "id": "https://www.oikiou.top/2021/86880617/",
            "url": "https://www.oikiou.top/2021/86880617/",
            "title": "PC Hardware",
            "date_published": "2021-10-18T14:57:15.000Z",
            "content_html": "<h1 id=\"主板\"><a href=\"#主板\" class=\"headerlink\" title=\"主板\"></a>主板</h1><h2 id=\"ITX-主板的孔位图\"><a href=\"#ITX-主板的孔位图\" class=\"headerlink\" title=\"ITX 主板的孔位图\"></a>ITX 主板的孔位图</h2><p>括号中的数值单位是mm，下面的数值单位是inch。</p>\n<p><img src=\"/2021/86880617/v2-adfa6cb86a379f8ea31c62416c3a9b93_720w.jpg\" alt=\"img\"></p>\n<h2 id=\"ATX-孔位图\"><a href=\"#ATX-孔位图\" class=\"headerlink\" title=\"ATX 孔位图\"></a>ATX 孔位图</h2><p>数值单位是inch</p>\n<p><img src=\"/2021/86880617/v2-19cb957be912ef88b779a7ed04de4eaf_720w.jpg\" alt=\"img\"></p>\n<h1 id=\"DISK\"><a href=\"#DISK\" class=\"headerlink\" title=\"DISK\"></a>DISK</h1><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.snia.org/technology-communities/sff/specifications\">SNIA协会定义</a></li>\n<li>SFF-8301 (3.5” Form Factor Drive Dimensions)</li>\n<li>SFF-8201 (2.5” Form Factor Drive Dimensions)</li>\n</ul>\n<h2 id=\"2-5”\"><a href=\"#2-5”\" class=\"headerlink\" title=\"2.5”\"></a>2.5”</h2><p>定义于SFF-8201, 长度为101.85mm (max), 宽度为69.85，厚度有不同规格，从5mm到19.05mm不等。常用的笔记本硬盘是7mm厚度，企业级硬盘是15mm，螺丝孔为公制M3标准。</p>\n<p><img src=\"/2021/86880617/image-20211026113925717.png\" alt=\"image-20211026113925717\"></p>\n<p><img src=\"/2021/86880617/image-20211026113951361.png\" alt=\"image-20211026113951361\"></p>\n<p><img src=\"/2021/86880617/image-20211026114009000.png\" alt=\"image-20211026114009000\"></p>\n<p><img src=\"/2021/86880617/image-20211026114023653.png\" alt=\"image-20211026114023653\"></p>\n<h2 id=\"3-5”\"><a href=\"#3-5”\" class=\"headerlink\" title=\"3.5”\"></a>3.5”</h2><p>定义于SFF-8301,长度为147.00mm, 宽度为101.60mm，厚度有不同规格：17.80-42.00mm。通常硬盘的厚度都是小于26.10mm，螺丝孔为6-32 UNC-2B英制标准，公制M3.5也能凑合用。</p>\n<p><img src=\"/2021/86880617/image-20211026114433027.png\" alt=\"image-20211026114433027\"></p>\n<p><img src=\"/2021/86880617/image-20211026114447507.png\" alt=\"image-20211026114447507\"></p>\n<h1 id=\"Lenovo-私有定义\"><a href=\"#Lenovo-私有定义\" class=\"headerlink\" title=\"Lenovo 私有定义\"></a>Lenovo 私有定义</h1><h2 id=\"主板-1\"><a href=\"#主板-1\" class=\"headerlink\" title=\"主板\"></a>主板</h2><h3 id=\"USB2-0-接口\"><a href=\"#USB2-0-接口\" class=\"headerlink\" title=\"USB2.0 接口\"></a>USB2.0 接口</h3><p><img src=\"/2021/86880617/image-20211026120339401.png\" alt=\"image-20211026120339401\"></p>\n<p><img src=\"/2021/86880617/image-20211026120205476.png\" alt=\"image-20211026120205476\"></p>\n<h3 id=\"F-PANEL\"><a href=\"#F-PANEL\" class=\"headerlink\" title=\"F_PANEL\"></a>F_PANEL</h3><p><img src=\"/2021/86880617/image-20211026120411691.png\" alt=\"image-20211026120411691\"></p>\n<p><img src=\"/2021/86880617/image-20211026120130016.png\" alt=\"image-20211026120130016\"></p>\n",
            "tags": [
                "pc",
                "hardware",
                "lenovo",
                "disk"
            ]
        },
        {
            "id": "https://www.oikiou.top/2021/ee60585b/",
            "url": "https://www.oikiou.top/2021/ee60585b/",
            "title": "Synology 群晖",
            "date_published": "2021-10-18T14:57:15.000Z",
            "content_html": "<h1 id=\"群晖\"><a href=\"#群晖\" class=\"headerlink\" title=\"群晖\"></a>群晖</h1><h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"资源及参考链接\"><a href=\"#资源及参考链接\" class=\"headerlink\" title=\"资源及参考链接\"></a>资源及参考链接</h2><p><a href=\"https://www.openos.org/threads/dsm-6-2-3-2020-12-27.29/\">https://www.openos.org/threads/dsm-6-2-3-2020-12-27.29/</a></p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul>\n<li><p><strong>引导系统装哪里？</strong><br>非常关键的问题，DSM采用系统和数据相分离的结构，也就是说引导系统需要独立安装在一个设备上，通常是U盘&#x2F;SD&#x2F;TF卡、或者SSD硬盘上。数据需要额外安装独立的硬盘上。</p>\n</li>\n<li><p><strong>引导系统安装盘 (U盘&#x2F;USB flash drive&#x2F;随身碟)</strong><br>无论是U盘还是TF卡，其实128MB或以上就足够了，USB 2.0&#x2F;3.0都可以。</p>\n</li>\n<li><p><strong>数据存储硬盘 (硬盘)</strong><br>机械硬盘或者固态硬盘都可以，这个没有限制，容量当然越大越好。</p>\n</li>\n<li><p>一般来说安装黑群晖至少需要两个文件, 一个是黑群晖的引导文件, 一个是群晖DSM的系统文件.</p>\n</li>\n</ul>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><blockquote>\n<p>  黑群晖系统: DSM 6.2.0–6.2.3<br>  引导版本: 1.04b (首选推荐版本)<br>  针对机型: DS918+<br>  引导方式: 传统BIOS和UEFI<br>  引导下载地址<br>  <a href=\"https://www.openos.org/downloads/synology-dsm-6-2-1-loader-v1-04b.15/\">https://www.openos.org/downloads/synology-dsm-6-2-1-loader-v1-04b.15/</a></p>\n<p>  DS918+ DSM 6.2.3-25426 Update2 系统<br>  <a href=\"https://global.download.synology.com/download/DSM/release/6.2.3/25426/DSM_DS918+_25426.pat\">https://global.download.synology.com/download/DSM/release/6.2.3/25426/DSM_DS918+_25426.pat</a></p>\n<p>  其他DSM系统版本请看这里<br>  <a href=\"https://archive.synology.com/download\">https://archive.synology.com/download</a></p>\n</blockquote>\n<ol>\n<li><p>下载群晖的引导文件, 推荐下载<code>v1.04b.for.dms.6.2.1.synoboot-ds918.zip</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">http://down.nas2x.com/synology/dsm/6.2/synoboot/<br><span class=\"hljs-comment\"># 里面有三个文件</span><br>dsm.6.2.synoboot_ds3615xs.1.03b.zip                02-Aug-2018 10:43     17M<br>dsm.6.2.synoboot_ds3617xs.1.03b.zip                02-Aug-2018 10:42     20M<br>v1.04b.for.dms.6.2.1.synoboot-ds918.zip            25-Jan-2019 18:30     21M<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>下载群晖的系统, 根据上面的引导下载系统, 上面选的是<code>DS918+</code>的话, 这里下载<code>DS918+</code>就好.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># DS918+</span><br>https://global.download.synology.com/download/DSM/release/6.2.3/25426/DSM_DS918+_25426.pat<br><span class=\"hljs-comment\"># 其他DSM系统</span><br>https://archive.synology.com/download<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>修改引导程序配置文件,</p>\n<p>使用<code>ChipEasy</code>或者<code>ChipGenius</code>查找到U盘的VID和PID。</p>\n<p>以下图为例，这个U盘的VID是0930，PID是6544。</p>\n<p><strong>请记录好这两个值。下面修改配置文件需要用到。</strong></p>\n<p><img src=\"/2021/ee60585b/07.png\" alt=\"[IMG]\"></p>\n</li>\n<li><p>编辑配置文件grub.cfg.</p>\n<p>打开DiskGenius, 在顶部选择硬盘-打开虚拟硬盘文件, 选择刚刚下载的<code>.img</code>引导文件并打开.</p>\n<p><img src=\"/2021/ee60585b/kc6jjxmd.png\" alt=\"[IMG]\"></p>\n<p>在左边找到刚刚打开的img文件, 点击展开<code>ESP-&gt;grub</code>, 在右边找到<code>grub.cfg</code>, 选择复制到桌面.</p>\n<p><img src=\"/2021/ee60585b/kccTMt.md.png\" alt=\"[IMG]\"></p>\n<p>使用文本编辑器修改<code>line22-line25</code>的数据,</p>\n<p>需要注意的是<code>VID</code>和<code>PID</code>必须要和U盘的数值匹配好.</p>\n<p><code>SN</code>和<code>MAC1</code>是在洗半白的时候需要修改的数值, 是非必须修改的.</p>\n<blockquote>\n<p>set vid&#x3D;0x058f U盘的VID 实体机必须修改，虚拟机无需修改<br>set pid&#x3D;0x6387 U盘的PID 实体机必须修改，虚拟机无需修改<br>set sn&#x3D;A8ODN02468 序列号 可以不修改<br>set mac1&#x3D;0011322CA603 mac地址 可以不修改</p>\n</blockquote>\n<p>注意:vid和pid的0x是十六进制的意思是不要删除掉的，只需要修改后面的4位.</p>\n<p><img src=\"/2021/ee60585b/06.png\" alt=\"[IMG]\"></p>\n<p>回到DiskGenius内将原来的<code>grub.cfg</code>文件替换掉, 我这里是先将<code>img</code>镜像里面的<code>grub.cfg</code>文件删除, 再右键选择新增文件将编辑好的<code>grub.cfg</code>文件放入其中.</p>\n<p>关闭DiskGenius完成<code>img</code>引导的修改.</p>\n</li>\n<li><p><strong>制作引导U盘</strong></p>\n<p>使用<code>Win32 Disk Imager</code>磁盘映像工具将<code>img</code>引导文件写入U盘内.</p>\n<blockquote>\n<p>  下载地址:<a href=\"https://sourceforge.net/projects/win32diskimager/\">https://sourceforge.net/projects/win32diskimager/</a><br>  中文版:<a href=\"https://www.openos.org/downloads/win32-disk-imager.2/\">https://www.openos.org/downloads/win32-disk-imager.2/</a></p>\n</blockquote>\n<ul>\n<li><p>先在软件界面右侧设备(Device) 部分选择U盘的盘符。<br>（建议在操作前移除所有其他的USB存储设备，以防选择错误导致其他U盘或移动硬盘数据丢失）。</p>\n</li>\n<li><p>再点击软件界面 映像文件(Image File)右侧蓝色文件夹图标，选择之前下载的synoboot.img文件。</p>\n</li>\n<li><p>最后再点击写入(Write)。</p>\n</li>\n</ul>\n<p><img src=\"/2021/ee60585b/w11.png\" alt=\"[IMG]\"></p>\n</li>\n<li><p>安装群晖系统</p>\n<p>插入U盘，并且在主板上设置默认从U盘启动</p>\n<p>默认选择从U盘启动后选择第1个选项<code>DS3617xs 6.1 Baremetal with Jun&#39;s Mod v1.02-alpha</code>按回车。</p>\n<p><img src=\"/2021/ee60585b/2017041711.png\" alt=\"[IMG]\"></p>\n</li>\n<li><p>找到设备IP地址</p>\n<p>这里需要稍微等一等提示<code>Please open [http://find.synology.com](http://find.synology.com/) to continue</code>后等个1-2分钟在浏览器里面输入<a href=\"http://find.synology.com/\">http://find.synology.com/</a> ，搜索DSM，如果没有找到，那么使用SynologyAssistant查找. <a href=\"https://cndl.synology.cn/download/Tools/Assistant/6.1-15030/Windows/synology-assistant-6.1-15030.exe\">点击下载Windows版本</a> </p>\n<p>能进路由器管理页面的, 较好的方案是看一下群晖获取的IP是多少, 浏览器直接进去这个<code>IP:5000</code>的网页即可, 免去搜寻的麻烦.</p>\n<blockquote>\n<p>  若多次测试还是无法搜索到群晖，那可能是网卡不支持,<br>  详情请查看DSM黑群晖网卡支持列表<br>  <a href=\"https://www.openos.org/threads/dsm-6-1-supported-drivers.42/\">https://www.openos.org/threads/dsm-6-1-supported-drivers.42/</a></p>\n</blockquote>\n<p><img src=\"/2021/ee60585b/201704zoz.png\" alt=\"[IMG]\"></p>\n</li>\n<li><p>上传系统文件.</p>\n<p>根据提示继续，点击<code>手动安装</code>后选择之前下载的pat文件，然后再点击<code>立即安装</code>。</p>\n<p><img src=\"/2021/ee60585b/201704opo.png\" alt=\"[IMG]\"></p>\n<p><img src=\"/2021/ee60585b/201704ada.png\" alt=\"[IMG]\"></p>\n</li>\n<li><p>安装之后完成一些配置后就可以进入系统界面了.</p>\n</li>\n</ol>\n<h2 id=\"安装后的注意事项\"><a href=\"#安装后的注意事项\" class=\"headerlink\" title=\"安装后的注意事项\"></a>安装后的注意事项</h2><blockquote>\n<p>  <strong>安装完成后的基本设置和注意事项</strong><br>  1,不要升级，不要升级，不要升级。可以去控制面板下面的-更新和还原里面设置。<br>  2,还是不要升级，去计划任何里面关闭DSM自动更新选项。<br>  3,在存储空间管理员里面设置存储空间后才可以进行其他的操作，如共享文件夹或安装其他套件。<br>  4,DSM 6.x配置文件grub.cfg修改: <a href=\"https://www.openos.org/threads/dsm-6-x-grub-cfg-mac-sn.36/\">https://www.openos.org/threads/dsm-6-x-grub-cfg-mac-sn.36/</a></p>\n<p>  群辉Synology DSM 添加硬盘&#x2F;存储空间的方法<br>  <a href=\"https://www.openos.org/threads/synology-dsm-hdd.30/\">https://www.openos.org/threads/synology-dsm-hdd.30/</a></p>\n<p>  6.1驱动支持列表<br>  <a href=\"https://www.openos.org/threads/dsm-6-1-supported-drivers.42/\">https://www.openos.org/threads/dsm-6-1-supported-drivers.42/</a></p>\n<p>  经过测试，引导文件支持DSM 6.1.1-15101<br>  但是不支持从老版本升级升级，仅限全新安装<br>  安装后更新到update 2没有问题<br>  <a href=\"https://www.openos.org/downloads/xpenology-dsm-6-1-1.8/history\">https://www.openos.org/downloads/xpenology-dsm-6-1-1.8/history</a></p>\n</blockquote>\n<blockquote>\n<p>  安装完成后可以下载一些相关的手机端应用<br>  DS Finder<br>  DS File<br>  DS photo</p>\n</blockquote>\n<h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><h2 id=\"SSH访问启动盘\"><a href=\"#SSH访问启动盘\" class=\"headerlink\" title=\"SSH访问启动盘\"></a>SSH访问启动盘</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">mkdir /mnt/boot<br>cd /dev<br>sudo mount -t vfat synoboot1 /mnt/boot<br>cd /mnt/boot<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"半洗白-SN\"><a href=\"#半洗白-SN\" class=\"headerlink\" title=\"半洗白 SN\"></a>半洗白 SN</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><ul>\n<li>全黑版本的群晖VideoStation不能离线转码，PhotoStation和Moments的略缩图和人像识别也会有问题</li>\n<li>半洗白就是转码和缩略图一类的可用</li>\n<li>全白就是多了QC，这个就没必要了(白嫖个系统就好了,就不要去嫖别人的服务器了)</li>\n<li>主要通过Docker+DDSM来获得SN</li>\n<li>群辉新版的Docker 18.09.0-0506已经关闭了DDSM安装，可下载17.05.0版本的Docker</li>\n</ul>\n<h3 id=\"步骤-1\"><a href=\"#步骤-1\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li><p>下载17.05.0的Docker，可以在<a href=\"https://archive.synology.com/download/Package/Docker/17.05.0-0401\">群晖官网下载</a>。</p>\n</li>\n<li><p>下载DDSM，可在<a href=\"https://archive.synology.com/download/Os/DSM/6.2.3-25426\">群晖官网下载</a>，注意要对应自己DSM的版本。</p>\n</li>\n<li><p>首先在套件中心点手动安装把第一步下载的17.05.0的Docker放进去。</p>\n</li>\n<li><p>打开Docker-左侧DSM-点击新增-下一步-下一步-下一步-手动上传，把刚刚下载的DDSM放进去，等待他安装完成。</p>\n</li>\n<li><p>安装完成后，进入DDSM群晖的控制面板。</p>\n</li>\n<li><p>在信息栏可看到SN和MAC，复制DDSM的SN和MAC保存下来。</p>\n</li>\n<li><p>SSH接入DSM群晖，挂载启动盘BOOT，修改<code>/grub/grub.cfg</code>文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">挂载启动盘BOOT</span><br>mkdir /mnt/boot<br>cd /dev<br>sudo mount -t vfat synoboot1 /mnt/boot<br>cd /mnt/boot<br></code></pre></td></tr></table></figure></li>\n<li><p>重启。</p>\n</li>\n</ol>\n<p><img src=\"/2021/ee60585b/image-20211018141146176.png\" alt=\"image-20211018141146176\"></p>\n<h2 id=\"半洗白后moments人脸识别不出来\"><a href=\"#半洗白后moments人脸识别不出来\" class=\"headerlink\" title=\"半洗白后moments人脸识别不出来\"></a>半洗白后moments人脸识别不出来</h2><h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><p>当群晖系统升级到6.22-24922以后，Moments也升级到了1.3.X，新的bug也随着版本升级来了”人物或者主题经常识别不出来“，经查日志后发现是Moments1.3插件有bug引导的，有问题的插件为“<strong>libsynophoto-plugin-detection.so</strong>”，经测试该插件在Moments1.2版本中是正常的。</p>\n<h3 id=\"步骤-2\"><a href=\"#步骤-2\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li><p>群晖上启用SSH，并将moments停用</p>\n</li>\n<li><p>MobaXterm连接群晖，启用root登录</p>\n<ol>\n<li><code>sudo -i</code></li>\n<li><code>vi /etc/ssh/sshd_config</code></li>\n<li>找到#PermitRootLogin prohibit password，这一行最后，按回车，然后输入 <code>PermitRootLogin yes</code></li>\n<li>修改root密码<code>synouser --setpw root 你的密码</code></li>\n<li>重启</li>\n</ol>\n</li>\n<li><p>用root重新登录，将libsynophoto-plugin-detection.so插件替换掉</p>\n<ol>\n<li>找到目录：&#x2F;var&#x2F;packages&#x2F;SynologyMoments&#x2F;target&#x2F;usr&#x2F;lib&#x2F;libsynophoto-plugin-detection.so</li>\n<li>将原文件先备份一下</li>\n<li>用现有新文件将他替换掉</li>\n<li>新文件权限修改一下</li>\n</ol>\n</li>\n<li><p>将moments启用，问题解决</p>\n</li>\n</ol>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p><a href=\"https://www.zhihu.com/question/428454266/answer/1681110862?ivk_sa=1024320u\">https://www.zhihu.com/question/428454266/answer/1681110862?ivk_sa=1024320u</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_36059505/article/details/112766321\">https://blog.csdn.net/weixin_36059505/article/details/112766321</a></p>\n<h2 id=\"群晖安装-ipkg-包管理\"><a href=\"#群晖安装-ipkg-包管理\" class=\"headerlink\" title=\"群晖安装 ipkg 包管理\"></a>群晖安装 ipkg 包管理</h2><p><strong>仅适用于x86平台，ARM平台需要修改链接</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">以 root 用户执行</span><br>sudo -i<br>cd /volume1/@tmp<br>wget http://ipkg.nslu2-linux.org/feeds/optware/syno-i686/cross/unstable/syno-i686-bootstrap_1.2-7_i686.xsh<br>chmod +x syno-i686-bootstrap_1.2-7_i686.xsh<br>sh syno-i686-bootstrap_1.2-7_i686.xsh<br>rm syno-i686-bootstrap_1.2-7_i686.xsh<br>ipkg update<br>reboot<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"CPU频率调整\"><a href=\"#CPU频率调整\" class=\"headerlink\" title=\"CPU频率调整\"></a>CPU频率调整</h2><ol>\n<li><p>Linux的&#x2F;sys&#x2F;devices&#x2F;system&#x2F;cpu&#x2F;cpu*&#x2F;cpufreq目录存储着第*个CPU的一些参数，例如最小最大平均频率，bios限制频率。</p>\n</li>\n<li><p>使用如下命令可以查看支持的工作模式：</p>\n <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">cat <span class=\"hljs-regexp\">/sys/</span>devices<span class=\"hljs-regexp\">/system/</span>cpu<span class=\"hljs-regexp\">/cpu0/</span>cpufreq/scaling_available_governors<br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>介绍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>powersave</td>\n<td>只会保持最低频率，节能省电</td>\n</tr>\n<tr>\n<td>userspace</td>\n<td>自定义频率</td>\n</tr>\n<tr>\n<td>ondemand</td>\n<td>一有cpu计算量的任务，就会立即达到最大频率运行，等执行完毕就立即回到最低频率</td>\n</tr>\n<tr>\n<td>conservative</td>\n<td>根据负载状态自动在频率上下限调整</td>\n</tr>\n<tr>\n<td>performance</td>\n<td>保持以最大频率运行</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>通过下面指令可以看第*个CPU核心的工作状态，</p>\n <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">cat <span class=\"hljs-regexp\">/sys/</span>devices<span class=\"hljs-regexp\">/system/</span>cpu<span class=\"hljs-regexp\">/cpu*/</span>cpufreq/scaling_governor<br></code></pre></td></tr></table></figure></li>\n</ol>\n<p>安装cpufreq-info：</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\">ipkg update<br>ipkg <span class=\"hljs-keyword\">install</span> cpufrequtils<br></code></pre></td></tr></table></figure>\n\n<p>查看CPU频率和模式</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cpufreq-info<br></code></pre></td></tr></table></figure>\n\n<p>修改模式：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dos\">cpufreq-<span class=\"hljs-built_in\">set</span> -c * -g <span class=\"hljs-built_in\">MODE</span><br></code></pre></td></tr></table></figure>\n\n<p>例如将四个核心全部ondemand：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gams\">cpufreq-<span class=\"hljs-keyword\">set</span> -c <span class=\"hljs-comment\">0 -g ondemand</span><br>cpufreq-<span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">-c 1 -g ondemand</span><br>cpufreq-<span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">-c 2 -g ondemand</span><br>cpufreq-<span class=\"hljs-keyword\">set</span> <span class=\"hljs-comment\">-c 3 -g ondemand</span><br></code></pre></td></tr></table></figure>\n\n<p>为了下次开机也自动生效，可以手动添加启动脚本。将其存成.sh，开启启动即可</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">#<span class=\"hljs-regexp\">/bin/</span>bash<br><span class=\"hljs-regexp\">/opt/</span>bin/cpufreq-set -c <span class=\"hljs-number\">0</span> -g ondemand<br><span class=\"hljs-regexp\">/opt/</span>bin/cpufreq-set -c <span class=\"hljs-number\">1</span> -g ondemand<br><span class=\"hljs-regexp\">/opt/</span>bin/cpufreq-set -c <span class=\"hljs-number\">2</span> -g ondemand<br><span class=\"hljs-regexp\">/opt/</span>bin/cpufreq-set -c <span class=\"hljs-number\">3</span> -g ondemand<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"lm-sensors-风扇控制\"><a href=\"#lm-sensors-风扇控制\" class=\"headerlink\" title=\"lm-sensors 风扇控制\"></a>lm-sensors 风扇控制</h2><p>执行安装命令</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\">ipkg <span class=\"hljs-keyword\">install</span> lm-sensors<br></code></pre></td></tr></table></figure>\n\n<p>查看温度</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">sensors</span><br></code></pre></td></tr></table></figure>\n\n<p>配置风扇控制，这块主要的目的只检测风扇在那一路，一般主板会涉及到多个风扇，但不一定都会安装，所以通过pwmconfig来检测与测试风扇的转速控制。</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">sudo pwmconfig</span><br></code></pre></td></tr></table></figure>\n\n<p>使用fancontrol自动控制风扇转速，他的原理就是定时执行脚本，监控CPU温度、根据不同的温度区间控制PWM值，从而改变风扇的转速。<br>当转速降低了后，噪音自然就解决了。</p>\n<p>fancontrol会依赖pwmconfig命令生成的配置文件。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">/etc/</span>fancontrol<br><br>-----------配置内容如下--------------<br><span class=\"hljs-comment\"># Configuration file generated by pwmconfig, changes will be lost</span><br>INTERVAL=<span class=\"hljs-number\">10</span><br>DEVPATH=hwmon0=devices<span class=\"hljs-regexp\">/platform/</span>coretemp.<span class=\"hljs-number\">0</span> hwmon1=devices<span class=\"hljs-regexp\">/platform/i</span>t87.<span class=\"hljs-number\">2624</span><br>DEVNAME=hwmon0=coretemp hwmon1=it8772<br>FCTEMPS=hwmon1<span class=\"hljs-regexp\">/device/</span>pwm2=hwmon0<span class=\"hljs-regexp\">/device/</span>temp3_input<br>FCFANS= hwmon1<span class=\"hljs-regexp\">/device/</span>pwm2=hwmon1<span class=\"hljs-regexp\">/device/</span>fan2_input<br>MINTEMP=hwmon1<span class=\"hljs-regexp\">/device/</span>pwm2=<span class=\"hljs-number\">20</span><br>MAXTEMP=hwmon1<span class=\"hljs-regexp\">/device/</span>pwm2=<span class=\"hljs-number\">60</span><br>MINSTART=hwmon1<span class=\"hljs-regexp\">/device/</span>pwm2=<span class=\"hljs-number\">150</span><br>MINSTOP=hwmon1<span class=\"hljs-regexp\">/device/</span>pwm2=<span class=\"hljs-number\">100</span><br></code></pre></td></tr></table></figure>\n\n<p>默认生成的配置基本能够满足需求，经过测试风扇在2000转左右噪音相对能够接受。</p>\n<h2 id=\"VideoStation\"><a href=\"#VideoStation\" class=\"headerlink\" title=\"VideoStation\"></a>VideoStation</h2><p>参考：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/357332211\">关于群晖NAS video station TMDB连接测试失败及搜刮结果下载失败的解决方案</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/152351243\">（群晖）关于Video Station内电影及电视剧封面简介为空白的处理方法</a></p>\n<h3 id=\"步骤-3\"><a href=\"#步骤-3\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ul>\n<li><p>TMDB的图片服务器被屏蔽需要修改hosts 加上 api.themoviedb.org 的ip</p>\n</li>\n<li><p>修改hosts后即可测试，已经连通</p>\n</li>\n<li><p>搜刮信息会出现下载失败，主要是下载图片的url需要切换一下</p>\n<p>  编辑 util_themoviedb.php 文件</p>\n  <figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">cd /var/packages/VideoStation/target/plugins<br>vi util_themoviedb.php<br></code></pre></td></tr></table></figure>\n  <figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\"># 找到下面的语句<br>define(&#x27;API_URL&#x27;, &#x27;https://api.themoviedb.org/3/&#x27;);<br>define(&#x27;BANNER_URL&#x27;, &#x27;https://image.tmdb.org/t/p/w500&#x27;);<br>define(&#x27;BACKDROUP_URL&#x27;, &#x27;https://image.tmdb.org/t/p/original&#x27;);<br><br># 我们只需要把改为<br>image.tmdb.org<br># 改为<br>www.themoviedb.org<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Gogs\"><a href=\"#Gogs\" class=\"headerlink\" title=\"Gogs\"></a>Gogs</h2><h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://blog.csdn.net/cfan927/article/details/100862989\">【工具】群晖利用docker安装Gogs代码管理平台</a></p>\n<h3 id=\"步骤-4\"><a href=\"#步骤-4\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li><p>打开“Docker”-&gt;”注册表”，搜索Gogs并“右键”-&gt;“下载此映像”</p>\n<p><img src=\"/2021/ee60585b/watermark.png\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>在”映像“页面中安装Gogs容器后，切换到”容器“页面，然后双击打开Gogs详情页</p>\n<ol>\n<li>设定容器的本地端口</li>\n<li>设定桌面快捷方式</li>\n</ol>\n</li>\n<li><p>Gogs配置</p>\n<ol>\n<li><p>Windows中用ssh登录群晖服务器，cd到mariaDB目录下：</p>\n<p><code>cd /volume1/@appstore/MariaDB10/usr/local/mariadb10/bin/</code></p>\n</li>\n<li><p>输入命令 <code>./mysql -u root -p</code>，然后输入密码，连接数据库</p>\n</li>\n<li><p>输入命令 <code>use mysql</code>切换到mysql数据库</p>\n</li>\n<li><p>创建数据库gogs<br> <code>CREATE DATABASE IF NOT EXISTS gogs;</code></p>\n</li>\n<li><p>输入下面的命令获取数据库远程访问权限 ：</p>\n<p><code>GRANT ALL PRIVILEGES ON gogs.* TO &#39;user&#39;@&#39;%&#39; IDENTIFIED BY &#39;password&#39; WITH GRANT OPTION;</code><br>其中user为用户名<br>password为用户密码</p>\n</li>\n<li><p>然后用<code>show databases;</code>命令查看一下结果</p>\n</li>\n</ol>\n</li>\n<li><p>gogs:port 设定相关参数即可</p>\n</li>\n<li><p>着重需要说明的是：</p>\n</li>\n<li><p>tips</p>\n<ol>\n<li>删除数据库  <code>DROP DATABASE gogs;</code></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"Note-1\"><a href=\"#Note-1\" class=\"headerlink\" title=\"Note\"></a>Note</h3><ul>\n<li>gogs 的配置保存在<code>/data/gogs/conf/app.ini</code> 参考下图</li>\n</ul>\n<p><img src=\"/2021/ee60585b/image-20211103161058734.png\" alt=\"image-20211103161058734\"></p>\n<ul>\n<li><strong>注意</strong> MariaDB的port默认是不开的，需要去套件里面打开。</li>\n</ul>\n<blockquote>\n<ol>\n<li><strong>Domain</strong> 填写Docker宿主机的物理IP地址，或者域名地址,注意这里是不带 http的 如： 192.168.137.140 或 git.mydomain.com</li>\n<li><strong>SSH port</strong> 假如Docker映射的端口是 10022:22 那么这里就填写宿主机开放的端口 10022</li>\n<li><strong>HTTP port</strong> 假如Docker映射的端口是 10080:3000 这里要填容器内的监听端口 3000</li>\n<li><strong>Application URL</strong> 这里要填写的格式为 http(s)?&#x2F; + Domain + HTTP port ，比如：<a href=\"http://git.mydomain.com/10080\">http://git.mydomain.com/10080</a> 。还需要注意的一点是，如果你用了nginx来映射宿主机的 10080 端口，这里要去掉后面的端口，即 <a href=\"http://git.mydomain.com/%EF%BC%8C%E8%AF%B4%E7%99%BD%E4%BA%86%E5%B0%B1%E6%98%AF%E4%BD%A0%E5%9C%A8%E5%A4%96%E9%83%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E8%AE%BF%E9%97%AE%E7%9A%84%E5%9C%B0%E5%9D%80%E3%80%82\">http://git.mydomain.com/，说白了就是你在外部浏览器上访问的地址。</a></li>\n</ol>\n</blockquote>\n<ul>\n<li><strong>注意</strong>非标准port的ssh需要注意clone地址是否正确</li>\n</ul>\n<h4 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h4><p><a href=\"https://github.com/gogs/gogs/discussions/6876\">https://github.com/gogs/gogs/discussions/6876</a></p>\n<ul>\n<li><p><strong>数据备份</strong></p>\n</li>\n<li><p>因为容器内的 <code>/data</code> 目录是直接挂载到宿主机的，我们把容器内备份目录设置为 <code>/data</code> ， 方便宿主机将备份文件同步到远程备份服务器。</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker container exec gogs su - git -s /bin/ash \\<br>-c &quot;/app/gogs/gogs backup \\<br>--config=/data/gogs/conf/app.ini \\<br>--target=/gogs&quot;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">注意挂载目录的权限</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>数据恢复</strong></p>\n</li>\n<li><p>用docker完成gogs部署之后，进入容器，执行下面命令</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker container exec -it gogs su - git -s /bin/ash \\<br>-c &quot;/app/gogs/gogs restore \\<br>--config=/data/gogs/conf/app.ini \\<br>--tempdir=/data \\<br>--from=/data/gogs-backup-20211230091744.zip&quot;<br><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>注意：</strong></p>\n</li>\n<li><p>备份和恢复时，使用的 gogs 版本必须是一致的</p>\n</li>\n<li><p>备份和恢复时，使用的 mysql 版本必须是一致的</p>\n</li>\n</ul>\n<h4 id=\"自述文档\"><a href=\"#自述文档\" class=\"headerlink\" title=\"自述文档\"></a>自述文档</h4><p>Create a plain text file then move to directory <code>custom/conf/readme/README</code> and <strong>restart Gogs.</strong></p>\n<ul>\n<li><code>&#123;Name&#125;</code>: Repository name</li>\n<li><code>&#123;Description&#125;</code>: Repository description</li>\n<li><code>&#123;CloneURL.SSH&#125;</code>: Repository SSH clone address</li>\n<li><code>&#123;CloneURL.HTTPS&#125;</code>: Repository HTTP&#x2F;HTTPS clone address</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">&#123;Name&#125;</span><br>&#123;Name&#125; Repository<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"><span class=\"hljs-comment\"># Tip</span></span><br>You can get the development version of this repo via<br>**git clone &#123;CloneURL.SSH&#125;**<br>or<br>**git clone &#123;CloneURL.HTTPS&#125;**<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"><span class=\"hljs-comment\"># Bref</span></span><br>&#123;Description&#125;<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\"><span class=\"hljs-comment\"># Details</span></span><br><br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"zerotier\"><a href=\"#zerotier\" class=\"headerlink\" title=\"zerotier\"></a>zerotier</h2><table>\n<thead>\n<tr>\n<th>img name</th>\n<th>last version</th>\n<th>notes</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>henrist-zerotier-one1</td>\n<td>1.6.6</td>\n<td>没有自动配置路由</td>\n</tr>\n<tr>\n<td>bltavares zerotier</td>\n<td>1.6.6</td>\n<td>网络不通</td>\n</tr>\n<tr>\n<td>zyclonite&#x2F;zerotier&#x2F;</td>\n<td>1.8.4</td>\n<td>没有自动配置路由 配置路由后正常</td>\n</tr>\n<tr>\n<td>spikhalskiy-zerotier1</td>\n<td>1.8.2</td>\n<td>运行会报错<code>zerotier-cli: /usr/lib/libstdc++.so.6: no version information available (required by zerotier-cli)</code>, 没有自动配置路由 配置路由后正常</td>\n</tr>\n<tr>\n<td>zerotier-zerotier-synology</td>\n<td>1.8.4</td>\n<td>没有自动配置路由 配置路由后正常</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">docker run <span class=\"hljs-string\">\\</span><br>  -d <span class=\"hljs-string\">\\</span><br>  --restart always <span class=\"hljs-string\">\\</span><br>  --name zerotier-one <span class=\"hljs-string\">\\</span><br>  --device /dev/net/tun <span class=\"hljs-string\">\\</span><br>  --net host <span class=\"hljs-string\">\\</span><br>  --cap-add NET_ADMIN <span class=\"hljs-string\">\\</span><br>  --cap-add SYS_ADMIN <span class=\"hljs-string\">\\</span><br>  -v /<span class=\"hljs-keyword\">var</span>/lib/zerotier-one:/<span class=\"hljs-keyword\">var</span>/lib/zerotier-one <span class=\"hljs-string\">\\</span><br>  zerotier/zerotier-synology<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"第三方套件\"><a href=\"#第三方套件\" class=\"headerlink\" title=\"第三方套件\"></a>第三方套件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">矿神</span><br>https://spk.imnks.com/<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"群晖的备份-还原\"><a href=\"#群晖的备份-还原\" class=\"headerlink\" title=\"群晖的备份 还原\"></a>群晖的备份 还原</h2><p>晖硬盘接到电脑上使用diskgenius查看，有三个分区：系统、swap交换分区、数据存储区，所有的硬盘都有这三个分区。</p>\n<blockquote>\n<p>  交换分区，英文是swap，意思是“交换”、“实物交易”。 它的功能就是在内存不够的情况下，操作系统先把内存中暂时不用的数据，存到硬盘的交换空间，腾出内存来让别的程序运行，和Windows的虚拟内存（pagefile.sys）的作用是一样的。</p>\n</blockquote>\n<p><img src=\"/2021/ee60585b/image-20220918161100014.png\" alt=\"image-20220918161100014\"></p>\n<p>弄清楚这三个分区是做什么的就很简单了, 我们备份和还原自然也就是备份和还原第一个系统分区了.</p>\n<p>需要注意的是群晖的系统存在于任何一块硬盘内, <strong>所以还原分区的时候需要将分区还原到每一块硬盘内才行</strong>.</p>\n<blockquote>\n<p>  如果只还原一块后，开机进入系统，系统会提示修复，虽然也能成功但是并不建议这么做</p>\n</blockquote>\n<h2 id=\"群晖-硬盘扩容-硬盘升级\"><a href=\"#群晖-硬盘扩容-硬盘升级\" class=\"headerlink\" title=\"群晖 硬盘扩容 硬盘升级\"></a>群晖 硬盘扩容 硬盘升级</h2><p>紧跟上面, 如果我们需要进行硬盘扩容, 比如原来的硬盘128G, 现在购入一块新硬盘256G, 我们需要用256去替换原来的硬盘, 但是现有设备上盘位已经插满了或者是属于单盘位的机器, 这时候就要把硬盘拆下来手动将数据进行转移.</p>\n<blockquote>\n<p>  我的大致思路是使用DG全盘拷贝到256G硬盘上(当时尝试的时候没有找到这方面的文章, 不知道该怎么样操作, 担心数据出问题所以就用了全盘拷贝), 然后上电开机SSH登录上去扩容一下分区就好.</p>\n</blockquote>\n<p><strong>克隆数据</strong></p>\n<p>首先打开<code>DiskGenius</code>软件 选择 -&gt; <code>工具</code> -&gt; <code>克隆磁盘</code> 我这里选的是按扇区全盘克隆.</p>\n<p>讲道理来说将<code>系统区</code>、<code>数据存储区</code>拷贝过去, 再划分出<code>swap交换分区</code>应该也是可以的.</p>\n<p>等待克隆完成.</p>\n<p><strong>扩容分区</strong></p>\n<p>磁盘克隆完成后, 旧的硬盘先不能格式化掉, 需要先留着以防万一.</p>\n<p>将新的硬盘安装回群晖, 并上电开机, 开机一切正常, 查看存储管理器会发现, 256的磁盘只显示了128G, 这个时候我们就需要登录SSH进行下一步操作了.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 首先查看一下新放进去的盘的挂载位置</span><br>$ fdisk -l<br>Disk /dev/sda: 232.9 GiB, 250059350016 bytes, 488397168 sectors<br>Units: sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disklabel <span class=\"hljs-built_in\">type</span>: dos<br><br><span class=\"hljs-comment\"># 上面可以看到 设备在`/dev/sda` 这里的sda里面的a是按顺序来的 第二个第三个盘就是sdb sdc 类推</span><br><span class=\"hljs-comment\"># 输入命令后它会让我们输入结束地址, 我们这里直接回车, 设定地址为最末尾</span><br>$ parted /dev/sda resizepart 3<br>End?  [250GB]?<br>Information: You may need to update /etc/fstab.<br><br><span class=\"hljs-comment\"># 这里运行的时候报错了, 但是时间有点久没有记录下来给忘记了, 哎这些东西还是不能拖, 要立刻记录下来才行</span><br>$ resize2fs -f /dev/sda3 <br>resize2fs 1.42.6 (21-Sep-2012)<br>.....<br><br><span class=\"hljs-comment\"># 再次查看扩容完成</span><br>$ fdisk -l<br></code></pre></td></tr></table></figure>\n\n<p><strong>参考:</strong></p>\n<p><a href=\"https://imnks.com/389.html\">群晖升级硬盘 磁盘克隆后的简单扩容教程</a></p>\n<h2 id=\"群晖安装USB网卡驱动-AX88179A-6-2-3\"><a href=\"#群晖安装USB网卡驱动-AX88179A-6-2-3\" class=\"headerlink\" title=\"群晖安装USB网卡驱动 AX88179A 6.2.3\"></a>群晖安装USB网卡驱动 AX88179A 6.2.3</h2><p><img src=\"/2021/ee60585b/image-20220926214605083.png\" alt=\"image-20220926214605083\"></p>\n<ol>\n<li><p>将USB网卡插入群晖</p>\n</li>\n<li><p>下载驱动程序 <a href=\"%E7%BE%A4%E6%99%96/ax88179_178a.ko.zip\">ax88179_178a.ko.zip</a></p>\n</li>\n<li><p>解压后将<code>ax88179_178a.ko</code>文件复制到群晖的<code>/lib/modules/</code>目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cp</span> /volume......./ax88179_178a.ko /lib/modules<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>使用命令 <code>chmod 644 ax88179_178a.ko</code>修改文件权限为<code>-rw-r--r--</code></p>\n</li>\n<li><p>加载驱动<code>insmod /lib/modules/ax88179_178a.ko </code> </p>\n<ol>\n<li><p>我这里当时报错了, 但是似乎并没有什么影响</p>\n</li>\n<li><p><code>insmod: ERROR: could not insert module /lib/modules/ax88179_178a.ko: Invalid module format</code></p>\n</li>\n<li><p>拓展一下</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 获取已加载的驱动列表</span><br>lsmod<br><span class=\"hljs-comment\"># 卸载驱动</span><br><span class=\"hljs-comment\"># 参数为lsmod获取到的驱动名称，而不是路径</span><br>rmmod ax88179_178a<br></code></pre></td></tr></table></figure></blockquote>\n</li>\n</ol>\n</li>\n<li><p>启用网卡 <code>ifconfig eth1 up</code></p>\n</li>\n<li><p>重新启动</p>\n</li>\n</ol>\n<blockquote>\n<p>  网上很多blog写需要添加启动项, 但是我这里并没有添加 看起来也没有什么问题.</p>\n<p>  添加启动项的操作是在群晖的<code>设置</code>里面 添加一个<code>任务计划</code>开机触发执行下面这个脚本</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">insmod /lib/modules/ax88179_178a.ko<br>ifconfig eth1 up<br></code></pre></td></tr></table></figure>\n\n</blockquote>\n<h2 id=\"PC通过群晖的网卡桥接上网\"><a href=\"#PC通过群晖的网卡桥接上网\" class=\"headerlink\" title=\"PC通过群晖的网卡桥接上网\"></a>PC通过群晖的网卡桥接上网</h2><p><strong>注意</strong>:首先需要确定Open vSwitch是开启的. 控制面板-&gt;网络-&gt;网络界面-&gt;管理，打开Open vSwitch（如果使用了VMM套件会自动开启，而且提示无法禁用）.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 路径图</span><br>网关(路由器) &lt;-eth0-&gt; 群晖 &lt;-eth1-&gt; PC<br></code></pre></td></tr></table></figure>\n\n<p>装了群晖的Virtual Machine Manager后一个接口会多出来一块网卡, 其中<code>eth0</code>是物理网卡, <code>ovs_eth0</code>是Open vSwitch这个网络管理工具虚拟出来的网卡.</p>\n<p>一般来说<code>eth0</code>会空闲, 流量都是通过<code>ovs_eth0</code>这个虚拟网卡, 其中<code>eth0</code>会被配置成与<code>ovs_eth0</code>桥接</p>\n<hr>\n<p><strong>修改配置文件</strong></p>\n<p>如你的电脑接在群晖的第一个网口<code>eth0</code>就修改<code>ifcfg-eth0</code>，接的是第二个网口<code>eth1</code>就修改<code>ifcfg-eth1</code>(本例)。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 编辑</span><br>vim /etc/sysconfig/network-scripts/ifcfg-eth1<br><span class=\"hljs-comment\"># 将BRIDGE 改成ovs_eth0</span><br><span class=\"hljs-comment\"># 原BRIDGE=ovs_eth1</span><br>BRIDGE=ovs_eth0<br><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>   <code>/etc/sysconfig/network-scripts/ifcfg-eth1</code>文件参数简介</p>\n<p>  <img src=\"/2021/ee60585b/1841273-20191019215624473-1921771223.png\" alt=\"img\"></p>\n</blockquote>\n<p><strong>命令修改</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">查看当前网桥 可以看到有两个网桥 ovs_eth0 和 ovs_eth1</span><br><span class=\"hljs-meta prompt_\">&gt; </span><span class=\"language-bash\">ovs-vsctl show</span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">我们将网桥 ovs_eth1 删除, 并将 eth1 加入到 网桥ovs_eth0</span><br><span class=\"hljs-meta prompt_\">&gt; </span><span class=\"language-bash\">ovs-vsctl del-br ovs_eth1</span><br><span class=\"hljs-meta prompt_\">&gt; </span><span class=\"language-bash\">ovs-vsctl add-port ovs_eth0 eth1</span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">再次查看网桥状态</span><br><span class=\"hljs-meta prompt_\">&gt; </span><span class=\"language-bash\">ovs-vsctl show</span><br>Bridge &quot;ovs_eth0&quot;<br>        Port &quot;eth1&quot;<br>            Interface &quot;eth1&quot;<br>        Port &quot;eth0&quot;<br>            Interface &quot;eth0&quot;<br>        Port &quot;ovs_eth0&quot;<br>            Interface &quot;ovs_eth0&quot;<br>                type: internal<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">此时eth0和eth1全部在ovs_eth0内，即两个网口处于同一个交换机内。</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">将eth1和电脑相连，发现电脑可以正常从路由器获取IP地址，并正常上网</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"PC通过群晖的网卡NAT上网\"><a href=\"#PC通过群晖的网卡NAT上网\" class=\"headerlink\" title=\"PC通过群晖的网卡NAT上网\"></a>PC通过群晖的网卡NAT上网</h2><p>这里主要是利用<code>iptable</code>路由流量.</p>\n<p>首先补个<code>iptable</code>的教程</p>\n<p><a href=\"https://wooyun.js.org/drops/Iptables%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html\">Iptables入门教程</a></p>\n<ol>\n<li>我们需要先给<code>局域网2 eth1</code>设置一个静态ip <code>192.168.88.1/24 gw 192.168.88.1</code></li>\n<li>然后在DHCP服务器端开启<code>局域网2 eth1</code>的DHCP服务, 网关填<code>192.168.88.1</code></li>\n<li>然后配置<code>iptable</code>开启网口转发</li>\n</ol>\n<p><img src=\"/2021/ee60585b/image-20221121215936519.png\" alt=\"image-20221121215936519\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">开启群晖的转发功能</span><br>echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">为PC添加 去往群晖的 路由表 群晖开了对应接口的DHCP就不需要了</span><br>route add -net 192.168.88.0/24 gw 192.168.88.1<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">在群晖中添加iptable 策略</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">配置 NAT 服务器，执行命令</span><br>iptables -t nat -A POSTROUTING -s 192.168.88.0/24 -o ovs_eth0 -j MASQUERADE<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">-t 表名</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">-A 在指定链的末尾添加（--append）一条新的规则</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">-s 指定数据包的源地址参数，可以使IP地址、网络地址、主机名</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">   192.168.88.0 表示 192.168.88.x 的整个网络。</span> <br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">-o 输出接口</span> <br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">-j 目标动作或跳转</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">   MASQUERADE 则表示从 NAT 服务器的网卡上自动获取当前的 IP 地址来做端口转发。否则，基于目标的网络地址转换模式（即 DNAT）需要在每次 NAT 服务器连接外网的 IP 地址变更的时候重新配置端口转发。</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">也可以使用源地址目标转换模式（即 SNAT），命令是</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">** 这里和上面选其一即可 **</span><br>iptables -t nat -A POSTROUTING -s 192.168.88.0/24 -o ovs_eth0 -j SNAT --to-source 192.168.20.2<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">显然这种方式也会依赖命令中指定的通向外网的 IP 地址，所以仍然不够灵活。推荐使用第一种方式。</span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">允许端口转发</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">此命令将允许经过 eth1 网卡（连接内网）的所有数据包通向外网的转发。</span><br>iptables -A FORWARD -i eth1 -j ACCEPT<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">或者 仅允许转发192.168.88.0/24段的报文</span><br>iptables -A FORWARD -s 192.168.88.0/24 -j ACCEPT<br></code></pre></td></tr></table></figure>\n\n<p><strong>参考</strong></p>\n<p><a href=\"https://blog.csdn.net/liuzhanchun/article/details/106819839\">Linux 内部路由实现及网口转发之理论篇</a></p>\n<p><a href=\"https://blog.csdn.net/luozhen07/article/details/48051005\">Linux 系统双网卡实现内网端口转发</a></p>\n",
            "tags": [
                "linux",
                "synology"
            ]
        },
        {
            "id": "https://www.oikiou.top/2020/bda63754/",
            "url": "https://www.oikiou.top/2020/bda63754/",
            "title": "摄影",
            "date_published": "2020-08-08T00:08:08.000Z",
            "content_html": "<p><img src=\"/2020/bda63754/1e3bb3da2c76d5c2ed546428edc1cd4e_720w.jpg\" alt=\"1e3bb3da2c76d5c2ed546428edc1cd4e_720w\"></p>\n<p><img src=\"/2020/bda63754/%E8%89%B2%E7%8E%AF3.png\" alt=\"色环3\"></p>\n<h1 id=\"调色\"><a href=\"#调色\" class=\"headerlink\" title=\"调色\"></a>调色</h1><h2 id=\"马卡龙糖果色\"><a href=\"#马卡龙糖果色\" class=\"headerlink\" title=\"马卡龙糖果色\"></a>马卡龙糖果色</h2><h3 id=\"形式\"><a href=\"#形式\" class=\"headerlink\" title=\"形式\"></a>形式</h3><p>高明度、低对比、高饱和、高明度</p>\n<ul>\n<li><p>暖色—橙色、黄色、粉色</p>\n</li>\n<li><p>冷色—绿色、蓝色、青色、建议青蓝色为主色调</p>\n</li>\n</ul>\n<h3 id=\"适合场景\"><a href=\"#适合场景\" class=\"headerlink\" title=\"适合场景\"></a>适合场景</h3><ul>\n<li>建议晴天的白天、避免大光比、复杂的色彩组成、</li>\n<li>建议有蓝色元素(天空)、橙色黄色粉色等暖色系元素、</li>\n</ul>\n<h2 id=\"青橙色调色\"><a href=\"#青橙色调色\" class=\"headerlink\" title=\"青橙色调色\"></a>青橙色调色</h2><h3 id=\"形式-1\"><a href=\"#形式-1\" class=\"headerlink\" title=\"形式\"></a>形式</h3><p>青色橙色作为主色调</p>\n<p>拉高白色、降低黑色增强对比</p>\n<ul>\n<li>降低高光、提升阴影恢复细节</li>\n<li>拉高白色、降低黑色增强对比</li>\n</ul>\n<h3 id=\"适合场景-1\"><a href=\"#适合场景-1\" class=\"headerlink\" title=\"适合场景\"></a>适合场景</h3><p>天空、大海等蓝色元素 和 肤色、灯光等的橙色元素。</p>\n<p><img src=\"/2020/bda63754/%E9%9D%92%E6%A9%99%E6%A1%88%E4%BE%8B-1.jpg\" alt=\"青橙案例-1\"></p>\n<h2 id=\"日系蓝黄色调\"><a href=\"#日系蓝黄色调\" class=\"headerlink\" title=\"日系蓝黄色调\"></a>日系蓝黄色调</h2><p>画面本身有蓝、黄橙绿元素、</p>\n<p>白天的街景、建筑最佳</p>\n<ul>\n<li>降低对比度（降低高光和白色、提升阴影），操作后照片会偏灰，降低黑色压实影调</li>\n<li>曲线压缩最亮部分（右顶点向下偏），使得白色更加柔和</li>\n<li>主色调为蓝黄色及相邻色（），基本不含其他色</li>\n</ul>\n<p><img src=\"/2020/bda63754/%E6%97%A5%E7%B3%BB%E8%93%9D%E9%BB%84%E8%89%B2%E8%B0%83-Frank.jpg\" alt=\"日系蓝黄色调-Frank\"></p>\n<h2 id=\"黑金色调\"><a href=\"#黑金色调\" class=\"headerlink\" title=\"黑金色调\"></a>黑金色调</h2>",
            "tags": [
                "摄影"
            ]
        }
    ]
}