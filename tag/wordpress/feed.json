{
    "version": "https://jsonfeed.org/version/1",
    "title": "Oikiou's Blog • All posts by \"wordpress\" tag",
    "description": "Blog",
    "home_page_url": "https://www.oikiou.top",
    "items": [
        {
            "id": "https://www.oikiou.top/2022/aa858de8/",
            "url": "https://www.oikiou.top/2022/aa858de8/",
            "title": "Wordpress",
            "date_published": "2022-02-21T14:57:15.000Z",
            "content_html": "<h1 id=\"Wordpress\"><a href=\"#Wordpress\" class=\"headerlink\" title=\"Wordpress\"></a>Wordpress</h1><h2 id=\"LNMP安装\"><a href=\"#LNMP安装\" class=\"headerlink\" title=\"LNMP安装\"></a>LNMP安装</h2><p><a href=\"https://lnmp.org/\">https://lnmp.org/</a></p>\n<p><strong>LNMP一键安装包是什么?</strong></p>\n<p>LNMP一键安装包是一个用Linux Shell编写的可以为CentOS&#x2F;RHEL&#x2F;Fedora&#x2F;Aliyun&#x2F;Amazon、Debian&#x2F;Ubuntu&#x2F;Raspbian&#x2F;Deepin&#x2F;Mint Linux VPS或独立主机安装LNMP(Nginx&#x2F;MySQL&#x2F;PHP)、LNMPA(Nginx&#x2F;MySQL&#x2F;PHP&#x2F;Apache)、LAMP(Apache&#x2F;MySQL&#x2F;PHP)生产环境的Shell程序。</p>\n<h3 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 登录</span><br>mysql -u root -p<br><br><span class=\"hljs-comment\"># 如果报找不到命令 cd到对应目录去登录</span><br><span class=\"hljs-built_in\">cd</span> /usr/local/mariadb10/bin/<br>./mysql -u root -p<br><br><span class=\"hljs-comment\"># 切换到mysql数据库</span><br>use mysql<br><br><span class=\"hljs-comment\"># 执行以下命令，创建 MariaDB 数据库。例如 “wordpress”。</span><br>CREATE DATABASE IF NOT EXISTS wordpress;<br><br><span class=\"hljs-comment\"># 执行以下命令，创建一个新用户。例如 “user”，登录密码为 123456。</span><br>CREATE USER <span class=\"hljs-string\">&#x27;user&#x27;</span>@<span class=\"hljs-string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"hljs-string\">&#x27;123456&#x27;</span>;<br><br><span class=\"hljs-comment\"># 执行以下命令，赋予用户对 “wordpress” 数据库的全部权限。</span><br>GRANT ALL PRIVILEGES ON wordpress.* TO <span class=\"hljs-string\">&#x27;user&#x27;</span>@<span class=\"hljs-string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"hljs-string\">&#x27;123456&#x27;</span>;<br><br><span class=\"hljs-comment\"># 执行以下命令，设置 root 帐户密码</span><br>ALTER USER root@localhost IDENTIFIED VIA mysql_native_password USING PASSWORD(<span class=\"hljs-string\">&#x27;输入您的密码&#x27;</span>);<br><br><span class=\"hljs-comment\"># 执行以下命令，使所有配置生效。</span><br>FLUSH PRIVILEGES;<br><br><span class=\"hljs-comment\"># 退出</span><br>\\q<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Wordpress-1\"><a href=\"#Wordpress-1\" class=\"headerlink\" title=\"Wordpress\"></a>Wordpress</h2><h4 id=\"修改-WordPress-配置文件\"><a href=\"#修改-WordPress-配置文件\" class=\"headerlink\" title=\"修改 WordPress 配置文件\"></a>修改 WordPress 配置文件</h4><ol>\n<li><p>依次执行以下命令，进入 WordPress 安装目录，将<code>wp-config-sample.php</code>文件复制到<code>wp-config.php</code>文件中，并将原先的示例配置文件保留作为备份。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">cd <span class=\"hljs-regexp\">/home/</span>wwwroot/wordpress<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\"><span class=\"hljs-keyword\">cp</span> <span class=\"hljs-keyword\">wp</span>-config-sample.php <span class=\"hljs-keyword\">wp</span>-config.php<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>执行以下命令，打开并编辑新创建的配置文件。</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\"><span class=\"hljs-keyword\">vim</span> <span class=\"hljs-keyword\">wp</span>-config.php<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>按 <strong>i</strong> 切换至编辑模式，找到文件中 MySQL 的部分，并将相关配置信息修改为 <a href=\"https://cloud.tencent.com/document/product/213/8044#database\">配置 WordPress 数据库</a> 中的内容。</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lasso\"><span class=\"hljs-comment\">// ** MySQL settings - You can get this info from your web host ** //</span><br><span class=\"hljs-comment\">/** The name of the database for WordPress */</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">define</span></span>(<span class=\"hljs-string\">&#x27;DB_NAME&#x27;</span>, <span class=\"hljs-string\">&#x27;wordpress&#x27;</span>);<br>    <br><span class=\"hljs-comment\">/** MySQL database username */</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">define</span></span>(<span class=\"hljs-string\">&#x27;DB_USER&#x27;</span>, <span class=\"hljs-string\">&#x27;user&#x27;</span>);<br>    <br><span class=\"hljs-comment\">/** MySQL database password */</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">define</span></span>(<span class=\"hljs-string\">&#x27;DB_PASSWORD&#x27;</span>, <span class=\"hljs-string\">&#x27;123456&#x27;</span>);<br>    <br><span class=\"hljs-comment\">/** MySQL hostname */</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">define</span></span>(<span class=\"hljs-string\">&#x27;DB_HOST&#x27;</span>, <span class=\"hljs-string\">&#x27;localhost&#x27;</span>);<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>修改完成后，按 <strong>Esc</strong>，输入 <strong>:wq</strong>，保存文件返回。</p>\n</li>\n</ol>\n<h3 id=\"开启HTTPS支持\"><a href=\"#开启HTTPS支持\" class=\"headerlink\" title=\"开启HTTPS支持\"></a>开启HTTPS支持</h3><h1 id=\"DNS\"><a href=\"#DNS\" class=\"headerlink\" title=\"DNS\"></a>DNS</h1><h2 id=\"获取域名\"><a href=\"#获取域名\" class=\"headerlink\" title=\"获取域名\"></a>获取域名</h2><p>这里有一个免费的域名, 先凑合用着吧</p>\n<p><a href=\"https://www.freenom.com/\">https://www.freenom.com/</a></p>\n<blockquote>\n<p>  freenom 注册方法</p>\n<p>  <a href=\"https://zhuanlan.zhihu.com/p/115535965\">https://zhuanlan.zhihu.com/p/115535965</a></p>\n<p>  Freenom常见问题解决方法</p>\n<p>  <a href=\"http://www.360doc.com/content/21/0124/00/30583588_958609144.shtml\">http://www.360doc.com/content/21/0124/00/30583588_958609144.shtml</a></p>\n</blockquote>\n<ul>\n<li><p>注册的时候搜索要加上后缀不然会显示  不可用</p>\n</li>\n<li><p>checkout 到购物车改成 12月 free</p>\n</li>\n<li><p>谷歌邮箱直接登录 登录后要更改自己的个人信息里面的地址(改成ip所在地) 不然无法成功注册</p>\n</li>\n<li><p>菜单栏 servers -&gt; my domains 就可以看到地址了</p>\n</li>\n<li><p>最后再修改一下NS服务器</p>\n<ul>\n<li><p>Manage Domain -&gt; Management Tools -&gt; nameserver -&gt; Use custom nameservers (enter below)</p>\n</li>\n<li><p>这里填写cloudflare 或者 dnspod 给出来的 Nameservers 就好了</p>\n</li>\n<li><p>类似于</p>\n</li>\n<li><table>\n<thead>\n<tr>\n<th align=\"left\">Type</th>\n<th align=\"left\">Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">NS</td>\n<td align=\"left\">katja.ns.cloudflare.com</td>\n</tr>\n<tr>\n<td align=\"left\">NS</td>\n<td align=\"left\">kirk.ns.cloudflare.com</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h2><p>域名的<a href=\"https://www.vpsgo.com/tag/ns%E8%AE%B0%E5%BD%95\">NS记录</a>（<a href=\"https://www.vpsgo.com/tag/name-server\">Name Server</a>）是指处理域名解析的服务器，说白点就是你的域名由谁家来解析。一般购买了域名后，默认的NS记录就是指向域名提供商的（例如NameSilo的默认就由它自己解析）。你可以修改域名的NS记录，让它由不同的解析服务商来解析，例如可以指向<a href=\"https://www.vpsgo.com/tag/cloudflare\">Cloudflare</a>或者<a href=\"https://www.vpsgo.com/tag/dnspod\">DNSPod</a>。</p>\n<p>之后DNS（Domain Name System），常用的<a href=\"https://www.vpsgo.com/tag/dns%E8%AE%B0%E5%BD%95\">DNS记录</a>包括域名解析中A记录、CNAME、MX记录。<a href=\"https://www.vpsgo.com/tag/%E5%9F%9F%E5%90%8Da%E8%AE%B0%E5%BD%95\">域名A记录</a>又称为IP指向，就是说你这个域名代表什么IP；域名CNAME是指别名指向，就是说指向另一个域名，例如可以设置test.vpsgo.com指向<a href=\"http://www.vpsgo.com;域名的mx记录就是邮件交换记录,是做邮件服务器需要设置的.本文主要介绍域名a记录解析./\">www.vpsgo.com；域名的MX记录就是邮件交换记录，是做邮件服务器需要设置的。本文主要介绍域名A记录解析。</a></p>\n<blockquote>\n<p>  cloudflare 解析</p>\n<p>  <a href=\"https://zhuanlan.zhihu.com/p/56423186\">https://zhuanlan.zhihu.com/p/56423186</a></p>\n<p>  <a href=\"https://www.vpsgo.com/domain-ns-cloudflare-dnspod.html#NS\">https://www.vpsgo.com/domain-ns-cloudflare-dnspod.html#NS</a></p>\n</blockquote>\n<h1 id=\"HTTPS-SSL-x2F-TLS\"><a href=\"#HTTPS-SSL-x2F-TLS\" class=\"headerlink\" title=\"HTTPS SSL&#x2F;TLS\"></a>HTTPS SSL&#x2F;TLS</h1><h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><h3 id=\"acme-sh\"><a href=\"#acme-sh\" class=\"headerlink\" title=\"acme.sh\"></a>acme.sh</h3><p><a href=\"https://ruby-china.org/topics/31983\">https://ruby-china.org/topics/31983</a></p>\n<p><a href=\"https://ruby-china.org/topics/28471\">https://ruby-china.org/topics/28471</a></p>\n<p><a href=\"https://ruby-china.org/topics/25543\">https://ruby-china.org/topics/25543</a></p>\n<p><a href=\"https://ruby-china.org/topics/31942\">https://ruby-china.org/topics/31942</a></p>\n<h3 id=\"caddy\"><a href=\"#caddy\" class=\"headerlink\" title=\"caddy\"></a>caddy</h3><p><a href=\"https://caddyserver.com/docs/quick-starts/https\">https://caddyserver.com/docs/quick-starts/https</a></p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 安装 acme.sh</span><br>curl https://get.acme.sh | sh<br><br><span class=\"hljs-comment\"># 然后重新载入一下 .bashrc</span><br><span class=\"hljs-built_in\">source</span> ~/.bashrc <br><br><span class=\"hljs-comment\"># 至此acme安装完成</span><br>acme.sh<br></code></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 注册账号</span><br>sudo ~/.acme.sh/acme.sh --register-account -m jackliuworkemail@gmail.com  --server zerossl<br><br><span class=\"hljs-comment\"># 为lager.cf创建密钥</span><br><span class=\"hljs-comment\"># -k 表示密钥长度，后面的值可以是 ec-256 、ec-384、2048、3072、4096、8192，带有 ec 表示生成的是 ECC 证书，没有则是 RSA 证书。在安全性上 256 位的 ECC 证书等同于 3072 位的 RSA 证书。</span><br>sudo ~/.acme.sh/acme.sh --issue -d lager.cf --standalone -k ec-256<br><br><span class=\"hljs-comment\"># 由于 Let&#x27;s Encrypt 的证书有效期只有 3 个月，因此需要 90 天至少要更新一次证书，acme.sh 脚本会每 60 天自动更新证书。也可以手动更新。</span><br><span class=\"hljs-comment\"># 查看计划任务</span><br> crontab -l<br><span class=\"hljs-comment\"># 手动更新 ECC 证书，执行：</span><br>sudo ~/.acme.sh/acme.sh --renew -d lager.cf --force --ecc<br><br><span class=\"hljs-comment\"># 请注意：reloadcmd非常重要。证书可以自动续订，但是，如果没有正确的“reloadcmd”，证书可能无法刷新到您的服务器（如nginx或apache），那么您的网站将无法在60天内显示续订证书。</span><br><span class=\"hljs-comment\"># 注意：无论什么情况，密钥(即上面的lager.cf.key)都不能泄漏，如果你不幸泄漏了密钥，可以使用 acme.sh 将原证书吊销，再生成新的证书，吊销方法请自行参考 acme.sh 的手册</span><br>acme.sh --installcert -d lager.cf \\<br>--keypath       /usr/local/nginx/ssl/lager.cf.key \\<br>--fullchainpath /usr/local/nginx/ssl/lager.cf.cer \\<br>--reloadcmd     <span class=\"hljs-string\">&quot;sudo service nginx force-reload&quot;</span>  --force --ecc<br><br><span class=\"hljs-comment\"># 生成 dhparam.pem 文件</span><br>openssl dhparam -out /usr/local/nginx/ssl/lager.cf.pem 2048<br><br><br><span class=\"hljs-comment\"># 配置nginx 启用 https</span><br>vim /usr/local/nginx/conf/nginx.conf<br><br><span class=\"hljs-comment\"># 检查配置</span><br>sudo service nginx configtest<br><span class=\"hljs-comment\"># 重启服务</span><br>sudo service nginx restart<br><br><br><span class=\"hljs-comment\">#验证 SSL</span><br><span class=\"hljs-comment\">#访问 ssllabs.com 输入你的域名，检查 SSL 的配置是否都正常：</span><br>https://ssllabs.com/ssltest/analyze.html?d=ruby-china.org<br></code></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"一些注意事项\"><a href=\"#一些注意事项\" class=\"headerlink\" title=\"一些注意事项\"></a>一些注意事项</h3><ul>\n<li><code>ssl_dhparam</code> 未配置，将导致 ssllabs.com 的评分降到 B，并给 <code>This server supports weak Diffie-Hellman (DH) key exchange parameters. Grade capped to B.</code> 的警告。</li>\n<li><code>ssl_prefer_server_ciphers on</code> 也是一个必要的配置，否则会 A+ 变成 A-;</li>\n<li>如果你需要兼容老系统或老浏览器的话，你需要配置 <code>ssl_ciphers</code>，详见 <a href=\"https://wiki.mozilla.org/Security/Server_Side_TLS\">Mozilla Server_Side_TLS 的介绍</a>，Nginx 里面 <code>ssl_ciphers</code> 默认值是 <code>HIGH:!aNULL:!MD5;</code> <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_ciphers\">ref</a></li>\n</ul>\n<h2 id=\"acme-sh-1\"><a href=\"#acme-sh-1\" class=\"headerlink\" title=\"acme.sh\"></a>acme.sh</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 查看证书列表</span><br>acme.sh --list<br><br><span class=\"hljs-comment\"># 删除证书</span><br>acme.sh remove Main_Domain (证书的主域名，上述证书列表中可看见)<br><br><span class=\"hljs-comment\"># 升级 acme.sh 到最新版 :</span><br>acme.sh --upgrade<br><br><span class=\"hljs-comment\"># 如果你不想手动升级, 可以开启自动升级:</span><br>acme.sh --upgrade --auto-upgrade<br><br><span class=\"hljs-comment\">#你也可以随时关闭自动更新:</span><br>acme.sh --upgrade --auto-upgrade 0 <br><br><span class=\"hljs-comment\"># 如果出错, 请添加 debug log：</span><br>acme.sh --issue ..... --debug <br><span class=\"hljs-comment\"># 或者：</span><br>acme.sh --issue ..... --debug 2<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"ngix\"><a href=\"#ngix\" class=\"headerlink\" title=\"ngix\"></a>ngix</h2><h3 id=\"nginx-config-1\"><a href=\"#nginx-config-1\" class=\"headerlink\" title=\"nginx config 1\"></a>nginx config 1</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">server &#123;<br>    listen 80; <span class=\"hljs-comment\">#如果硬性要求全部走https协议，这一行去除</span><br>    listen 443 ssl http2; <span class=\"hljs-comment\">#如果硬性要求全部走https协议，这里去除ssl</span><br>    server_name chandao.test.com;<br><br>    ssl_certificate /usr/local/nginx/ssl_cert/test.com/chandao.test.com.cer;<br>    ssl_certificate_key /usr/local/nginx/ssl_cert/test.com/chandao.test.com.key;<br>    ssl_dhparam /usr/local/nginx/ssl/lager.cf.pem;<br><br>    <span class=\"hljs-comment\">#ssl性能调优</span><br>    <span class=\"hljs-comment\">#nginx 1.13.0支持了TLSv1.3,TLSv1.3相比之前的TLSv1.2、TLSv1.1等性能大幅提升</span><br>    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;<br>    <span class=\"hljs-comment\"># ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;</span><br>    <span class=\"hljs-comment\"># ssl_prefer_server_ciphers on|off 作用：是否由服务器决定采用哪种加密算法</span><br>    <span class=\"hljs-comment\"># 如果ssl协议支持tlsv1 tls1.1这种老协议，设置为 on ，并配合ssl_ciphers使用</span><br>    <span class=\"hljs-comment\"># 如果ssl协议只支持tlsv1.2 tlsv1.3新协议，设置为 off （nginx默认为off），因为新协议不再采纳此参数</span><br>    ssl_prefer_server_ciphers on;<br>    ssl_session_timeout 10m;<br>    <span class=\"hljs-comment\">#使用ssl_session_cache优化https下Nginx的性能</span><br>    ssl_session_cache <span class=\"hljs-built_in\">builtin</span>:1000 shared:SSL:10m;<br>    <span class=\"hljs-comment\">#OCSP Stapling 开启。OCSP是用于在线查询证书吊销情况的服务，使用OCSP Stapling能将证书有效状态的信息缓存到服务器，提高 TLS 握手速度</span><br>    ssl_stapling on;<br>    <span class=\"hljs-comment\">#OCSP Stapling 验证开启</span><br>    ssl_stapling_verify on;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"nginx-config-2\"><a href=\"#nginx-config-2\" class=\"headerlink\" title=\"nginx config 2\"></a>nginx config 2</h3><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">http &#123;<br>  <span class=\"hljs-comment\"># 新增</span><br>  ssl_protocols TLSv1 TLSv1.<span class=\"hljs-number\">1</span> TLSv1.<span class=\"hljs-number\">2</span>;<br>  ssl_prefer_server_ciphers on;<br>  <span class=\"hljs-comment\"># 兼容其他老浏览器的 ssl_ciphers 设置请访问 https://wiki.mozilla.org/Security/Server_Side_TLS</span><br><br>  server &#123;<br>    listen <span class=\"hljs-number\">80</span> default_server;<br>    <span class=\"hljs-comment\"># 新增</span><br>    listen <span class=\"hljs-number\">443</span> ssl;<br>    ssl_certificate         <span class=\"hljs-regexp\">/home/u</span>buntu<span class=\"hljs-regexp\">/www/</span>ssl/www.your-app.com.key.pem;<br>    ssl_certificate_key     <span class=\"hljs-regexp\">/home/u</span>buntu<span class=\"hljs-regexp\">/www/</span>ssl/www.your-app.com.key;<br>    <span class=\"hljs-comment\"># ssl_dhparam </span><br>    ssl_dhparam             <span class=\"hljs-regexp\">/home/u</span>buntu<span class=\"hljs-regexp\">/www/</span>ssl/dhparam.pem;<br><br>    <span class=\"hljs-comment\"># 其他省略</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n<p>80 重定向到 443</p>\n<p>这些办法试了好多次都不太行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">server &#123;<br>  listen       80 default_server;<br>  server_name  www.lager.cf;<br>  <span class=\"hljs-built_in\">return</span> 301 https://$server_name<span class=\"hljs-variable\">$request_uri</span>;<br>&#125;<br><br><br>server &#123;<br>    listen      80;<br>    server_name    www.awesomes.cn,awesomes.cn;<br>    rewrite ^(.*)$  https://$host<span class=\"hljs-variable\">$1</span> permanent;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"v2ray-tls-websocket-流量伪装\"><a href=\"#v2ray-tls-websocket-流量伪装\" class=\"headerlink\" title=\"v2ray + tls + websocket 流量伪装\"></a>v2ray + tls + websocket 流量伪装</h1><p><a href=\"https://www.bwgss.org/616.html\">https://www.bwgss.org/616.html</a></p>\n<h1 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h1><ol>\n<li><p>证书(Certificate) – *.cer *.crt</p>\n</li>\n<li><p>私钥(Private Key) – *.key</p>\n</li>\n<li><p>证书签名请求(Certificate signing request) – *.csr</p>\n</li>\n<li><p>编码方式: 1. pem - base64编码 2. der - 二进制编码(少见), cer,key,csr 均可用这两种编码方式</p>\n</li>\n<li><p>证书吊销列表(Certificate Revocation List) – *.crl</p>\n</li>\n<li><p>jks（javakeystone）— 是JAVA的keytools证书工具支持的证书私钥格式，javakeystone 里面存放着key和信任的CA，key和CA可以有多个。</p>\n</li>\n</ol>\n<p><img src=\"/2022/aa858de8/1606053801673.png\" alt=\"Wordpress\"></p>\n",
            "tags": [
                "ssl",
                "https",
                "wordpress",
                "web",
                "mysql",
                "nginx"
            ]
        }
    ]
}