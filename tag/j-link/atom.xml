<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.oikiou.top</id>
    <title>Oikiou&#39;s Blog • Posts by &#34;j-link&#34; tag</title>
    <link href="https://www.oikiou.top" />
    <updated>2022-08-26T15:23:05.000Z</updated>
    <category term="123" />
    <category term="embedded" />
    <category term="cc2530" />
    <category term="zigbee" />
    <category term="hp" />
    <category term="chrome" />
    <category term="sscanf" />
    <category term="c/c++" />
    <category term="hex" />
    <category term="md5" />
    <category term="jpeg" />
    <category term="webp" />
    <category term="jpeg2000" />
    <category term="image" />
    <category term="osi" />
    <category term="ssl" />
    <category term="https" />
    <category term="markdown" />
    <category term="note" />
    <category term="tags" />
    <category term="label" />
    <category term="category" />
    <category term="iap" />
    <category term="bootloader" />
    <category term="stm32" />
    <category term="typora" />
    <category term="usart" />
    <category term="rts" />
    <category term="cts" />
    <category term="dtr" />
    <category term="dsr" />
    <category term="ws2812" />
    <category term="spi" />
    <category term="dma" />
    <category term="xip" />
    <category term="nor" />
    <category term="nand" />
    <category term="windows" />
    <category term="makefile" />
    <category term="android" />
    <category term="mtp" />
    <category term="pc" />
    <category term="driver" />
    <category term="ip" />
    <category term="location" />
    <category term="api" />
    <category term="zsh" />
    <category term="shell" />
    <category term="linux" />
    <category term="zip" />
    <category term="gzip" />
    <category term="bzip" />
    <category term="tar" />
    <category term="DS_Store" />
    <category term="rtf" />
    <category term="后缀" />
    <category term="character encoding" />
    <category term="gb2312" />
    <category term="utf-8" />
    <category term="机智云" />
    <category term="kms" />
    <category term="office" />
    <category term="volume" />
    <category term="蓝桥杯" />
    <category term="国赛" />
    <category term="ct117e" />
    <category term="超声波" />
    <category term="github" />
    <category term="hosts" />
    <category term="ct117e-ex" />
    <category term="c" />
    <category term="c++" />
    <category term="ms-dos" />
    <category term="pid" />
    <category term="micropython" />
    <category term="python" />
    <category term="qt" />
    <category term="pyqt" />
    <category term="正则表达式" />
    <category term="数据结构" />
    <category term="堆栈" />
    <category term="队列" />
    <category term="链表" />
    <category term="树" />
    <category term="二叉树" />
    <category term="life" />
    <category term="workflow" />
    <category term="人生" />
    <category term="cat_drive" />
    <category term="cad" />
    <category term="心理学" />
    <category term="switch" />
    <category term="nintendo" />
    <category term="game" />
    <category term="synology" />
    <category term="hardware" />
    <category term="lenovo" />
    <category term="disk" />
    <category term="software" />
    <category term="dslogic" />
    <category term="逻辑分析仪" />
    <category term="pyhton" />
    <category term="decoder" />
    <category term="摄影" />
    <category term="git" />
    <category term="docker" />
    <category term="dockerfile" />
    <category term="namespace" />
    <category term="cgroup" />
    <category term="dockerhub" />
    <category term="j-link" />
    <category term="rtt" />
    <category term="serial" />
    <category term="debug" />
    <category term="jlink" />
    <category term="rdpwrap" />
    <category term="rdp" />
    <category term="flash" />
    <category term="j-tag" />
    <category term="spacedesk" />
    <category term="投屏" />
    <category term="ps" />
    <category term="powershell" />
    <category term="vscode" />
    <category term="commenttranslate" />
    <category term="wsl" />
    <category term="sourceinsigh" />
    <category term="si" />
    <category term="ide" />
    <category term="wordpress" />
    <category term="web" />
    <category term="mysql" />
    <category term="nginx" />
    <category term="unit" />
    <category term="m" />
    <category term="cm" />
    <category term="mm" />
    <category term="s" />
    <category term="us" />
    <category term="tmux" />
    <category term="cortex-m3" />
    <category term="hexo" />
    <category term="jekyll" />
    <category term="fluid" />
    <category term="cusdis" />
    <category term="twikoo" />
    <category term="blog" />
    <category term="gravatar" />
    <category term="cravatar" />
    <category term="cortex-a7" />
    <category term="alpha_mini" />
    <category term="正点原子" />
    <category term="rtx" />
    <category term="rtos" />
    <category term="keil" />
    <category term="ucos" />
    <category term="rt-thread" />
    <category term="raspberry" />
    <category term="ap" />
    <category term="wifi" />
    <category term="wiringpi" />
    <category term="pwm" />
    <category term="bluetooth" />
    <category term="蓝牙" />
    <category term="modbus" />
    <entry>
        <id>https://www.oikiou.top/2022/fd90dc4c/</id>
        <title>使用Jlink 烧写SPI Flash存储芯片</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/fd90dc4c/"/>
        <content type="html">&lt;h1 id=&#34;使用Jlink-烧写SPI-Flash存储芯片&#34;&gt;&lt;a href=&#34;#使用Jlink-烧写SPI-Flash存储芯片&#34; class=&#34;headerlink&#34; title=&#34;使用Jlink 烧写SPI Flash存储芯片&#34;&gt;&lt;/a&gt;使用Jlink 烧写SPI Flash存储芯片&lt;/h1&gt;&lt;p&gt;参考:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.segger.com/products/debug-probes/j-link/tools/j-flash-spi/&#34;&gt;https://www.segger.com/products/debug-probes/j-link/tools/j-flash-spi/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;硬件连接&#34;&gt;&lt;a href=&#34;#硬件连接&#34; class=&#34;headerlink&#34; title=&#34;硬件连接&#34;&gt;&lt;/a&gt;硬件连接&lt;/h1&gt;&lt;h2 id=&#34;SPI-amp-Single&#34;&gt;&lt;a href=&#34;#SPI-amp-Single&#34; class=&#34;headerlink&#34; title=&#34;SPI &amp;amp; Single&#34;&gt;&lt;/a&gt;SPI &amp;amp; Single&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2022/fd90dc4c/formatpng.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/fd90dc4c/pinout-spi-20-pin.gif&#34; alt=&#34;引出线 spi 20 针&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;QSPI-amp-Quad&#34;&gt;&lt;a href=&#34;#QSPI-amp-Quad&#34; class=&#34;headerlink&#34; title=&#34;QSPI &amp;amp; Quad&#34;&gt;&lt;/a&gt;QSPI &amp;amp; Quad&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2022/fd90dc4c/pinout-qspi-20-pin.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  注意:&lt;/p&gt;
&lt;p&gt;  这里要注意的一点，正版的Jlink仿真器1脚是输入引脚，是外部提供参考电平的，但由于现在大部分的JLink仿真器都是学习(dao)版的，1脚不是输入，而是3.3v的输出(并不确定也有可能是5V的, 盗版的Jlink真的是什么乱七八糟的都有)，所以正常情况下可以直接用这个管教来给SPI Flash供电。&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;关于 nRESET 的注意事项&lt;/strong&gt;：如果有另一个设备&amp;#x2F;外围设备也控制 SPI 闪存（例如闪存连接到的 CPU），则 J-Link 的 nRESET 应连接到目标系统的复位或 CPU 的复位引脚确保 J-Link 可以在对 SPI 闪存进行编程时保持 CPU 处于复位状态。&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;一开始没注意到这个功能, 现在回过头来再看, 有这个功能之后烧芯片简直不要太简单, 根本不需要拆芯片了, 直接用芯片夹就可以烧录了.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;软件&#34;&gt;&lt;a href=&#34;#软件&#34; class=&#34;headerlink&#34; title=&#34;软件&#34;&gt;&lt;/a&gt;软件&lt;/h1&gt;&lt;p&gt;安装Jlink套件的时候会自带&lt;code&gt;JFlashSPI.exe&lt;/code&gt;在开始菜单名称应该类似&lt;code&gt;J-Flash SPI&lt;/code&gt;, 这是J-Flash的GUI程序,还有一个命令行的不多做介绍.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  如果没有找到自带的, 请更新Jlink套件, 旧版确实不带这个东西.&lt;/p&gt;
&lt;p&gt;  Segger Jlink套件下载链接 &lt;a href=&#34;https://www.segger.com/downloads/jlink/&#34;&gt;https://www.segger.com/downloads/jlink/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/2022/fd90dc4c/image-20220826224742256.png&#34; alt=&#34;image-20220826224742256&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;code&gt;target -&amp;gt; connet&lt;/code&gt;连接到Jlink, 它会自动检测大部分SPI闪存, &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  有时候识别的具体型号并不准确, 但是这不重要他们参数类似, 可以正常完成编程的工作.&lt;/p&gt;
&lt;p&gt;  Jlink支持的SPI Flash型号可以在&lt;a href=&#34;https://www.segger.com/products/debug-probes/j-link/technology/cpus-and-devices/supported-spi-flashes/&#34;&gt;点击这里&lt;/a&gt;找到.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;点击&lt;code&gt;file -&amp;gt; open data file &lt;/code&gt;我们打开要烧录的文件.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  bin 文件需要设定起始地址&lt;/p&gt;
&lt;p&gt;  hex文件自带了位置信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;点击&lt;code&gt;target -&amp;gt; auto&lt;/code&gt;可以自动将文件烧录进去 还会进行读回校验.&lt;/p&gt;
&lt;p&gt;至此烧录完成.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  点击&lt;code&gt;target -&amp;gt; read back&lt;/code&gt; 可以将SPI Flash内的数据读取出来&lt;br&gt;  点击&lt;code&gt;options -&amp;gt; settings -&amp;gt; setup -&amp;gt; interface speed&lt;/code&gt;可以修改时钟速度. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Other:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jlink真的是超级牛的工具, J-Scope, RTT这些都很好用, 还有很多高级功能我还没用上.&lt;br&gt;我前面有写过RTT的笔记, 在调试一个项目的时候没法使用串口, 当时就是用RTT搭建了一个log平台.&lt;/p&gt;
&lt;h1 id=&#34;附录&#34;&gt;&lt;a href=&#34;#附录&#34; class=&#34;headerlink&#34; title=&#34;附录&#34;&gt;&lt;/a&gt;附录&lt;/h1&gt;&lt;h2 id=&#34;winbood-W25Q128封装&#34;&gt;&lt;a href=&#34;#winbood-W25Q128封装&#34; class=&#34;headerlink&#34; title=&#34;winbood W25Q128封装&#34;&gt;&lt;/a&gt;winbood W25Q128封装&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;/2022/fd90dc4c/image-20220826104542006.png&#34; alt=&#34;image-20220826104542006&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/fd90dc4c/20210622091839750557.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
</content>
        <category term="spi" />
        <category term="j-link" />
        <category term="jlink" />
        <category term="flash" />
        <category term="j-tag" />
        <updated>2022-08-26T15:23:05.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2021/30f8332a/</id>
        <title>手动添加JLink不支持的芯片</title>
        <link rel="alternate" href="https://www.oikiou.top/2021/30f8332a/"/>
        <content type="html">&lt;h1 id=&#34;手动添加JLink不支持的芯片&#34;&gt;&lt;a href=&#34;#手动添加JLink不支持的芯片&#34; class=&#34;headerlink&#34; title=&#34;手动添加JLink不支持的芯片&#34;&gt;&lt;/a&gt;手动添加JLink不支持的芯片&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;市场上的新芯片层出不穷，JLink的官方支持不可能完全跟得上，这就尴尬了。但是好在Segger在设计时就想到了这一点，允许用户自己添加新芯片或扩展官方已经支持的芯片。本文只讲如何添加新芯片，参考的资料为&lt;code&gt;UM08001_JLink.pdf&lt;/code&gt;中的第12章——&lt;code&gt;Open Flashloader&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;最终效果&#34;&gt;&lt;a href=&#34;#最终效果&#34; class=&#34;headerlink&#34; title=&#34;最终效果&#34;&gt;&lt;/a&gt;最终效果&lt;/h2&gt;&lt;p&gt;在添加前，JFlash里找不到BARROT的任何型号，&lt;/p&gt;
&lt;p&gt;添加后如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2021/30f8332a/image-20211019164827957.png&#34; alt=&#34;image-20211019164827957&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;添加方法&#34;&gt;&lt;a href=&#34;#添加方法&#34; class=&#34;headerlink&#34; title=&#34;添加方法&#34;&gt;&lt;/a&gt;添加方法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;找到Jlink安装目录下的&lt;code&gt;JLinkDevices.xml&lt;/code&gt;并打开；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;默认位置&lt;code&gt;C:\Program Files\SEGGER\JLink&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在打开的文件添加如下内容，因为这个文件里没有任何BARROT的芯片，所以我添加到文件末尾，如果文件已经有同厂家的其它芯片，建议还是放一起，方便维护。效果和代码放下面了，代码的解释在后面！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2021/30f8332a/image-20211019164859196.png&#34; alt=&#34;image-20211019164859196&#34;&gt;&lt;/p&gt;
  &lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs xml&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&amp;lt;!--                  --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&amp;lt;!-- BARROT (BR8551) --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;&amp;lt;!--                  --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;Device&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;ChipInfo&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;Vendor&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BARROT&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;Name&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;BR8551&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;Core&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;JLINK_CORE_CORTEX_M3&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;WorkRAMAddr&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;0x2000C000&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;WorkRAMSize&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;0x00004000&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;FlashBankInfo&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;Name&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ROM&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;BaseAddr&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;0x00000000&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;MaxSize&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;0x00060000&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;Loader&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;D:\\Project\\Panda\\Code\\bamboo\\panda\\tools\\Keil\\VFlash.FLM&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;LoaderType&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;FLASH_ALGO_TYPE_OPEN&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;AlwaysPresent&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;  &lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;FlashBankInfo&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;Name&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;LR_IROM1&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;BaseAddr&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;0x10000000&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;MaxSize&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;0x00080000&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;Loader&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;D:\\Project\\Panda\\Code\\bamboo\\panda\\tools\\Keil\\VFlash.FLM&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;LoaderType&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;FLASH_ALGO_TYPE_OPEN&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;AlwaysPresent&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;Device&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;保存文件就添加完了，可以验证是否如文章开头的效果一样&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;代码解释&#34;&gt;&lt;a href=&#34;#代码解释&#34; class=&#34;headerlink&#34; title=&#34;代码解释&#34;&gt;&lt;/a&gt;代码解释&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;最开始的三行是注释，注释嘛，随便写了，清晰明了就行；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Device&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;/Device&amp;gt;&lt;/code&gt;必须成对出现，而且没有属性表。每个（系列）芯片都对应着这么一对。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ChipInfo&lt;/code&gt;是描述芯片的信息，必须在 &lt;code&gt;&amp;lt;Device&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;/Device&amp;gt;&lt;/code&gt;内。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;参数&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Vendor&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;芯片厂家的名字，比如这里的”BARROT”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Name&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;芯片的具体型号，我用的就是BR8551&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Core&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;芯片的内核，这个必须是JLink支持的内核之一，具体的名字可以在文档里的12.5.3.1    Attribute values - Core章节找到。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;WorkRAMAddr&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;芯片RAM的起始地址，这个可以在用户手册里找到，也可以打开SDK里的官方例程，然后在工程配置里找到&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;WorkRAMSize&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;芯片RAM的大小，同样可以在用户手册里找到，也可以打开SDK里的官方例程，然后在工程配置里找到&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Aliases&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;同系列的相同RAM和FLASH的型号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;JLinkScriptFile&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;高级用法，有些芯片操作比较特殊，可以通过脚本去实现，这里我用不上&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FlashBankInfo&lt;/code&gt;描述芯片的Flash信息，有多块flash的话，每块对应一个&lt;code&gt;FlashBankInfo&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;参数&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Name&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;flash的名字，名字可以随便起&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;BaseAddr&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;flash的起始地址，可以在用户手册里找到&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;MaxSize&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;flash的大小，可以在用户手册里找到&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Loader&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;烧录的算法，segger官方的是*.elf格式，*.flm是ARM的格式，keil里就用这个。这个路径可以是绝对地址也可以是相对地址，相对地址的话是从&lt;code&gt;JLinkDevices.xml&lt;/code&gt;所在的路径为起始地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;LoaderType&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;必须是12.5.4.1    Attribute values - LoaderType中列出的类型之一，目前只有FLASH_ALGO_TYPE_OPEN一个类型，而*.flm是支持这个类型的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;AlwaysPresent&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;指示这个块flash是不是一直存在，本文是内部flash，当然一直存在&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h1 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/d7fae221ac47&#34;&gt;工欲善其事，必先利其器：动手给JLink添加官方不支持的芯片&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="j-link" />
        <category term="jlink" />
        <updated>2021-11-03T06:39:31.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2021/18d811b/</id>
        <title>J-Link RTT的使用方法</title>
        <link rel="alternate" href="https://www.oikiou.top/2021/18d811b/"/>
        <content type="html">&lt;h1 id=&#34;J-Link-RTT-amp-JTrace&#34;&gt;&lt;a href=&#34;#J-Link-RTT-amp-JTrace&#34; class=&#34;headerlink&#34; title=&#34;J-Link RTT &amp;amp; JTrace&#34;&gt;&lt;/a&gt;J-Link RTT &amp;amp; JTrace&lt;/h1&gt;&lt;h2 id=&#34;序言&#34;&gt;&lt;a href=&#34;#序言&#34; class=&#34;headerlink&#34; title=&#34;序言&#34;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;p&gt;Jlink可用直接输出调试信息，省去串口工具（配置麻烦+硬件接线乱+占用IO）&lt;/p&gt;
&lt;p&gt;Jlink输出调试信息有两种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jlink的Trace&lt;/li&gt;
&lt;li&gt;Jlink的RTT (Real Time Transfer)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Jlink-Trace&#34;&gt;&lt;a href=&#34;#Jlink-Trace&#34; class=&#34;headerlink&#34; title=&#34;Jlink Trace&#34;&gt;&lt;/a&gt;Jlink Trace&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;！！！待完善！！！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;MDK 环境下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2021/18d811b/132307095276873.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; ITM_Port8(n)    (*((volatile unsigned char *)(0xE0000000+4*n)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; ITM_Port16(n)   (*((volatile unsigned short*)(0xE0000000+4*n)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; ITM_Port32(n)   (*((volatile unsigned long *)(0xE0000000+4*n)))&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; DEMCR           (*((volatile unsigned long *)(0xE000EDFC)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; TRCENA          0x01000000&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;fputc&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; ch, FILE *f)&lt;/span&gt; &lt;br&gt;&amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (DEMCR &amp;amp; TRCENA) &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; (ITM_Port32(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) == &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;br&gt;    ITM_Port8(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;) = ch;&lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt;(ch);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;RTT&#34;&gt;&lt;a href=&#34;#RTT&#34; class=&#34;headerlink&#34; title=&#34;RTT&#34;&gt;&lt;/a&gt;RTT&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.segger.com/products/debug-probes/j-link/technology/about-real-time-transfer/&#34;&gt;Jlink RTT 官网资料&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RTT其实原理就是读取RAM上某个Buff的数据，这个Buff可以通过RTT的CB(control block)找到。&lt;/p&gt;
&lt;h3 id=&#34;教程&#34;&gt;&lt;a href=&#34;#教程&#34; class=&#34;headerlink&#34; title=&#34;教程&#34;&gt;&lt;/a&gt;教程&lt;/h3&gt;&lt;p&gt;下载Jlink的工具后，安装后程序目录有Samples文件夹(default: C:\Program Files\SEGGER\JLink\Samples)，文件夹内就有RTT的源码。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将源码的&lt;code&gt;RTT/&lt;/code&gt;目录下 &lt;code&gt;SEGGER_RTT_Printf.c&lt;/code&gt;  &lt;code&gt;SEGGER_RTT.c&lt;/code&gt; 两个文件添加到工程里，并解决头文件包含问题。&lt;/li&gt;
&lt;li&gt;看 &lt;code&gt;Examples/&lt;/code&gt;目录下就有使用历程，移植到你的工程就好。可以参考&lt;code&gt;Main_RTT_InputEchoApp.c&lt;/code&gt;和&lt;code&gt;Main_RTT_PrintfTest.c&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;打开 &lt;code&gt;J-Link RTT Viewer&lt;/code&gt;软件，选择&lt;code&gt;Device&lt;/code&gt;，输入&lt;code&gt;RTT Control Block&lt;/code&gt;的地址connect即可。&lt;ol&gt;
&lt;li&gt;&lt;code&gt;RTT Control Block&lt;/code&gt;的地址可以输入RAM的范围让&lt;code&gt;J-Link RTT Viewer&lt;/code&gt;软件自己去搜索。&lt;/li&gt;
&lt;li&gt;也可手动输入，而RTT_V754a的&lt;code&gt;RTT Control Block&lt;/code&gt;是&lt;code&gt;_SEGGER_RTT&lt;/code&gt; 在&lt;code&gt; file:SEGGER_RTT.c line:279&lt;/code&gt;。&lt;img src=&#34;/2021/18d811b/image-20210917214218565.png&#34; alt=&#34;image-20210917214218565&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;一顿操作下来正常就可以收到数据了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;RTT-源码&#34;&gt;&lt;a href=&#34;#RTT-源码&#34; class=&#34;headerlink&#34; title=&#34;RTT 源码&#34;&gt;&lt;/a&gt;RTT 源码&lt;/h3&gt;&lt;h4 id=&#34;Included-files&#34;&gt;&lt;a href=&#34;#Included-files&#34; class=&#34;headerlink&#34; title=&#34;Included files&#34;&gt;&lt;/a&gt;Included files&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RTT/&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SEGGER_RTT.c&lt;/code&gt;               - RTT的主要模块。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SEGGER_RTT.h&lt;/code&gt;               - RTT的主要模块。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SEGGER_RTT_ASM_ARMv7M.S&lt;/code&gt;    - ARMv7M 的优化实现&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SEGGER_RTT_Printf.c&lt;/code&gt;        - (‘ SEGGER_RTT_Printf() ‘)的简单实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Syscalls/&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SEGGER_RTT_Syscalls_*.c&lt;/code&gt;    - &lt;code&gt;printf()&lt;/code&gt; 重定向&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Config/&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SEGGER_RTT_Conf.h&lt;/code&gt;          - RTT配置文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Examples/&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Main_RTT_InputEchoApp.c&lt;/code&gt;    - Example application which echoes input on Channel 0.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Main_RTT_MenuApp.c&lt;/code&gt;         - Example application to demonstrate RTT bi-directional functionality.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Main_RTT_PrintfTest.c&lt;/code&gt;      - Example application to test RTT’s simple printf implementation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Main_RTT_SpeedTestApp.c&lt;/code&gt;    - Example application to measure RTT performance. (Requires embOS)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;API&#34;&gt;&lt;a href=&#34;#API&#34; class=&#34;headerlink&#34; title=&#34;API&#34;&gt;&lt;/a&gt;API&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;函数名称&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_Read()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;从输入缓冲区读取数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_Write()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;将数据写入输出缓冲区。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_WriteString()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;将\0结尾字符串写入输出缓冲区。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_printf()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;将格式化的字符串写入输出缓冲区。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_GetKey()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;从输入缓冲区 0 中获取一个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_HasKey()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;检查输入缓冲区 0 中是否有字符可用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_WaitKey()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;等待输入缓冲区 0 中的字符可用并获取它。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_ConfigUpBuffer()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;配置向上（输出）缓冲区。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_ConfigDownBuffer()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;配置向下（输入）缓冲区。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_Init()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;仅使用 RAM 目标时初始化 RTT 控制块结构。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_SetTerminal()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;将“虚拟”终端设置为通过 Write 和 WriteString 用于通道 0 上的输出。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;SEGGER_RTT_TerminalOut()&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;通过“虚拟”终端发送以\0结尾的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;RTT-软件&#34;&gt;&lt;a href=&#34;#RTT-软件&#34; class=&#34;headerlink&#34; title=&#34;RTT 软件&#34;&gt;&lt;/a&gt;RTT 软件&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;/2021/18d811b/image-20210918101414512.png&#34; alt=&#34;image-20210918101414512&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;J-Link RTT Viewer&lt;/code&gt;软件用的比较多&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;J-Link RTT Logger&lt;/code&gt;软件可以将输出的数据保存到文件，并显示通信速率和通信数据量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;J-Link RTT Client&lt;/code&gt;可以在调试的时候，充当客户端，输出数据。据说支持中文&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;note：&#34;&gt;&lt;a href=&#34;#note：&#34; class=&#34;headerlink&#34; title=&#34;note：&#34;&gt;&lt;/a&gt;note：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;程序如果跑在RAM中，J-Link可能会错误地识别出init部分中的块，而不是数据部分中的实际块。为了防止这种情况，将SEGGER_RTT_IN_RAM的定义设置为1。现在，J-Link将在应用程序中调用第一个SEGGER_RTT函数之后找到正确的RTT缓冲区。建议在应用程序开始时调用SEGGER_RTT_Init()。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;不同通道输出数据&#34;&gt;&lt;a href=&#34;#不同通道输出数据&#34; class=&#34;headerlink&#34; title=&#34;不同通道输出数据&#34;&gt;&lt;/a&gt;不同通道输出数据&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;SEGGER_RTT_TerminalOut(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;SEGGER_RTT_TerminalOut 0\r\n&amp;quot;&lt;/span&gt;);&lt;br&gt;SEGGER_RTT_TerminalOut(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;SEGGER_RTT_TerminalOut 1\r\n&amp;quot;&lt;/span&gt;);&lt;br&gt;SEGGER_RTT_TerminalOut(&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;SEGGER_RTT_TerminalOut 2\r\n&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;SEGGER_RTT_SetTerminal(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;br&gt;SEGGER_RTT_printf(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;SEGGER_RTT_printf 0\r\n&amp;quot;&lt;/span&gt;);&lt;br&gt;SEGGER_RTT_SetTerminal(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;);&lt;br&gt;SEGGER_RTT_printf(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;SEGGER_RTT_printf 1\r\n&amp;quot;&lt;/span&gt;);&lt;br&gt;SEGGER_RTT_SetTerminal(&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;);&lt;br&gt;SEGGER_RTT_printf(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;SEGGER_RTT_printf 2\r\n&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;输出带颜色的字符&#34;&gt;&lt;a href=&#34;#输出带颜色的字符&#34; class=&#34;headerlink&#34; title=&#34;输出带颜色的字符&#34;&gt;&lt;/a&gt;输出带颜色的字符&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// Control sequences, based on ANSI.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// Can be used to control color, and clear the screen&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_RESET                &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[0m&amp;quot;&lt;/span&gt;         &lt;span class=&#34;hljs-comment&#34;&gt;// Reset to default colors&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_CLEAR                &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[2J&amp;quot;&lt;/span&gt;         &lt;span class=&#34;hljs-comment&#34;&gt;// Clear screen, reposition cursor to top left&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BLACK           &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[2;30m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_RED             &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[2;31m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_GREEN           &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[2;32m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_YELLOW          &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[2;33m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BLUE            &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[2;34m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_MAGENTA         &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[2;35m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_CYAN            &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[2;36m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_WHITE           &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[2;37m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BRIGHT_BLACK    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[1;30m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BRIGHT_RED      &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[1;31m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BRIGHT_GREEN    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[1;32m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BRIGHT_YELLOW   &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[1;33m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BRIGHT_BLUE     &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[1;34m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BRIGHT_MAGENTA  &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[1;35m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BRIGHT_CYAN     &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[1;36m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_TEXT_BRIGHT_WHITE    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[1;37m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BLACK             &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[24;40m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_RED               &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[24;41m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_GREEN             &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[24;42m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_YELLOW            &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[24;43m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BLUE              &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[24;44m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_MAGENTA           &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[24;45m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_CYAN              &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[24;46m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_WHITE             &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[24;47m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BRIGHT_BLACK      &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[4;40m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BRIGHT_RED        &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[4;41m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BRIGHT_GREEN      &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[4;42m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BRIGHT_YELLOW     &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[4;43m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BRIGHT_BLUE       &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[4;44m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BRIGHT_MAGENTA    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[4;45m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BRIGHT_CYAN       &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[4;46m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;define&lt;/span&gt; RTT_CTRL_BG_BRIGHT_WHITE      &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;\x1B[4;47m&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;SEGGER_RTT_WriteString(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,RTT_CTRL_RESET&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Red: &amp;quot;&lt;/span&gt;\&lt;br&gt;                       RTT_CTRL_TEXT_RED&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;This text is red.&amp;quot;&lt;/span&gt;\&lt;br&gt;                       RTT_CTRL_BG_BRIGHT_GREEN&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;This background is green.\r\n&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;输入字符&#34;&gt;&lt;a href=&#34;#输入字符&#34; class=&#34;headerlink&#34; title=&#34;输入字符&#34;&gt;&lt;/a&gt;输入字符&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(SEGGER_RTT_HasKey())&lt;br&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; r = SEGGER_RTT_GetKey();&lt;br&gt;    SEGGER_RTT_WriteString(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;input:%c\r\n&amp;quot;&lt;/span&gt;, r);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(SEGGER_RTT_HasKey())&lt;br&gt;&amp;#123;&lt;br&gt;    ReadNum = SEGGER_RTT_Read(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,&amp;amp;acIn[&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;], &lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;(acIn));&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;;i++)&lt;br&gt;    &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;0x0A&lt;/span&gt; != acIn[i])&lt;br&gt;        &amp;#123;&lt;br&gt;            ReadNum++;&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;&lt;br&gt;        &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;break&lt;/span&gt;;&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125;&lt;br&gt;    SEGGER_RTT_Write(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,acIn,ReadNum);&lt;br&gt;    ReadNum=&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;memset&lt;/span&gt;(acIn,&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;(acIn));&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

</content>
        <category term="j-link" />
        <category term="rtt" />
        <category term="serial" />
        <category term="debug" />
        <category term="jlink" />
        <updated>2021-09-24T12:28:40.000Z</updated>
    </entry>
</feed>
