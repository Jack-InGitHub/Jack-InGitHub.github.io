{
    "version": "https://jsonfeed.org/version/1",
    "title": "Oikiou's Blog • All posts by \"powershell\" tag",
    "description": "Blog",
    "home_page_url": "https://www.oikiou.top",
    "items": [
        {
            "id": "https://www.oikiou.top/2022/a2c49dae/",
            "url": "https://www.oikiou.top/2022/a2c49dae/",
            "title": "PowerShell",
            "date_published": "2022-12-19T12:48:05.000Z",
            "content_html": "<h1 id=\"PowerShell\"><a href=\"#PowerShell\" class=\"headerlink\" title=\"PowerShell\"></a>PowerShell</h1><h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><h2 id=\"PowerShell-Oh-My-Posh-美化\"><a href=\"#PowerShell-Oh-My-Posh-美化\" class=\"headerlink\" title=\"PowerShell + Oh My Posh 美化\"></a>PowerShell + Oh My Posh 美化</h2><p><a href=\"https://www.edgeless.top/PowerShell%E7%BE%8E%E5%8C%96/\">参考 PowerShell美化</a></p>\n<h2 id=\"PowerShell-获取当前文件夹名称-仅获取当前文件夹名\"><a href=\"#PowerShell-获取当前文件夹名称-仅获取当前文件夹名\" class=\"headerlink\" title=\"PowerShell 获取当前文件夹名称 仅获取当前文件夹名\"></a>PowerShell 获取当前文件夹名称 仅获取当前文件夹名</h2><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">(<span class=\"hljs-built_in\">get-item</span> .).name<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Powershell获取当前时间\"><a href=\"#Powershell获取当前时间\" class=\"headerlink\" title=\"Powershell获取当前时间\"></a>Powershell获取当前时间</h2><p><a href=\"http://www.splaybow.com/post/powershell-get-date.html\">参考 PowerShell使用Get-Date获取日期和时间</a></p>\n<p>在PowerShell中直接调用<code>Get-Date</code>，可以返回当前的日期和时间，包括年、月、日、时、分、秒。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">PS</span> &gt; <span class=\"hljs-built_in\">Get-Date</span><br><span class=\"hljs-number\">2022</span>年<span class=\"hljs-number\">12</span>月<span class=\"hljs-number\">19</span>日 <span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">32</span>:<span class=\"hljs-number\">28</span><br></code></pre></td></tr></table></figure>\n\n<p>使用<code>-Format</code>参数来获取<code>Get-Date</code>中的年、月、日、时、分、秒。</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs txt\">yyyy 年<br>M    月<br>d    日<br>h    小时（12小时制）<br>H    小时（24小时制）<br>m    分钟<br>s    秒<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">PS</span> &gt; <span class=\"hljs-built_in\">Get-Date</span> <span class=\"hljs-literal\">-Format</span> HH:mm:ss<br><span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">34</span>:<span class=\"hljs-number\">11</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Powershell-ANSI颜色\"><a href=\"#Powershell-ANSI颜色\" class=\"headerlink\" title=\"Powershell ANSI颜色\"></a>Powershell ANSI颜色</h2><p>参考:<br><a href=\"https://juejin.cn/post/6920241597846126599\">了解 ANSI 转义码的 color 设置</a><br><a href=\"https://zhuanlan.zhihu.com/p/570148970\">ANSI转义代码</a></p>\n<blockquote>\n<p>  To use one of the ANSI escape codes, we need a literal <a href=\"https://en.wikipedia.org/wiki/Escape_character#ASCII_escape_character\">ESC character</a>. This is octal 033, or decimal 27. In Bash, you would use <code>&quot;\\033&quot;</code> or <code>&quot;\\e&quot;</code>; There’s no direct equivalent sequence in PowerShell but you can instead embed an expression: <code>&quot;$([char]27)&quot;</code></p>\n<p>  PowerShell 中没有直接等效的序列，但您可以改为嵌入一个表达式：<code>&quot;$([char]27)&quot;</code>，也就是说要将<code>\\e</code>修改为<code>$([char]27)</code></p>\n<p>  例如<code>\\e[32;1m text \\e[0m</code> 修改为 <code>$([char]27)[32;1m text $([char]27)[0m</code></p>\n</blockquote>\n<p><strong>ANSI Escape code编码中有专门控制字符颜色的控制符，</strong>例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">\\e[37;44;3;1m<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><code>\\e</code> 代表开始ANSI Escape code</li>\n<li><code>[</code> 代表转义序列开始符 CSI，Control Sequence Introducer</li>\n<li><code>37;44;4;1</code> 代表以<code>; </code>分隔的文本样式控制符，其中 37 代表文本前景色为白色，44代表背景为蓝色，3代表斜体，1代表加粗，<code>;</code>的数量不做限制</li>\n<li><code>m</code> 代表结束控制符序列</li>\n</ul>\n<h4 id=\"常用文本样式控制符\"><a href=\"#常用文本样式控制符\" class=\"headerlink\" title=\"常用文本样式控制符\"></a>常用文本样式控制符</h4><table>\n<thead>\n<tr>\n<th>代码</th>\n<th>作用</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>重置&#x2F;正常</td>\n<td>关闭所有属性。</td>\n</tr>\n<tr>\n<td>1</td>\n<td>粗体或增加强度</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>弱化（降低强度）</td>\n<td>未广泛支持。</td>\n</tr>\n<tr>\n<td>3</td>\n<td>斜体</td>\n<td>未广泛支持。有时视为反相显示。</td>\n</tr>\n<tr>\n<td>4</td>\n<td>下划线</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>缓慢闪烁</td>\n<td>低于每分钟150次。</td>\n</tr>\n<tr>\n<td>6</td>\n<td>快速闪烁</td>\n<td>MS-DOS ANSI.SYS；每分钟150以上；未广泛支持。</td>\n</tr>\n<tr>\n<td>7</td>\n<td>反显</td>\n<td>前景色与背景色交换。</td>\n</tr>\n<tr>\n<td>8</td>\n<td>隐藏</td>\n<td>未广泛支持。</td>\n</tr>\n<tr>\n<td>9</td>\n<td>划除</td>\n<td>字符清晰，但标记为删除。未广泛支持。</td>\n</tr>\n<tr>\n<td>10</td>\n<td>主要（默认）字体</td>\n<td></td>\n</tr>\n<tr>\n<td>11–19</td>\n<td>替代字体</td>\n<td>选择替代字体</td>\n</tr>\n<tr>\n<td>20</td>\n<td>尖角体</td>\n<td>几乎无支持。</td>\n</tr>\n<tr>\n<td>21</td>\n<td>关闭粗体或双下划线</td>\n<td>关闭粗体未广泛支持；双下划线几乎无支持。</td>\n</tr>\n<tr>\n<td>22</td>\n<td>正常颜色或强度</td>\n<td>不强不弱。</td>\n</tr>\n<tr>\n<td>23</td>\n<td>非斜体、非尖角体</td>\n<td></td>\n</tr>\n<tr>\n<td>24</td>\n<td>关闭下划线</td>\n<td>去掉单双下划线。</td>\n</tr>\n<tr>\n<td>25</td>\n<td>关闭闪烁</td>\n<td></td>\n</tr>\n<tr>\n<td>27</td>\n<td>关闭反显</td>\n<td></td>\n</tr>\n<tr>\n<td>28</td>\n<td>关闭隐藏</td>\n<td></td>\n</tr>\n<tr>\n<td>29</td>\n<td>关闭划除</td>\n<td></td>\n</tr>\n<tr>\n<td>30–37</td>\n<td>设置前景色</td>\n<td>参见下面的颜色表。</td>\n</tr>\n<tr>\n<td>38</td>\n<td>设置前景色</td>\n<td>下一个参数是5;n或2;r;g;b，见下。</td>\n</tr>\n<tr>\n<td>39</td>\n<td>默认前景色</td>\n<td>由具体实现定义（按照标准）。</td>\n</tr>\n<tr>\n<td>40–47</td>\n<td>设置背景色</td>\n<td>参见下面的颜色表。</td>\n</tr>\n<tr>\n<td>48</td>\n<td>设置背景色</td>\n<td>下一个参数是5;n或2;r;g;b，见下。</td>\n</tr>\n<tr>\n<td>49</td>\n<td>默认背景色</td>\n<td>由具体实现定义（按照标准）。</td>\n</tr>\n<tr>\n<td>51</td>\n<td>Framed</td>\n<td></td>\n</tr>\n<tr>\n<td>52</td>\n<td>Encircled</td>\n<td></td>\n</tr>\n<tr>\n<td>53</td>\n<td>上划线</td>\n<td></td>\n</tr>\n<tr>\n<td>54</td>\n<td>Not framed or encircled</td>\n<td></td>\n</tr>\n<tr>\n<td>55</td>\n<td>关闭上划线</td>\n<td></td>\n</tr>\n<tr>\n<td>60</td>\n<td>表意文字下划线或右边线</td>\n<td>几乎无支持。</td>\n</tr>\n<tr>\n<td>61</td>\n<td>表意文字双下划线或双右边线</td>\n<td></td>\n</tr>\n<tr>\n<td>62</td>\n<td>表意文字上划线或左边线</td>\n<td></td>\n</tr>\n<tr>\n<td>63</td>\n<td>表意文字双上划线或双左边线</td>\n<td></td>\n</tr>\n<tr>\n<td>64</td>\n<td>表意文字着重标志</td>\n<td></td>\n</tr>\n<tr>\n<td>65</td>\n<td>表意文字属性关闭</td>\n<td>重置60–64的所有效果。</td>\n</tr>\n<tr>\n<td>90–97</td>\n<td>设置明亮的前景色</td>\n<td>aixterm（非标准）。</td>\n</tr>\n<tr>\n<td>100–107</td>\n<td>设置明亮的背景色</td>\n<td>aixterm（非标准）。</td>\n</tr>\n</tbody></table>\n<p>颜色对照表</p>\n<p><img src=\"/PowerShell.assets/e9436bb4998a4fbf9bd5abbe74121ccdtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp\" alt=\"3bit-color\"></p>\n<h2 id=\"Powershell-修改提示符的文字内容和颜色\"><a href=\"#Powershell-修改提示符的文字内容和颜色\" class=\"headerlink\" title=\"Powershell 修改提示符的文字内容和颜色\"></a>Powershell 修改提示符的文字内容和颜色</h2><p><a href=\"https://www.lfhacks.com/tech/powershell-prompt-customization/\">参考: Powershell 修改提示符的文字内容和颜色</a></p>\n<p><a href=\"https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/\">参考: 为 Windows PowerShell 设置 User Alias （命令别名）</a></p>\n<ol>\n<li><p>首先我们先找到Powershell的配置文件的路径, 我们输入命令<code>echo $profile</code>就能显示.</p>\n</li>\n<li><p>如果这个文件不存在, 我们输入命令<code>notepad $Profile</code>或者<code>code $Profile</code>去新建一个文件.</p>\n</li>\n<li><p>Powershell 有一个特殊的函数： <code>prompt</code> 函数，这个函数规定了提示符的内容和外观。</p>\n<p>我们可以利用下面的命令可以查看当前使用的 <code>prompt</code> 函数的内容：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">(<span class=\"hljs-built_in\">Get-Command</span> Prompt).ScriptBlock<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>通过 <code>prompt</code> 函数的返回值我们就能自定义提示符。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">prompt</span></span> &#123;<br>  <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[32m&quot;</span> + <span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Get-Date</span> <span class=\"hljs-literal\">-Format</span> HH:mm:ss) + <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[0m&quot;</span> +<br>  <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[95m&quot;</span> + <span class=\"hljs-variable\">$</span>((<span class=\"hljs-built_in\">get-item</span> .).name) + <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[0m&quot;</span> +<br>  <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[33m&gt;<span class=\"hljs-variable\">$</span>([char]27)[0m&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  第一行 <code>Get-Date</code>获取当前系统的时间, <code>-Format</code>格式化使用<code>HH:mm:ss</code>的格式, 前后使用了ANSI颜色转义将前景色设置为深绿色</p>\n<p>  第二行 <code>(get-item .).name</code>获取了当前文件夹的名称, 并设置前景色为深紫色</p>\n<p>  第三行 输出一个深黄色的<code>&gt;</code>符号</p>\n</blockquote>\n</li>\n<li><p>输入 <code>. $Profile</code> 命令生效。(注意这里是大小写不敏感的)</p>\n</li>\n</ol>\n<h2 id=\"Powershell-起别名-User-Alias-命令别名\"><a href=\"#Powershell-起别名-User-Alias-命令别名\" class=\"headerlink\" title=\"Powershell 起别名(User Alias) 命令别名\"></a>Powershell 起别名(User Alias) 命令别名</h2><p><a href=\"https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/\">参考 为 Windows PowerShell 设置 User Alias （命令别名）</a></p>\n<blockquote>\n<p>  我们的思路就是将命令设置成为一个<code>function</code>, 运行这个<code>function</code>执行特定的指令即可.</p>\n</blockquote>\n<p>两个思路:</p>\n<ol>\n<li><p>使用<code>New-Alias</code>指令, 添加到Powershell的<code>$Profile</code>文件里面, 每次启动运行一次. 这个命令里面不能含有空格.</p>\n<p><a href=\"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/new-alias?view=powershell-7.3\">参考 Microsoft的Powershell文档</a></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-comment\"># 此命令创建一个名为 List 的别名来表示 Get-ChildItem cmdlet。</span><br><span class=\"hljs-built_in\">New-Alias</span> <span class=\"hljs-literal\">-Name</span> <span class=\"hljs-string\">&quot;List&quot;</span> <span class=\"hljs-built_in\">Get-ChildItem</span><br><span class=\"hljs-comment\"># 为notepad++ 设置别名 np</span><br><span class=\"hljs-built_in\">New-Alias</span> <span class=\"hljs-literal\">-Name</span> <span class=\"hljs-string\">&quot;np&quot;</span> notepad++.exe<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>使用<code>function</code>指令, 添加到Powershell的<code>$Profile</code>文件里面, 把指令当作<code>function</code>的名称来调用, 这样命令可以带有空格.</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-comment\"># 带参数的function</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">np</span>+</span> &#123;<br>    <span class=\"hljs-keyword\">param</span> (<br>        <span class=\"hljs-variable\">$ComputerName</span><br>    )<br>    notepad++.exe <span class=\"hljs-variable\">$ComputerName</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "ps",
                "powershell"
            ]
        }
    ]
}