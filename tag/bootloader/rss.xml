<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Oikiou&#39;s Blog • Posts by &#34;bootloader&#34; tag</title>
        <link>https://www.oikiou.top</link>
        <description>Blog</description>
        <language>zh-CN</language>
        <pubDate>Thu, 16 Aug 2018 19:20:02 +0800</pubDate>
        <lastBuildDate>Thu, 16 Aug 2018 19:20:02 +0800</lastBuildDate>
        <category>123</category>
        <category>embedded</category>
        <category>cc2530</category>
        <category>zigbee</category>
        <category>hp</category>
        <category>chrome</category>
        <category>sscanf</category>
        <category>c/c++</category>
        <category>hex</category>
        <category>md5</category>
        <category>jpeg</category>
        <category>webp</category>
        <category>jpeg2000</category>
        <category>image</category>
        <category>osi</category>
        <category>ssl</category>
        <category>https</category>
        <category>markdown</category>
        <category>note</category>
        <category>tags</category>
        <category>label</category>
        <category>category</category>
        <category>iap</category>
        <category>bootloader</category>
        <category>stm32</category>
        <category>typora</category>
        <category>usart</category>
        <category>rts</category>
        <category>cts</category>
        <category>dtr</category>
        <category>dsr</category>
        <category>ws2812</category>
        <category>spi</category>
        <category>dma</category>
        <category>xip</category>
        <category>nor</category>
        <category>nand</category>
        <category>windows</category>
        <category>makefile</category>
        <category>android</category>
        <category>mtp</category>
        <category>pc</category>
        <category>driver</category>
        <category>ip</category>
        <category>location</category>
        <category>api</category>
        <category>zsh</category>
        <category>shell</category>
        <category>linux</category>
        <category>zip</category>
        <category>gzip</category>
        <category>bzip</category>
        <category>tar</category>
        <category>DS_Store</category>
        <category>rtf</category>
        <category>后缀</category>
        <category>character encoding</category>
        <category>gb2312</category>
        <category>utf-8</category>
        <category>机智云</category>
        <category>kms</category>
        <category>office</category>
        <category>volume</category>
        <category>蓝桥杯</category>
        <category>国赛</category>
        <category>ct117e</category>
        <category>超声波</category>
        <category>github</category>
        <category>hosts</category>
        <category>ct117e-ex</category>
        <category>c</category>
        <category>c++</category>
        <category>ms-dos</category>
        <category>pid</category>
        <category>micropython</category>
        <category>python</category>
        <category>qt</category>
        <category>pyqt</category>
        <category>正则表达式</category>
        <category>数据结构</category>
        <category>堆栈</category>
        <category>队列</category>
        <category>链表</category>
        <category>树</category>
        <category>二叉树</category>
        <category>life</category>
        <category>workflow</category>
        <category>人生</category>
        <category>cat_drive</category>
        <category>cad</category>
        <category>心理学</category>
        <category>switch</category>
        <category>nintendo</category>
        <category>game</category>
        <category>synology</category>
        <category>hardware</category>
        <category>lenovo</category>
        <category>disk</category>
        <category>software</category>
        <category>dslogic</category>
        <category>逻辑分析仪</category>
        <category>pyhton</category>
        <category>decoder</category>
        <category>摄影</category>
        <category>git</category>
        <category>docker</category>
        <category>dockerfile</category>
        <category>namespace</category>
        <category>cgroup</category>
        <category>dockerhub</category>
        <category>j-link</category>
        <category>rtt</category>
        <category>serial</category>
        <category>debug</category>
        <category>jlink</category>
        <category>rdpwrap</category>
        <category>rdp</category>
        <category>flash</category>
        <category>j-tag</category>
        <category>spacedesk</category>
        <category>投屏</category>
        <category>ps</category>
        <category>powershell</category>
        <category>vscode</category>
        <category>commenttranslate</category>
        <category>wsl</category>
        <category>sourceinsigh</category>
        <category>si</category>
        <category>ide</category>
        <category>wordpress</category>
        <category>web</category>
        <category>mysql</category>
        <category>nginx</category>
        <category>unit</category>
        <category>m</category>
        <category>cm</category>
        <category>mm</category>
        <category>s</category>
        <category>us</category>
        <category>tmux</category>
        <category>cortex-m3</category>
        <category>hexo</category>
        <category>jekyll</category>
        <category>fluid</category>
        <category>cusdis</category>
        <category>twikoo</category>
        <category>blog</category>
        <category>gravatar</category>
        <category>cravatar</category>
        <category>cortex-a7</category>
        <category>alpha_mini</category>
        <category>正点原子</category>
        <category>rtx</category>
        <category>rtos</category>
        <category>keil</category>
        <category>ucos</category>
        <category>rt-thread</category>
        <category>raspberry</category>
        <category>ap</category>
        <category>wifi</category>
        <category>wiringpi</category>
        <category>pwm</category>
        <category>bluetooth</category>
        <category>蓝牙</category>
        <category>modbus</category>
        <item>
            <guid isPermalink="true">https://www.oikiou.top/2018/2d20bb21/</guid>
            <title>STM32F070系列的IAP程序</title>
            <link>https://www.oikiou.top/2018/2d20bb21/</link>
            <category>iap</category>
            <category>bootloader</category>
            <category>stm32</category>
            <pubDate>Thu, 16 Aug 2018 19:20:02 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;STM32F070系列的IAP程序&#34;&gt;&lt;a href=&#34;#STM32F070系列的IAP程序&#34; class=&#34;headerlink&#34; title=&#34;STM32F070系列的IAP程序&#34;&gt;&lt;/a&gt;STM32F070系列的IAP程序&lt;/h1&gt;&lt;h1 id=&#34;总程序思路&#34;&gt;&lt;a href=&#34;#总程序思路&#34; class=&#34;headerlink&#34; title=&#34;总程序思路&#34;&gt;&lt;/a&gt;总程序思路&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/2018/2d20bb21/70.png&#34; alt=&#34;bootloader&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2018/2d20bb21/70-16635087132592.png&#34; alt=&#34;app&#34;&gt;&lt;/p&gt;
&lt;p&gt;之所以不直接将接收到的BIN文件直接写入到APP区域是因为如果升级过程出现某些错误时，程序将会清除升级标志位，并跳转到APP运行程序减少产品变砖的概率。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;注：如果在  将BacpupApp区域的BIN文件拷贝到App区域   这一步如果拷贝两次都校验失败将会导致程序停掉。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;STM32内Flash区域划分&#34;&gt;&lt;a href=&#34;#STM32内Flash区域划分&#34; class=&#34;headerlink&#34; title=&#34;STM32内Flash区域划分&#34;&gt;&lt;/a&gt;STM32内Flash区域划分&lt;/h1&gt;&lt;p&gt; &lt;img src=&#34;/2018/2d20bb21/70-16635087883674.png&#34; alt=&#34;stm32&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2018/2d20bb21/70-16635087985376.png&#34; alt=&#34;flash&#34;&gt;&lt;/p&gt;
&lt;p&gt;此次使用的MCU型号是STM32F070CB，由其Flash组织特性可知其Flash一页为1KB（若总Flash大小，大于等于256KB则其一页大小为2KB），为了程序简单高效，所以使FLAG占用一页（1KB）的位置（Flag只使用了前2B的空间）。&lt;/p&gt;
&lt;h1 id=&#34;STM32与上位机通信过程&#34;&gt;&lt;a href=&#34;#STM32与上位机通信过程&#34; class=&#34;headerlink&#34; title=&#34;STM32与上位机通信过程&#34;&gt;&lt;/a&gt;STM32与上位机通信过程&lt;/h1&gt;&lt;h2 id=&#34;上位机发送给STM32&#34;&gt;&lt;a href=&#34;#上位机发送给STM32&#34; class=&#34;headerlink&#34; title=&#34;上位机发送给STM32&#34;&gt;&lt;/a&gt;上位机发送给STM32&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 16B 命令数据长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 注：命令长度设置为 0x10  即16B大小&lt;/span&gt;&lt;br&gt;0x55  0xAA   0x01    命令长度    命令码   固件总包数   0x00   0x00   0x00   0x00   0x00   0x00   0x00  0x00   0x00    和校验&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 1024+7B 固件数据长度&lt;/span&gt;&lt;br&gt;0x55  0xAA   0x01  包号  命令码     0xFF   BINData[1024]    和校验&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;STM32发送给上位机&#34;&gt;&lt;a href=&#34;#STM32发送给上位机&#34; class=&#34;headerlink&#34; title=&#34;STM32发送给上位机&#34;&gt;&lt;/a&gt;STM32发送给上位机&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 16B 命令数据长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 注：命令长度设置为 0x10  即16B大小&lt;/span&gt;&lt;br&gt;0x55  0xAA   0x01  命令长度  命令码    0x00   0x00   0x00   0x00   0x00   0x00   0x00   0x00   0x00   0x00    和校验&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2018/2d20bb21/70-16635090195918.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;IAP应用说明&#34;&gt;&lt;a href=&#34;#IAP应用说明&#34; class=&#34;headerlink&#34; title=&#34;IAP应用说明&#34;&gt;&lt;/a&gt;IAP应用说明&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;App区域和Bootloader区域都有IAP实现的程序段，所以要实现IAP就要要求App区域和Bootloader的程序都可以正常工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;App程序需要做的修改：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加 iap.c 文件，并在main函数最前面调用 iap.c 里的函数    iRemapIrqVector();   重映射中断向量&lt;/li&gt;
&lt;li&gt;用这种方法重映射中断向量，RAM的前0xC0个字节不能用，需要将RAM始地址修改到  0x2000 00C0 处，将Size大小减掉0xC0&lt;/li&gt;
&lt;li&gt;ROM起始地址修改到  0x0800 3000 处，将Size大小设置成0xE800（58KB）&lt;/li&gt;
&lt;li&gt;在程序的串口命令判断中添加IAP升级命令判断，满足条件则使能升级标志位，并重启MCU进入Bootloader&lt;/li&gt;
&lt;li&gt;刷入APP和Bootloader&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;关于移植到其他芯片&#34;&gt;&lt;a href=&#34;#关于移植到其他芯片&#34; class=&#34;headerlink&#34; title=&#34;关于移植到其他芯片&#34;&gt;&lt;/a&gt;关于移植到其他芯片&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;如果移植到F103系列芯片的话重映射中断向量将变得非常简单，一行代码就搞定，也就无需修改RAM起始地址&lt;/li&gt;
&lt;li&gt;如果移植的芯片容量不一样需要查看其一个页的大小是多少，然后重新划分Flash区域&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bootloader源码下载：&lt;a href=&#34;https://download.csdn.net/download/weixin_42078116/10610445&#34;&gt;源码&lt;/a&gt;&lt;br&gt;App区源码：待加入&lt;br&gt;上位机程序和源码：&lt;a href=&#34;https://download.csdn.net/download/weixin_42078116/10610490&#34;&gt;源码&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.openedv.com/forum.php?mod=viewthread&amp;tid=85906&#34;&gt;STM32实现IAP功能的学习笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.openedv.com/forum.php?mod=viewthread&amp;tid=85906&#34;&gt;STM32实现IAP功能的学习笔记&lt;/a&gt; &lt;/p&gt;
&lt;h1 id=&#34;扩展：STM32运行过程&#34;&gt;&lt;a href=&#34;#扩展：STM32运行过程&#34; class=&#34;headerlink&#34; title=&#34;扩展：STM32运行过程&#34;&gt;&lt;/a&gt;扩展：STM32运行过程&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;  TIPS：STM32上电后先  &lt;strong&gt;执行复位中断 Reset_Handler&lt;/strong&gt;  然后才会进入  main 函数。&lt;/p&gt;
&lt;p&gt;  STM32的程序运行过程在很多资料里也都有介绍，因为STM32F103的单片机是基于Cortex-M3核的，它的内部主要是通过中断向量表来响应各种中断，内部闪存的起始地址是0x08000000，中断向量表的起始地址是0x8000004，程序启动后，将首先从“中断向量表”取出复位中断向量执行复位中断程序完成启动，当中断来临时STM32 的内部硬件机制亦会自动将 PC 指针定位到“中断向量表”处，并根据中断源取出对应的中断向量执行相应的中断服务程序。&lt;/p&gt;
&lt;p&gt;  &lt;img src=&#34;/2018/2d20bb21/70-166350916978910.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;  如上图所示STM32的正常启动流程是：&lt;br&gt;  a. STM32上电后会从 0x8000004 处取出复位中断向量的地址，并跳转执行复位中断服务程序，如标号1所示；&lt;br&gt;  b. 复位中断复位程序执行完成之后就会跳转到我们的main函数如标号2所示；&lt;br&gt;  c. main函数一般为死循环，当其收到某一中断请求之后STM32会强制把PC指针指向中断向量表，如标号3所示；&lt;br&gt;  d. 查询中断向量表，根据中断源来跳转到相应的中断服务程序中执行响应的操作；如标号4、5所示；&lt;br&gt;  e. 执行完中断服务程序之后会再回到main函数中，如标号6所示。&lt;/p&gt;
&lt;p&gt;  以上是STM32的正常运行过程，而当加入IAP程序之后，运行流程就如下所示：&lt;/p&gt;
&lt;p&gt;  &lt;img src=&#34;/2018/2d20bb21/70-166350918005812.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;  加入IAP后程序运行如下：&lt;br&gt;  a. STM32复位之后还是从0x8000004处获取中断向量表的地址，并跳转执行复位中断服务程序，如标号1所示；&lt;br&gt;  b. 执行完复位中断服务程序之后回调转到IAP的main函数中，如标号2所示；&lt;br&gt;  c. IAP的过程就是通过某种选定的通信方式（如串口）来接收程序文件，并且存储在指定的FLASH空间里，随后会加载新的程序，而新程序&lt;br&gt;  的复位中断向量起始地址为0X08000004+N+M，取出新程序的复位中断向量的地址，并跳转执行新程序的复位中断服务程序，随后跳转&lt;br&gt;  至新程序的 main 函数，如标号3、4所示；&lt;br&gt;  d. 此时在STM32的FLASH里面会有两个中断向量表，在新程序 main 函数执行的过程中，当中断来临时PC指针仍会回跳转至地址为&lt;br&gt;  0x8000004 中断向量表处，而并不是新程序的中断向量表，这是由STM32的硬件机制决定的，如标号5所示；&lt;br&gt;  e. 查询中断向量表，根据中断源来跳转到新的中断服务程序中执行响应的操作，如标号6所示；&lt;br&gt;  f. 执行完中断服务程序之后会再回到main函数中，如标号7、8所示。&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
    </channel>
</rss>
