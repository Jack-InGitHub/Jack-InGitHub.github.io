{
    "version": "https://jsonfeed.org/version/1",
    "title": "Oikiou's Blog • All posts by \"正则表达式\" tag",
    "description": "Blog",
    "home_page_url": "https://www.oikiou.top",
    "items": [
        {
            "id": "https://www.oikiou.top/2022/2f57a694/",
            "url": "https://www.oikiou.top/2022/2f57a694/",
            "title": "正则表达式",
            "date_published": "2022-01-21T14:57:15.000Z",
            "content_html": "<h1 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h1><h1 id=\"正则表达式-语法\"><a href=\"#正则表达式-语法\" class=\"headerlink\" title=\"正则表达式 - 语法\"></a>正则表达式 - 语法</h1><h2 id=\"可打印普通字符匹配\"><a href=\"#可打印普通字符匹配\" class=\"headerlink\" title=\"可打印普通字符匹配\"></a>可打印普通字符匹配</h2><p>普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">字符</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>.</code></td>\n<td align=\"left\">匹配除换行符（\\n、\\r）之外的任何单个字符，相等于 <code>[^\\n\\r]</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\w</code></td>\n<td align=\"left\">匹配字母、数字、下划线。等价于 [A-Za-z0-9_]<br><code>\\W 匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>[\\s\\S]</code></td>\n<td align=\"left\">匹配所有。<code>\\s</code> 是匹配所有空白符，包括换行，<code>\\S</code> 非空白符，不包括换行。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[ABC]</code></td>\n<td align=\"left\">匹配 <code>[...]</code> 中的所有字符，<br/>例如 <code>[aeiou]</code> 匹配字符串 “google runoob taobao” 中所有的 e o u a 字母。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[^ABC]</code></td>\n<td align=\"left\">匹配除了 <code>[...]</code> 中字符的所有字符，<br/>例如 <code>[^aeiou]</code> 匹配字符串 “google runoob taobao” 中除了 e o u a 字母的所有字母。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[A-Z]</code></td>\n<td align=\"left\"><code>[A-Z]</code> 表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\d</code></td>\n<td align=\"left\">匹配一个数字字符。等价于<code>[0-9]</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\D</code></td>\n<td align=\"left\">匹配一个非数字字符。等价于<code>[^0-9]</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\xnn</code></td>\n<td align=\"left\">十六进制转义字符序列。匹配两个十六进制数字<em>nn</em>表示的字符。<br/>例如，“<code>\\x41</code>”匹配“<code>A</code>”。“<code>\\x041</code>”则等价于“<code>\\x04&amp;1</code>”。正则表达式中可以使用ASCII编码。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\num</code></td>\n<td align=\"left\">向后引用（back-reference）一个子字符串（substring），该子字符串与正则表达式的第<em>num</em>个用括号围起来的捕捉群（capture group）子表达式（subexpression）匹配。<br/>其中<code>num</code>是从1开始的十进制正整数，其上限可能是9[<a href=\"https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F#cite_note-3\">注 2]</a>、31[<a href=\"https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F#cite_note-4\">注 3]</a>、99甚至无限[<a href=\"https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F#cite_note-5\">注 4]</a>。<br/>例如：“<code>(.)\\1</code>”匹配两个连续的相同字符。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\n</code></td>\n<td align=\"left\">标识一个八进制转义值或一个向后引用。<br/>如果<code>\\n</code>之前至少<code>n</code>个获取的子表达式，则<code>n</code>为向后引用。<br/>否则，如果<code>n</code>为八进制数字（0-7），则<code>n</code>为一个八进制转义值。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\nm</code></td>\n<td align=\"left\">3位八进制数字，标识一个八进制转义值或一个向后引用。<br/>如果<code>\\nm</code>之前至少有<code>nm</code>个获得子表达式，则<em>nm</em>为向后引用。<br/>如果<code>\\nm</code>之前至少有<code>n</code>个获取，则<em>n</em>为一个后跟文字<em>m</em>的向后引用。<br/>如果前面的条件都不满足，若<code>n</code>和<code>m</code>均为八进制数字（0-7），则<code>\\nm</code>将匹配八进制转义值<em>nm</em>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\nml</code></td>\n<td align=\"left\">如果<code>n</code>为八进制数字（0-3），且<code>m</code>和<code>l</code>均为八进制数字（0-7），则匹配八进制转义值<code>nml</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\un</code></td>\n<td align=\"left\">Unicode转义字符序列。其中<code>n</code>是一个用四个十六进制数字表示的Unicode字符。<br/>例如，<code>\\u00A9</code>匹配著作权符号（©）。</td>\n</tr>\n</tbody></table>\n<h2 id=\"非打印字符匹配\"><a href=\"#非打印字符匹配\" class=\"headerlink\" title=\"非打印字符匹配\"></a>非打印字符匹配</h2><p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">字符</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>\\cx</code></td>\n<td align=\"left\">匹配由x指明的控制字符。<br/>例如， <code>\\cM</code> 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\f</code></td>\n<td align=\"left\">匹配一个换页符。等价于 \\x0c 和 \\cL。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\n</code></td>\n<td align=\"left\">匹配一个换行符。等价于 \\x0a 和 \\cJ。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\r</code></td>\n<td align=\"left\">匹配一个回车符。等价于 \\x0d 和 \\cM。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\s</code></td>\n<td align=\"left\">匹配任何空白字符，包括空格、制表符、换页符等等。<br/>等价于<code> [\\f\\n\\r\\t\\v]</code>。注意 Unicode 正则表达式会匹配全角空格符。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\S</code></td>\n<td align=\"left\">匹配任何非空白字符。等价于 <code>[^ \\f\\n\\r\\t\\v]</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\t</code></td>\n<td align=\"left\">匹配一个制表符。等价于 \\x09 和 \\cI。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\v</code></td>\n<td align=\"left\">匹配一个垂直制表符。等价于 \\x0b 和 \\cK。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\W</code></td>\n<td align=\"left\">匹配任何非单词字符。等价于“<code>[^A-Za-z0-9_]</code>”。</td>\n</tr>\n</tbody></table>\n<h2 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h2><table>\n<thead>\n<tr>\n<th align=\"left\">特别字符</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>\\</code></td>\n<td align=\"left\">将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。<br>例如， ‘n’ 匹配字符 ‘n’。’\\n’ 匹配换行符。序列 <code>&#39;\\\\&#39;</code> 匹配 <code>&quot;\\&quot;</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>^</code></td>\n<td align=\"left\">匹配输入字符串的开始位置，<br>当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。<br>要匹配 ^ 字符本身，请使用 <code>\\^</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>$</code></td>\n<td align=\"left\">匹配输入字符串的结尾位置。<br>如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\\n’ 或 ‘\\r’。要匹配 $ 字符本身，请使用<code> \\$</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>( )</code></td>\n<td align=\"left\">标记一个子表达式的开始和结束位置。<br>子表达式可以获取供以后使用。要匹配这些字符，请使用<code>\\(</code>和<code> \\)</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>*</code></td>\n<td align=\"left\">匹配前面的子表达式零次或多次。要匹配 <code>* </code>字符，请使用<code> \\*</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>+</code></td>\n<td align=\"left\">匹配前面的子表达式一次或多次。要匹配 <code>+</code> 字符，请使用 <code>\\+</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>?</code></td>\n<td align=\"left\">匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>.</code></td>\n<td align=\"left\">匹配除换行符 <code>\\n</code> 之外的任何单字符。要匹配<code> .</code> ，请使用 <code>\\.</code> 。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>[</code></td>\n<td align=\"left\">标记一个中括号表达式的开始。要匹配 <code>[</code>，请使用 <code>\\[</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&#123;</code></td>\n<td align=\"left\">标记限定符表达式的开始。要匹配<code> &#123;</code>，请使用<code> \\&#123;</code>。</td>\n</tr>\n<tr>\n<td align=\"left\">&#96;</td>\n<td align=\"left\">&#96;</td>\n</tr>\n</tbody></table>\n<h2 id=\"限定符-表达式匹配次数\"><a href=\"#限定符-表达式匹配次数\" class=\"headerlink\" title=\"限定符(表达式匹配次数)\"></a>限定符(表达式匹配次数)</h2><p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。</p>\n<p>请注意，限定符出现在范围表达式之后。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">字符</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>*</code></td>\n<td align=\"left\">匹配前面的子表达式零次或多次。<br/>例如，<strong>zo*</strong> 能匹配 <strong>“z”</strong> 以及 <strong>“zoo”<strong>。</strong></strong>* 等价于 **{0,}**。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>+</code></td>\n<td align=\"left\">匹配前面的子表达式一次或多次。<br/>例如，<strong>zo+</strong> 能匹配 <strong>“zo”</strong> 以及 “**zoo”**，但不能匹配 <strong>“z”<strong>。</strong>+</strong> 等价于 **{1,}**。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>? </code></td>\n<td align=\"left\">匹配前面的子表达式零次或一次。<br>例如，<strong>do(es)?</strong> 可以匹配 <strong>“do”</strong> 、 <strong>“does”<strong>、 <strong>“doxy”</strong> 中的 <strong>“do”</strong> 。</strong>?</strong> 等价于 **{0,1}**。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&#123;n&#125;</code></td>\n<td align=\"left\">n 是一个非负整数。匹配确定的 <strong>n</strong> 次。<br/>例如，<strong>o{2}</strong> 不能匹配 <strong>“Bob”</strong> 中的 <strong>o</strong>，但是能匹配 <strong>“food”</strong> 中的两个 <strong>o</strong>。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&#123;n,&#125; </code></td>\n<td align=\"left\">n 是一个非负整数。至少匹配n 次。<br/>例如，<strong>o{2,}</strong> 不能匹配 <strong>“Bob”</strong> 中的 <strong>o</strong>，但能匹配 <strong>“foooood”</strong> 中的所有 <strong>o</strong>。<strong>o{1,}</strong> 等价于 <strong>o+<strong>。</strong>o{0,}</strong> 则等价于 **o***。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>&#123;n,m&#125;</code></td>\n<td align=\"left\">m 和 n 均为非负整数，其中 n &lt;&#x3D; m。最少匹配 n 次且最多匹配 m 次。<br/>例如，<strong>o{1,3}</strong> 将匹配 <strong>“fooooood”</strong> 中的前三个 <strong>o</strong>。<strong>o{0,1}</strong> 等价于 **o?**。<br/>请注意在逗号和两个数之间不能有空格。</td>\n</tr>\n</tbody></table>\n<h2 id=\"定位符-确定-固定位置\"><a href=\"#定位符-确定-固定位置\" class=\"headerlink\" title=\"定位符(确定 固定位置)\"></a>定位符(确定 固定位置)</h2><p>定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">字符</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>^</code></td>\n<td align=\"left\">匹配输入字符串<strong>开始</strong>的位置。<br>如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \\n 或 \\r 之后的位置匹配。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>$</code></td>\n<td align=\"left\">匹配输入字符串<strong>结尾</strong>的位置。<br/>如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \\n 或 \\r 之前的位置匹配。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\b</code></td>\n<td align=\"left\">匹配一个<strong>单词边界</strong>，即字与空格间的位置。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>\\B</code></td>\n<td align=\"left\">非单词边界匹配。</td>\n</tr>\n</tbody></table>\n<h2 id=\"选择-捕获-保存\"><a href=\"#选择-捕获-保存\" class=\"headerlink\" title=\"选择(捕获 保存)\"></a>选择(捕获 保存)</h2><table>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>(pattern)</code></td>\n<td>匹配pattern并获取这一匹配的子字符串。该子字符串用于向后引用。</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p><strong>()</strong> 表示捕获分组，**()** 会把每个分组里的匹配的值保存起来， 多个匹配值可以通过数字 n 来查看(<strong>n</strong> 是一个数字，表示第 n 个捕获组的内容)。</p>\n</li>\n<li><p>缓冲区编号从 1 开始。</p>\n</li>\n<li><p>每个缓冲区都可以使用 <strong><code>$n</code></strong> 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。例如 <code>$1</code>,<code>$2</code> 等等</p>\n<ul>\n<li>需要注意的是菜鸟教程里面写这里是用<code>/n</code>匹配, 在notepad++里面这个没问题, 但是VSCode并不能识别这个</li>\n</ul>\n</li>\n<li><p>可以使用非捕获元字符 <code> ?:</code> 、<code>?=</code> 或 <code>?!</code> 来重写捕获，忽略对相关匹配的保存。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 原始串</span><br>https://en.wikipedia.org/wiki/Regular_expression<br>$ (\\w+)://(.+?)/(.+)<br>$  <span class=\"hljs-variable\">$1</span> \\n <span class=\"hljs-variable\">$2</span> \\n <span class=\"hljs-variable\">$3</span><br><span class=\"hljs-comment\"># 替换后</span><br> https <br> en.wikipedia.org <br> wiki/Regular_expression<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"非捕获元-lt-lt\"><a href=\"#非捕获元-lt-lt\" class=\"headerlink\" title=\"非捕获元 ?: ?= ?&lt;= ?! ?&lt;!\"></a>非捕获元 <code>?: ?= ?&lt;= ?! ?&lt;!</code></h3><table>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>(pattern)</code></td>\n<td>匹配pattern并获取这一匹配的子字符串。该子字符串用于向后引用。</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>(?:pattern)</code></td>\n<td>匹配pattern<strong>但不获取</strong>匹配的子字符串(shy groups)<br>也就是说这是一个非获取匹配，不存储匹配的子字符串用于向后引用。<br>这在使用或字符“&#96;(</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>(?=pattern)</code></td>\n<td><strong>正向肯定预查</strong>（look ahead positive assert），在任何<strong>匹配</strong>pattern的字符串开始处匹配查找字符串。<br>这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。<br/>例如，“&#96;Windows(?&#x3D;95</td>\n</tr>\n<tr>\n<td><code>(?!pattern)</code></td>\n<td><strong>正向否定预查</strong>（negative assert），在任何<strong>不匹配</strong>pattern的字符串开始处匹配查找字符串。<br/>这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。<br/>例如“&#96;Windows(?!95</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>(?&lt;=pattern)</code></td>\n<td><strong>反向肯定预查</strong>（look behind positive assert），与正向肯定预查类似，只是方向相反。<br/>例如，“&#96;(?&lt;&#x3D;95</td>\n</tr>\n<tr>\n<td><code>(?&lt;!pattern)</code></td>\n<td><strong>反向否定预查</strong>，与正向否定预查类似，只是方向相反。<br/>例如“&#96;(?&lt;!95</td>\n</tr>\n</tbody></table>\n<h1 id=\"正则表达式-修饰符\"><a href=\"#正则表达式-修饰符\" class=\"headerlink\" title=\"正则表达式 - 修饰符\"></a>正则表达式 - 修饰符</h1><p>标记也称为修饰符，正则表达式的标记用于指定额外的匹配策略。</p>\n<p>标记不写在正则表达式里，标记位于表达式之外，格式如下：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">/pattern/</span>flags<br></code></pre></td></tr></table></figure>\n\n<p>下表列出了正则表达式常用的修饰符：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">修饰符</th>\n<th align=\"left\">含义</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>i</code></td>\n<td align=\"left\">ignore - 不区分大小写</td>\n<td align=\"left\">将匹配设置为不区分大小写，搜索时不区分大小写: A 和 a 没有区别。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>g</code></td>\n<td align=\"left\">global - 全局匹配</td>\n<td align=\"left\">查找所有的匹配项。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>m</code></td>\n<td align=\"left\">multi line - 多行匹配</td>\n<td align=\"left\">使边界字符 <strong>^</strong> 和 <strong>$</strong> 匹配每一行的开头和结尾，记住是多行，而不是整个字符串的开头和结尾。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>s</code></td>\n<td align=\"left\">特殊字符圆点 <strong>.</strong> 中包含换行符 <strong>\\n</strong></td>\n<td align=\"left\">默认情况下的圆点 <strong>.</strong> 是匹配除换行符 <strong>\\n</strong> 之外的任何字符，加上 <strong>s</strong> 修饰符之后, <strong>.</strong> 中包含换行符 \\n。</td>\n</tr>\n</tbody></table>\n<h1 id=\"正则表达式-优先级\"><a href=\"#正则表达式-优先级\" class=\"headerlink\" title=\"正则表达式 - 优先级\"></a>正则表达式 - 优先级</h1><table>\n<thead>\n<tr>\n<th align=\"center\">优先权</th>\n<th align=\"center\">符号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">最高</td>\n<td align=\"center\"><code>\\</code></td>\n</tr>\n<tr>\n<td align=\"center\">高</td>\n<td align=\"center\"><code>()</code>、<code>(?:)</code>、<code>(?=)</code>、<code>[]</code></td>\n</tr>\n<tr>\n<td align=\"center\">中</td>\n<td align=\"center\"><code>*</code>、<code>+</code>、<code>?</code>、<code>&#123;n&#125;</code>、<code>&#123;n,&#125;</code>、<code>&#123;n,m&#125;</code></td>\n</tr>\n<tr>\n<td align=\"center\">低</td>\n<td align=\"center\"><code>^</code>、<code>$</code>、中介字符</td>\n</tr>\n<tr>\n<td align=\"center\">次最低</td>\n<td align=\"center\">串接，即相邻字符连接在一起</td>\n</tr>\n<tr>\n<td align=\"center\">最低</td>\n<td align=\"center\">&#96;</td>\n</tr>\n</tbody></table>\n<h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><h2 id=\"贪婪匹配-非贪婪匹配\"><a href=\"#贪婪匹配-非贪婪匹配\" class=\"headerlink\" title=\"贪婪匹配 非贪婪匹配\"></a>贪婪匹配 非贪婪匹配</h2><p><strong>贪婪：</strong>下面的表达式匹配从开始小于符号 (&lt;) 到关闭 h1 标记的大于符号 (&gt;) 之间的所有内容。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 原字符串</span><br>&lt;h1&gt;贪婪匹配 非贪婪匹配&lt;/h1&gt;<br><span class=\"hljs-comment\"># 贪婪匹配</span><br>$ &lt;.*&gt;<br><span class=\"hljs-comment\"># 匹配到的字符串</span><br>&lt;h1&gt;贪婪匹配 非贪婪匹配&lt;/h1&gt;<br></code></pre></td></tr></table></figure>\n\n<p><strong>非贪婪：</strong>如果您只需要匹配开始和结束 <code>h1 </code>标签，下面的非贪婪表达式只匹配<code> &lt;h1&gt;</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 原字符串</span><br>&lt;h1&gt;贪婪匹配 非贪婪匹配&lt;/h1&gt;<br><span class=\"hljs-comment\"># 贪婪匹配</span><br>$ &lt;.*?&gt;<br><span class=\"hljs-comment\"># 匹配到的字符串</span><br>&lt;h1&gt;<br></code></pre></td></tr></table></figure>\n\n<p>通过在 *<strong><strong>、</strong>+</strong> 或 <strong>?</strong> 限定符之后放置 **?**，该表达式从”贪婪”表达式转换为”非贪婪”表达式或者最小匹配。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\">正则表达式 Wiki</a></p>\n<p><a href=\"https://www.runoob.com/regexp/regexp-syntax.html\">正则表达式 菜鸟教程</a></p>\n<h1 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h1><h2 id=\"常用正则表达式匹配\"><a href=\"#常用正则表达式匹配\" class=\"headerlink\" title=\"常用正则表达式匹配\"></a>常用正则表达式匹配</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#用户名\t</span><br>/^[a-z0-9_-]&#123;3,16&#125;$/<br><span class=\"hljs-comment\">#密码\t</span><br>/^[a-z0-9_-]&#123;6,18&#125;$/<br><span class=\"hljs-comment\">#十六进制值\t颜色 #ff02ff etc.</span><br>/^<span class=\"hljs-comment\">#?([a-f0-9]&#123;6&#125;|[a-f0-9]&#123;3&#125;)$/</span><br><span class=\"hljs-comment\">#电子邮箱\t</span><br>/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)$/<br>/^[a-z\\d]+(\\.[a-z\\d]+)*@([\\da-z](-[\\da-z])?)+(\\.&#123;1,2&#125;[a-z]+)+$/<br><span class=\"hljs-comment\">#URL\t</span><br>/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)([\\/\\w \\.-]*)*\\/?$/<br><span class=\"hljs-comment\">#IP 地址\t</span><br>/((<span class=\"hljs-number\">2</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">4</span>]\\d|<span class=\"hljs-number\">25</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">5</span>]|[<span class=\"hljs-number\">01</span>]?\\d\\d?)\\.)&#123;<span class=\"hljs-number\">3</span>&#125;(<span class=\"hljs-number\">2</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">4</span>]\\d|<span class=\"hljs-number\">25</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">5</span>]|[<span class=\"hljs-number\">01</span>]?\\d\\d?)/<br>/^(?:(?:<span class=\"hljs-number\">25</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">5</span>]|<span class=\"hljs-number\">2</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>]|[<span class=\"hljs-number\">01</span>]?[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>][<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>]?)\\.)&#123;<span class=\"hljs-number\">3</span>&#125;(?:<span class=\"hljs-number\">25</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">5</span>]|<span class=\"hljs-number\">2</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">4</span>][<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>]|[<span class=\"hljs-number\">01</span>]?[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>][<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>]?)$/<br>#HTML 标签\t<br>/^&lt;([a-z]+)([^&lt;]+)*(?:&gt;(.*)&lt;\\/\\<span class=\"hljs-number\">1</span>&gt;|\\s+\\/&gt;)$/<br>#删除代码\\\\注释\t<br>(?&lt;!http:|\\S)//.*$<br>#Unicode编码中的汉字范围\t<br>/^[\\u2E80-\\u9FFF]+$/<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"正则表达式替换\"><a href=\"#正则表达式替换\" class=\"headerlink\" title=\"正则表达式替换\"></a>正则表达式替换</h2><figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">原始串 <br>str<span class=\"hljs-comment\">[1]</span>abc<span class=\"hljs-comment\">[991]</span>; <br>str<span class=\"hljs-comment\">[2]</span>abc<span class=\"hljs-comment\">[992]</span>; <br>str<span class=\"hljs-comment\">[11]</span>abc<span class=\"hljs-comment\">[993]</span>; <br>str<span class=\"hljs-comment\">[22]</span>abc<span class=\"hljs-comment\">[994]</span>; <br>str<span class=\"hljs-comment\">[111]</span>abc<span class=\"hljs-comment\">[995]</span>; <br>str<span class=\"hljs-comment\">[222]</span>abc<span class=\"hljs-comment\">[996]</span>; <br>str<span class=\"hljs-comment\">[1111]</span>abc<span class=\"hljs-comment\">[997]</span>; <br>str<span class=\"hljs-comment\">[2222]</span>abc<span class=\"hljs-comment\">[999]</span>; <br><br>目标串： <br>abc<span class=\"hljs-comment\">[1]</span>; <br>abc<span class=\"hljs-comment\">[2]</span>; <br>abc<span class=\"hljs-comment\">[11]</span>; <br>abc<span class=\"hljs-comment\">[22]</span>; <br>abc<span class=\"hljs-comment\">[111]</span>; <br>abc<span class=\"hljs-comment\">[222]</span>; <br>abc<span class=\"hljs-comment\">[1111]</span>; <br>abc<span class=\"hljs-comment\">[2222]</span>; <br><br>处理： <br>查找串：str/<span class=\"hljs-comment\">[(<span class=\"hljs-comment\">[0-9]</span>+)/]</span>abc/<span class=\"hljs-comment\">[<span class=\"hljs-comment\">[0-9]</span>+/]</span> <br>替换串：abc<span class=\"hljs-comment\">[/1]</span> <br></code></pre></td></tr></table></figure>\n\n<h2 id=\"正则表达式示例\"><a href=\"#正则表达式示例\" class=\"headerlink\" title=\"正则表达式示例\"></a>正则表达式示例</h2><p>下面列出一些正则表达式示例：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><br><span class=\"hljs-comment\"># 一个单词连续出现的位置。</span><br>/\\b([a-z]+) \\1\\b/gi\t<br><span class=\"hljs-comment\"># 匹配一个 URL 解析为协议、域、端口及相对路径。</span><br>/(\\w+):\\/\\/([^/:]+)(:\\d*)?([^<span class=\"hljs-comment\"># ]*)/\t</span><br><span class=\"hljs-comment\"># 定位章节的位置。</span><br>/^(?:Chapter|Section) [1-9][0-9]&#123;0,1&#125;$/\t<br><span class=\"hljs-comment\"># a 至 z 共 26个 字母再加一个 - 号。</span><br>/[-a-z]/\t<br><span class=\"hljs-comment\"># 可匹配 chapter，而不能匹配 terminal。</span><br>/ter\\b/\t<br><span class=\"hljs-comment\"># 可匹配 chapter，而不能匹配 aptitude。</span><br>/\\Bapt/\t<br><span class=\"hljs-comment\"># 可匹配 Windows95 或 Windows98 或 WindowsNT，当找到一个匹配后，从 Windows 后面开始进行下一次的检索匹配。</span><br>/Windows(?=95 |98 |NT )/\t<br><span class=\"hljs-comment\"># 匹配空行。</span><br>/^\\s*$/\t<br><span class=\"hljs-comment\"># 验证由两位数字、一个连字符再加 5 位数字组成的 ID 号。</span><br>/\\d&#123;2&#125;-\\d&#123;5&#125;/\t<br><span class=\"hljs-comment\"># 匹配 HTML 标签</span><br>&lt;[a-zA-Z]+.*?&gt;([\\s\\S]*?)&lt;/[a-zA-Z]*?&gt;\t<br><br><span class=\"hljs-comment\"># 匹配 &#123;hello&#125;</span><br>hello\t<br><span class=\"hljs-comment\"># 匹配 &#123;gray, grey&#125;</span><br>gray|grey\t<br><span class=\"hljs-comment\"># 匹配 &#123;gray, grey&#125;</span><br>gr(a|e)y\t<br><span class=\"hljs-comment\">#  匹配 &#123;gray, grey&#125;</span><br>gr[ae]y\t<br><span class=\"hljs-comment\">#  匹配 &#123;babble, bebble, bibble, bobble, bubble&#125;</span><br>b[aeiou]bble\t<br><span class=\"hljs-comment\">#  匹配 &#123;bat, cat, hat, mat, nat, oat, pat, Pat, ot&#125;</span><br>[b-chm-pP]at|ot\t<br><span class=\"hljs-comment\">#  匹配 &#123;color, colour&#125;</span><br>colou?r\t<br><span class=\"hljs-comment\">#  匹配 &#123;regex, regexes, regexp, regexps&#125;</span><br>rege(x(es)?|xps?)\t<br><span class=\"hljs-comment\">#  匹配 &#123;ggle, gogle, google, gooogle, goooogle, ...&#125;</span><br>go*gle\t<br><span class=\"hljs-comment\">#  匹配 &#123;gogle, google, gooogle, goooogle, ...&#125;</span><br>go+gle\t<br><span class=\"hljs-comment\">#  匹配 &#123;google, googoogle, googoogoogle, googoogoogoogle, ...&#125;</span><br>g(oog)+le\t<br><span class=\"hljs-comment\">#  匹配 &#123;zzz&#125;</span><br>z&#123;3&#125;\t<br><span class=\"hljs-comment\">#  匹配 &#123;zzz, zzzz, zzzzz, zzzzzz&#125;</span><br>z&#123;3,6&#125;\t<br><span class=\"hljs-comment\">#  匹配 &#123;zzz, zzzz, zzzzz, ...&#125;</span><br>z&#123;3,&#125;\t<br><span class=\"hljs-comment\">#  匹配 &#123;Brainf**k, brainf**k&#125;</span><br>[Bb]rainf\\*\\*k\t<br><span class=\"hljs-comment\">#  匹配 &#123;0,1,2,3,4,5,6,7,8,9&#125;</span><br>\\d\t<br><span class=\"hljs-comment\">#  匹配 11 个数字，以 1 开头</span><br>1\\d&#123;10&#125;\t<br><span class=\"hljs-comment\">#  匹配 2 到 36 范围内的整数</span><br>[2-9]|[12]\\d|3[0-6]\t<br><span class=\"hljs-comment\">#  匹配 Hello 后跟换行符，后跟 world</span><br>Hello\\nworld\t<br><span class=\"hljs-comment\"># 包含一个正整数或包含两位小数位的浮点数。</span><br>\\d+(\\.\\d\\d)?\t<br><span class=\"hljs-comment\"># 排除 *、@ 、# 三个特色符号</span><br>[^*@<span class=\"hljs-comment\">#]\t</span><br><span class=\"hljs-comment\">#  匹配 // 开头的注释</span><br>//[^\\r\\n]*[\\r\\n]\t<br><span class=\"hljs-comment\">#  匹配以 &quot;dog&quot; 开始</span><br>^dog\t<br><span class=\"hljs-comment\">#  匹配以 &quot;dog&quot; 结尾</span><br>dog$\t<br><span class=\"hljs-comment\"># is exactly &quot;dog&quot;</span><br>^dog$\t<br></code></pre></td></tr></table></figure>\n\n",
            "tags": [
                "正则表达式"
            ]
        }
    ]
}