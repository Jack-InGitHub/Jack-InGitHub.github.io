{
    "version": "https://jsonfeed.org/version/1",
    "title": "Oikiou's Blog • All posts by \"si\" tag",
    "description": "Blog",
    "home_page_url": "https://www.oikiou.top",
    "items": [
        {
            "id": "https://www.oikiou.top/2020/4ade0b2f/",
            "url": "https://www.oikiou.top/2020/4ade0b2f/",
            "title": "SourceInsigh中Qicker的使用",
            "date_published": "2020-07-21T05:23:05.000Z",
            "content_html": "<h1 id=\"Qicker-em\"><a href=\"#Qicker-em\" class=\"headerlink\" title=\"Qicker.em\"></a>Qicker.em</h1><h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><ol>\n<li><p>代码补全：</p>\n<ul>\n<li><p>wh：       while（）</p>\n</li>\n<li><p>if，ife，ifs：     if，if else， if elseif else</p>\n</li>\n<li><p>for：      for</p>\n</li>\n<li><p>fo：自动生成for语句与for命令相比它直接会定义循环变量</p>\n</li>\n</ul>\n  <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-keyword\">for</span> ( ulI = <span class=\"hljs-number\">0</span>; ulI &lt; # ; ulI++ )<br>&#123;<br>    UINT32_T ulI = <span class=\"hljs-number\">0</span>;<br>    #<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>do: do while</li>\n<li>switch：</li>\n<li>case：</li>\n<li>#ifd: #ifdef</li>\n<li>#if：</li>\n<li>cpp ：自动生成适用于c++的c原型说明定义</li>\n<li>struct：</li>\n<li>enum：</li>\n</ul>\n</li>\n<li><p>添加文件头注释： 命令：fi 解释：file  </p>\n</li>\n<li><p>添加函数头注释（.h）： 命令：fi 解释：file </p>\n</li>\n<li><p>增加修改历史列表： 命令：hi （会报错）</p>\n</li>\n<li><p>根据（.c）生成（.h）文件：命令：hdn</p>\n</li>\n<li><p>添加函数说明注释： 命令：fu 解释： function  </p>\n</li>\n<li><p>添加单行注释：（<span style=\"color:red\">不知道为什么没用</span>）</p>\n<ul>\n<li>命令：as 解释： add start    (添加之后 <code>/* add by zhangsan, 20140504, Mantis号:d, 原: */</code> ) </li>\n<li>命令：ms 解释： modify start  (添加之后：<code>/ modify by zhangsan, 20140504, Mantis号:d, 原因: */</code>  ) </li>\n<li>命令：ds 解释： delete start  (添加之后：<code>/ delete by zhangsan, 20140504, Mantis号:d, 原因: */</code>  )</li>\n</ul>\n</li>\n<li><p>添加标记注释： </p>\n<ul>\n<li><p>命令：ab 解释： add begin    (添加之后：<code>/* add begin by zhangsan, 20140504, Mantis号:d 原因: */</code>) </p>\n</li>\n<li><p>命令：mb 解释： modify begin  (添加之后：<code>/* modify begin by zhangsan, 20140504, Mantis号:d 原因: */</code>) </p>\n</li>\n<li><p>命令：me 解释： modify end    (添加之后：<code>/* modify end by zhangsan, 20140504 */</code>)  </p>\n</li>\n<li><p>命令：db 解释： delete begin  (添加之后：<code>/* delete begin by zhangsan, 20140504, Mantis号:d 原因: */</code>) </p>\n</li>\n<li><p>命令：de 解释： delete end    (添加之后：<code>/* delete end by zhangsan, 20140504 */</code>)</p>\n</li>\n</ul>\n</li>\n<li><p>配置命令：</p>\n</li>\n</ol>\n<ul>\n<li>命令：co 解释：config （修改相关配置信息）</li>\n</ul>\n<p> 如何使用呢，以为整个文件添加注释为例，在源文件的任何地方输入命令 fi 之后直接按ctrl + enter(配置的快捷键)即可。</p>\n<h2 id=\"安装方法\"><a href=\"#安装方法\" class=\"headerlink\" title=\"安装方法\"></a>安装方法</h2><p> source insight有很多宏可以用，这里介绍的宏是quicker.em这个宏，它是华为的一个员工写的，很实用。</p>\n<ol>\n<li><p>安装quicker.em宏</p>\n<ul>\n<li><p>打开base这个工程Project-&gt;Open Project，选择base工程，即可打开；</p>\n</li>\n<li><p>将宏文件quicker.em添加到该base工程中；</p>\n</li>\n<li><p>设置宏的快捷方式：Options-&gt;Key Assignments，找到Marco:AutoExpand,添加快捷键即可，一般推介用Ctrl+Enter组合键。</p>\n</li>\n</ul>\n</li>\n<li><p>HeaderFileCreate，这个宏功能用于自动创建一个.c文件的头文件。</p>\n<p>使用方法：</p>\n<ul>\n<li>创建自定义快捷菜单Options-&gt;Menu Assignments，选择Macro:HeaderFileCreate这一项，将它添加到右边Menu项的Work下，然后点Insert插入，点OK即可。</li>\n<li>打开该.c文件，在work栏就能看到我们刚才添加的自定义快捷菜单HeaderFileCreate，点击它，就自动生产头文件了。</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "ide",
                "sourceinsigh",
                "si"
            ]
        }
    ]
}