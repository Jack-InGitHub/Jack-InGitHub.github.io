{
    "version": "https://jsonfeed.org/version/1",
    "title": "Oikiou's Blog • All posts by \"software\" tag",
    "description": "Blog",
    "home_page_url": "https://www.oikiou.top",
    "items": [
        {
            "id": "https://www.oikiou.top/2022/fc18738/",
            "url": "https://www.oikiou.top/2022/fc18738/",
            "title": "PC Software",
            "date_published": "2022-01-21T14:57:15.000Z",
            "content_html": "<h1 id=\"PC-Windows\"><a href=\"#PC-Windows\" class=\"headerlink\" title=\"PC Windows\"></a>PC Windows</h1><h1 id=\"扫描修复系统\"><a href=\"#扫描修复系统\" class=\"headerlink\" title=\"扫描修复系统\"></a>扫描修复系统</h1><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\">sfc <span class=\"hljs-string\">/SCANNOW</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"DNS解析\"><a href=\"#DNS解析\" class=\"headerlink\" title=\"DNS解析\"></a>DNS解析</h1><h3 id=\"刷新DNS\"><a href=\"#刷新DNS\" class=\"headerlink\" title=\"刷新DNS\"></a>刷新DNS</h3><p><code>ipconfig /flushdns</code></p>\n<h3 id=\"nslookup\"><a href=\"#nslookup\" class=\"headerlink\" title=\"nslookup\"></a>nslookup</h3><p><img src=\"/2022/fc18738/image-20220402175405670.png\" alt=\"image-20220402175405670\"></p>\n<p><img src=\"/2022/fc18738/image-20220402175432533.png\" alt=\"image-20220402175432533\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nslookup<br><br><span class=\"hljs-comment\"># 设置查询类型 name server</span><br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">type</span>=ns<br><br><span class=\"hljs-comment\"># 查询根服务器</span><br>.<br><br><span class=\"hljs-comment\"># Non-authoritative 代表非权威应答 一般是缓存来的</span><br><span class=\"hljs-comment\"># authoritative 表权威应答 根服务器直接返回的</span><br><br><span class=\"hljs-comment\"># 设置查询类型 a ipv4地址</span><br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">type</span>=a<br><br><span class=\"hljs-comment\"># 查询根服务器的ipv4地址</span><br>.<br><br><span class=\"hljs-comment\"># 设置dns服务器地址</span><br>server 198.41.0.4<br><br><span class=\"hljs-comment\"># 设置查询类型 name server</span><br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">type</span>=ns<br><br><span class=\"hljs-comment\"># 查询cf域名服务器</span><br>cf.<br><br><span class=\"hljs-comment\"># 设置查询类型 a ipv4地址</span><br><span class=\"hljs-built_in\">set</span> <span class=\"hljs-built_in\">type</span>=a<br><br><span class=\"hljs-comment\"># 查询cf域名服务器的ipv4地址</span><br>cf.<br><br>..........<br><br><br>lager.cf.<br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"硬链接-amp-符号链接\"><a href=\"#硬链接-amp-符号链接\" class=\"headerlink\" title=\"硬链接&amp;符号链接\"></a>硬链接&amp;符号链接</h1><blockquote>\n<p>  mklink<br>  创建符号链接。</p>\n<p>  MKLINK [[&#x2F;D] | [&#x2F;H] | [&#x2F;J]] Link Target</p>\n<pre><code class=\"hljs\">      /D      创建目录符号链接。默认为文件\n              符号链接。\n      /H      创建硬链接而非符号链接。\n      /J      创建目录联接。\n      Link    指定新的符号链接名称。\n      Target  指定新链接引用的路径\n              (相对或绝对)。\n</code></pre>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>硬链接（Hard Link）</th>\n<th>目录联接（Junction Point）</th>\n<th>符号链接（Symbolic Link）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>命令</td>\n<td><code>mklink /H Link Target</code></td>\n<td><code>mklink /J Link Target</code></td>\n<td><code>mklink /D Link Target</code></td>\n</tr>\n<tr>\n<td>作用</td>\n<td>为某文件创建别名，可让不同的路径对应同一个文件的数据。</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>链接到文件</td>\n<td>✔️</td>\n<td>❌</td>\n<td>❌</td>\n</tr>\n<tr>\n<td>链接到文件夹</td>\n<td>❌</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>需要提升为管理员权限</td>\n<td>需要</td>\n<td>不需要</td>\n<td>通常需要 <code>[坑1]</code></td>\n</tr>\n<tr>\n<td>跨驱动器卷（盘符）</td>\n<td>❌</td>\n<td>✔️（仅本地计算机）</td>\n<td>✔️（包括 SMB 文件或路径）</td>\n</tr>\n<tr>\n<td>操作系统支持</td>\n<td>Windows NT 3.1 开始支持 Windows 2000 开始有 API <code>CreateHardLink()</code> Windows NT 6.0 开始能使用 <code>mklink /H</code></td>\n<td>Windows 2000+</td>\n<td>Windows Vista+</td>\n</tr>\n<tr>\n<td>可链接到不存在的目标</td>\n<td>❌</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>可链接到相对目录</td>\n<td>❌</td>\n<td>❌（可以使用相对路径创建，但创建完即变绝对路径）</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>删除方法</td>\n<td>del</td>\n<td>rd</td>\n<td>rd &#x2F; del</td>\n</tr>\n<tr>\n<td>当链接被单独删除后</td>\n<td>只有所有指向原始文件的硬链接和原始文件全部删除后文件数据才会被删除。</td>\n<td>Windows Vista 之后原始文件夹不受影响；Windows 2000&#x2F;XP&#x2F;2003 会导致原始子文件夹被删除。</td>\n<td>原始文件夹不受影响。</td>\n</tr>\n<tr>\n<td>当原始文件被单独删除后</td>\n<td>硬链接依然能正常访问到文件的数据。</td>\n<td>目录联接失效，指向不存在的目录。</td>\n<td>符号链接失效，指向不存在的目录</td>\n</tr>\n</tbody></table>\n<p>比较 Windows 上四种不同的文件（夹）链接方式（NTFS 的硬链接、目录联接、符号链接，和大家熟知的快捷方式）</p>\n<p><a href=\"https://blog.walterlv.com/post/ntfs-link-comparisons.html\">https://blog.walterlv.com/post/ntfs-link-comparisons.html</a></p>\n<p>Windows中的硬链接和软链接（hard link 和 Symbolic link）</p>\n<p><a href=\"https://www.cnblogs.com/Naylor/p/7597869.html\">https://www.cnblogs.com/Naylor/p/7597869.html</a></p>\n<p>Windows下mklink使用, 硬链接, 软链接和快捷方式的区别</p>\n<p><a href=\"https://blog.csdn.net/guyue35/article/details/49761347\">https://blog.csdn.net/guyue35/article/details/49761347</a></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dos\">创建链接:<br>mklink /j D:\\System\\Desktop\\Project  D:\\Project<br><br><br><br>删除的命令：<br><span class=\"hljs-built_in\">rmdir</span> 链接名称<br>例如：<span class=\"hljs-built_in\">rmdir</span> d:\\recivefiles <span class=\"hljs-built_in\">rmdir</span> d:\\develop<br>删除虚拟链接目录，并不会删除真实文件，注意，不能使用<span class=\"hljs-built_in\">del</span>命令，<span class=\"hljs-built_in\">del</span>命令会删除真实文件<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n<p>拓展 :  linux下的软链接和硬链接</p>\n<blockquote>\n<p>  同样，在Windows下，链接的功能也是被实现了的（虽然我们不会经常发现）。在Linux下，我们都知道链接有两种形式：硬链接和软链接。所谓硬链接，我们可以理解为硬链接持有的是文件本身（而不是路径）的引用。也就是说，当我们给一个名为a.txt的文件建立硬链接（b.txt）后，那么b.txt指向的位置就是a.txt这个文件本身，而此时，a.txt和b.txt是同级平行的，这个文本文件此时同时拥有两个文件名。当我们删除a.txt时，只是删除了a.txt这个文件名，这个文件仍然被b.txt所引用，所以我们还能够通过b.txt访问。而软链接，持有的则是原链接路径。比如a.txt位于 <del>&#x2F;Document&#x2F;a.txt ，那么为其建立软链接b.txt的内容就是”</del>&#x2F;Document&#x2F;a.txt”，此时，我们访问b.txt，其实是在按照a.txt的路径去访问a.txt。如果我们这时删除a.txt这个文件，那么b.txt也会无效，因为路径已经断掉。</p>\n</blockquote>\n<h1 id=\"NOTE\"><a href=\"#NOTE\" class=\"headerlink\" title=\"NOTE\"></a>NOTE</h1><h2 id=\"窗口主题色-活动和非活动窗口\"><a href=\"#窗口主题色-活动和非活动窗口\" class=\"headerlink\" title=\"窗口主题色 活动和非活动窗口\"></a>窗口主题色 活动和非活动窗口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">regedit 编辑<br>计算机\\HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\DWM<br><br><span class=\"hljs-comment\"># 活动窗口颜色 </span><br><span class=\"hljs-comment\"># 32位值就是 颜色的RGB 注意的是这里不知道是大小端的问题还是其他什么问题需要RGB数值转换成BGR样式</span><br>AccentColor <br><br><span class=\"hljs-comment\"># 非活动窗口颜色 </span><br>AccentColorInactive <br></code></pre></td></tr></table></figure>\n\n<h2 id=\"添加永久路由\"><a href=\"#添加永久路由\" class=\"headerlink\" title=\"添加永久路由\"></a>添加永久路由</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">route -p add <br><br>route ADD 157.0.0.0 MASK 255.0.0.0  157.55.80.1 METRIC 3 IF 2<br>       destination^      ^mask      ^gateway     metric^    ^<br>                                                   Interface^<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"各类特定文件夹\"><a href=\"#各类特定文件夹\" class=\"headerlink\" title=\"各类特定文件夹\"></a>各类特定文件夹</h2><p><code>win+r</code>输入对应内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">启动文件夹</span><br>shell:startup<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">发送到右键菜单</span><br>shell:sendto<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"修改WIFI位置\"><a href=\"#修改WIFI位置\" class=\"headerlink\" title=\"修改WIFI位置\"></a>修改WIFI位置</h2><figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs moonscript\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\NetworkList\\Profiles<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>展开“Profiles”项，其下面的子项是都是一个网络连接，可以通过查看“ProfilesName”来分辨，双击打开“<code>Category</code>”，</li>\n<li>打开编辑窗口后，修改“数值数据”，这里数值0代表公用网络，1代表专用网络，2代表域网络，设置完后点击确定即可。</li>\n</ul>\n<h2 id=\"填加开机启动\"><a href=\"#填加开机启动\" class=\"headerlink\" title=\"填加开机启动\"></a>填加开机启动</h2><ol>\n<li>添加<code>Windows</code>开机自动执行<code>init-wsl.bat</code>脚本</li>\n</ol>\n<p><code>Windows</code>键+<code>R</code>，输入<code>regedit</code>打开注册列表，在地址栏输入<code>计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code>定位到对应注册表位置，右键新建一个字符串值，键入<code>init-wsl.bat</code>脚本绝对路径即可，如下图！</p>\n<p><img src=\"/2022/fc18738/regedit-add-init-wsl.png\" alt=\"set regedit service\"></p>\n<p>重启计算机即可发现，<code>WSL</code>中的<code>Docker</code>服务已经被启动，通过<code>192.168.33.10</code>可以直接访问到<code>WSL</code>内部的网络！</p>\n",
            "tags": [
                "windows",
                "pc",
                "software"
            ]
        }
    ]
}