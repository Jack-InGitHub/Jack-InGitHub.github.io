{
    "version": "https://jsonfeed.org/version/1",
    "title": "Oikiou's Blog",
    "description": "Blog",
    "home_page_url": "https://www.oikiou.top",
    "items": [
        {
            "id": "https://www.oikiou.top/2022/a2c49dae/",
            "url": "https://www.oikiou.top/2022/a2c49dae/",
            "title": "PowerShell",
            "date_published": "2022-12-19T12:48:05.000Z",
            "content_html": "<h1 id=\"PowerShell\"><a href=\"#PowerShell\" class=\"headerlink\" title=\"PowerShell\"></a>PowerShell</h1><h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><h2 id=\"PowerShell-Oh-My-Posh-美化\"><a href=\"#PowerShell-Oh-My-Posh-美化\" class=\"headerlink\" title=\"PowerShell + Oh My Posh 美化\"></a>PowerShell + Oh My Posh 美化</h2><p><a href=\"https://www.edgeless.top/PowerShell%E7%BE%8E%E5%8C%96/\">参考 PowerShell美化</a></p>\n<h2 id=\"PowerShell-获取当前文件夹名称-仅获取当前文件夹名\"><a href=\"#PowerShell-获取当前文件夹名称-仅获取当前文件夹名\" class=\"headerlink\" title=\"PowerShell 获取当前文件夹名称 仅获取当前文件夹名\"></a>PowerShell 获取当前文件夹名称 仅获取当前文件夹名</h2><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">(<span class=\"hljs-built_in\">get-item</span> .).name<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Powershell获取当前时间\"><a href=\"#Powershell获取当前时间\" class=\"headerlink\" title=\"Powershell获取当前时间\"></a>Powershell获取当前时间</h2><p><a href=\"http://www.splaybow.com/post/powershell-get-date.html\">参考 PowerShell使用Get-Date获取日期和时间</a></p>\n<p>在PowerShell中直接调用<code>Get-Date</code>，可以返回当前的日期和时间，包括年、月、日、时、分、秒。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">PS</span> &gt; <span class=\"hljs-built_in\">Get-Date</span><br><span class=\"hljs-number\">2022</span>年<span class=\"hljs-number\">12</span>月<span class=\"hljs-number\">19</span>日 <span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">32</span>:<span class=\"hljs-number\">28</span><br></code></pre></td></tr></table></figure>\n\n<p>使用<code>-Format</code>参数来获取<code>Get-Date</code>中的年、月、日、时、分、秒。</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs txt\">yyyy 年<br>M    月<br>d    日<br>h    小时（12小时制）<br>H    小时（24小时制）<br>m    分钟<br>s    秒<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-built_in\">PS</span> &gt; <span class=\"hljs-built_in\">Get-Date</span> <span class=\"hljs-literal\">-Format</span> HH:mm:ss<br><span class=\"hljs-number\">21</span>:<span class=\"hljs-number\">34</span>:<span class=\"hljs-number\">11</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Powershell-ANSI颜色\"><a href=\"#Powershell-ANSI颜色\" class=\"headerlink\" title=\"Powershell ANSI颜色\"></a>Powershell ANSI颜色</h2><p><a href=\"https://juejin.cn/post/6920241597846126599\">参考: 了解 ANSI 转义码的 color 设置</a></p>\n<blockquote>\n<p>  To use one of the ANSI escape codes, we need a literal <a href=\"https://en.wikipedia.org/wiki/Escape_character#ASCII_escape_character\">ESC character</a>. This is octal 033, or decimal 27. In Bash, you would use <code>&quot;\\033&quot;</code> or <code>&quot;\\e&quot;</code>; There’s no direct equivalent sequence in PowerShell but you can instead embed an expression: <code>&quot;$([char]27)&quot;</code></p>\n<p>  PowerShell 中没有直接等效的序列，但您可以改为嵌入一个表达式：<code>&quot;$([char]27)&quot;</code>，也就是说要将<code>\\e</code>修改为<code>$([char]27)</code></p>\n<p>  例如<code>\\e[32;1m text \\e[0m</code> 修改为 <code>$([char]27)[32;1m text $([char]27)[0m</code></p>\n</blockquote>\n<p><strong>ANSI Escape code编码中有专门控制字符颜色的控制符，</strong>例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">\\e[37;44;3;1m<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><code>\\e</code> 代表开始ANSI Escape code</li>\n<li><code>[</code> 代表转义序列开始符 CSI，Control Sequence Introducer</li>\n<li><code>37;44;4;1</code> 代表以<code>; </code>分隔的文本样式控制符，其中 37 代表文本前景色为白色，44代表背景为蓝色，3代表斜体，1代表加粗，<code>;</code>的数量不做限制</li>\n<li><code>m</code> 代表结束控制符序列</li>\n</ul>\n<h4 id=\"常用文本样式控制符\"><a href=\"#常用文本样式控制符\" class=\"headerlink\" title=\"常用文本样式控制符\"></a>常用文本样式控制符</h4><table>\n<thead>\n<tr>\n<th>代码</th>\n<th>作用</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>重置&#x2F;正常</td>\n<td>关闭所有属性。</td>\n</tr>\n<tr>\n<td>1</td>\n<td>粗体或增加强度</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>弱化（降低强度）</td>\n<td>未广泛支持。</td>\n</tr>\n<tr>\n<td>3</td>\n<td>斜体</td>\n<td>未广泛支持。有时视为反相显示。</td>\n</tr>\n<tr>\n<td>4</td>\n<td>下划线</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>缓慢闪烁</td>\n<td>低于每分钟150次。</td>\n</tr>\n<tr>\n<td>6</td>\n<td>快速闪烁</td>\n<td>MS-DOS ANSI.SYS；每分钟150以上；未广泛支持。</td>\n</tr>\n<tr>\n<td>7</td>\n<td>反显</td>\n<td>前景色与背景色交换。</td>\n</tr>\n<tr>\n<td>8</td>\n<td>隐藏</td>\n<td>未广泛支持。</td>\n</tr>\n<tr>\n<td>9</td>\n<td>划除</td>\n<td>字符清晰，但标记为删除。未广泛支持。</td>\n</tr>\n<tr>\n<td>10</td>\n<td>主要（默认）字体</td>\n<td></td>\n</tr>\n<tr>\n<td>11–19</td>\n<td>替代字体</td>\n<td>选择替代字体</td>\n</tr>\n<tr>\n<td>20</td>\n<td>尖角体</td>\n<td>几乎无支持。</td>\n</tr>\n<tr>\n<td>21</td>\n<td>关闭粗体或双下划线</td>\n<td>关闭粗体未广泛支持；双下划线几乎无支持。</td>\n</tr>\n<tr>\n<td>22</td>\n<td>正常颜色或强度</td>\n<td>不强不弱。</td>\n</tr>\n<tr>\n<td>23</td>\n<td>非斜体、非尖角体</td>\n<td></td>\n</tr>\n<tr>\n<td>24</td>\n<td>关闭下划线</td>\n<td>去掉单双下划线。</td>\n</tr>\n<tr>\n<td>25</td>\n<td>关闭闪烁</td>\n<td></td>\n</tr>\n<tr>\n<td>27</td>\n<td>关闭反显</td>\n<td></td>\n</tr>\n<tr>\n<td>28</td>\n<td>关闭隐藏</td>\n<td></td>\n</tr>\n<tr>\n<td>29</td>\n<td>关闭划除</td>\n<td></td>\n</tr>\n<tr>\n<td>30–37</td>\n<td>设置前景色</td>\n<td>参见下面的颜色表。</td>\n</tr>\n<tr>\n<td>38</td>\n<td>设置前景色</td>\n<td>下一个参数是5;n或2;r;g;b，见下。</td>\n</tr>\n<tr>\n<td>39</td>\n<td>默认前景色</td>\n<td>由具体实现定义（按照标准）。</td>\n</tr>\n<tr>\n<td>40–47</td>\n<td>设置背景色</td>\n<td>参见下面的颜色表。</td>\n</tr>\n<tr>\n<td>48</td>\n<td>设置背景色</td>\n<td>下一个参数是5;n或2;r;g;b，见下。</td>\n</tr>\n<tr>\n<td>49</td>\n<td>默认背景色</td>\n<td>由具体实现定义（按照标准）。</td>\n</tr>\n<tr>\n<td>51</td>\n<td>Framed</td>\n<td></td>\n</tr>\n<tr>\n<td>52</td>\n<td>Encircled</td>\n<td></td>\n</tr>\n<tr>\n<td>53</td>\n<td>上划线</td>\n<td></td>\n</tr>\n<tr>\n<td>54</td>\n<td>Not framed or encircled</td>\n<td></td>\n</tr>\n<tr>\n<td>55</td>\n<td>关闭上划线</td>\n<td></td>\n</tr>\n<tr>\n<td>60</td>\n<td>表意文字下划线或右边线</td>\n<td>几乎无支持。</td>\n</tr>\n<tr>\n<td>61</td>\n<td>表意文字双下划线或双右边线</td>\n<td></td>\n</tr>\n<tr>\n<td>62</td>\n<td>表意文字上划线或左边线</td>\n<td></td>\n</tr>\n<tr>\n<td>63</td>\n<td>表意文字双上划线或双左边线</td>\n<td></td>\n</tr>\n<tr>\n<td>64</td>\n<td>表意文字着重标志</td>\n<td></td>\n</tr>\n<tr>\n<td>65</td>\n<td>表意文字属性关闭</td>\n<td>重置60–64的所有效果。</td>\n</tr>\n<tr>\n<td>90–97</td>\n<td>设置明亮的前景色</td>\n<td>aixterm（非标准）。</td>\n</tr>\n<tr>\n<td>100–107</td>\n<td>设置明亮的背景色</td>\n<td>aixterm（非标准）。</td>\n</tr>\n</tbody></table>\n<p>颜色对照表</p>\n<p><img src=\"/2022/a2c49dae/e9436bb4998a4fbf9bd5abbe74121ccdtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.awebp\" alt=\"3bit-color\"></p>\n<h2 id=\"Powershell-修改提示符的文字内容和颜色\"><a href=\"#Powershell-修改提示符的文字内容和颜色\" class=\"headerlink\" title=\"Powershell 修改提示符的文字内容和颜色\"></a>Powershell 修改提示符的文字内容和颜色</h2><p><a href=\"https://www.lfhacks.com/tech/powershell-prompt-customization/\">参考: Powershell 修改提示符的文字内容和颜色</a></p>\n<p><a href=\"https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/\">参考: 为 Windows PowerShell 设置 User Alias （命令别名）</a></p>\n<ol>\n<li><p>首先我们先找到Powershell的配置文件的路径, 我们输入命令<code>echo $profile</code>就能显示.</p>\n</li>\n<li><p>如果这个文件不存在, 我们输入命令<code>notepad $Profile</code>或者<code>code $Profile</code>去新建一个文件.</p>\n</li>\n<li><p>Powershell 有一个特殊的函数： <code>prompt</code> 函数，这个函数规定了提示符的内容和外观。</p>\n<p>我们可以利用下面的命令可以查看当前使用的 <code>prompt</code> 函数的内容：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">(<span class=\"hljs-built_in\">Get-Command</span> Prompt).ScriptBlock<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>通过 <code>prompt</code> 函数的返回值我们就能自定义提示符。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">prompt</span></span> &#123;<br>  <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[32m&quot;</span> + <span class=\"hljs-variable\">$</span>(<span class=\"hljs-built_in\">Get-Date</span> <span class=\"hljs-literal\">-Format</span> HH:mm:ss) + <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[0m&quot;</span> +<br>  <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[95m&quot;</span> + <span class=\"hljs-variable\">$</span>((<span class=\"hljs-built_in\">get-item</span> .).name) + <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[0m&quot;</span> +<br>  <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$</span>([char]27)[33m&gt;<span class=\"hljs-variable\">$</span>([char]27)[0m&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  第一行 <code>Get-Date</code>获取当前系统的时间, <code>-Format</code>格式化使用<code>HH:mm:ss</code>的格式, 前后使用了ANSI颜色转义将前景色设置为深绿色</p>\n<p>  第二行 <code>(get-item .).name</code>获取了当前文件夹的名称, 并设置前景色为深紫色</p>\n<p>  第三行 输出一个深黄色的<code>&gt;</code>符号</p>\n</blockquote>\n</li>\n<li><p>输入 <code>. $Profile</code> 命令生效。(注意这里是大小写不敏感的)</p>\n</li>\n</ol>\n<h2 id=\"Powershell-起别名-User-Alias-命令别名\"><a href=\"#Powershell-起别名-User-Alias-命令别名\" class=\"headerlink\" title=\"Powershell 起别名(User Alias) 命令别名\"></a>Powershell 起别名(User Alias) 命令别名</h2><p><a href=\"https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/\">参考 为 Windows PowerShell 设置 User Alias （命令别名）</a></p>\n<blockquote>\n<p>  我们的思路就是将命令设置成为一个<code>function</code>, 运行这个<code>function</code>执行特定的指令即可.</p>\n</blockquote>\n<p>两个思路:</p>\n<ol>\n<li><p>使用<code>New-Alias</code>指令, 添加到Powershell的<code>$Profile</code>文件里面, 每次启动运行一次. 这个命令里面不能含有空格.</p>\n<p><a href=\"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/new-alias?view=powershell-7.3\">参考 Microsoft的Powershell文档</a></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-comment\"># 此命令创建一个名为 List 的别名来表示 Get-ChildItem cmdlet。</span><br><span class=\"hljs-built_in\">New-Alias</span> <span class=\"hljs-literal\">-Name</span> <span class=\"hljs-string\">&quot;List&quot;</span> <span class=\"hljs-built_in\">Get-ChildItem</span><br><span class=\"hljs-comment\"># 为notepad++ 设置别名 np</span><br><span class=\"hljs-built_in\">New-Alias</span> <span class=\"hljs-literal\">-Name</span> <span class=\"hljs-string\">&quot;np&quot;</span> notepad++.exe<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>使用<code>function</code>指令, 添加到Powershell的<code>$Profile</code>文件里面, 把指令当作<code>function</code>的名称来调用, 这样命令可以带有空格.</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\"><span class=\"hljs-comment\"># 带参数的function</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">np</span>+</span> &#123;<br>    <span class=\"hljs-keyword\">param</span> (<br>        <span class=\"hljs-variable\">$ComputerName</span><br>    )<br>    notepad++.exe <span class=\"hljs-variable\">$ComputerName</span><br>&#125;<br></code></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "ps",
                "powershell"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/d911b12b/",
            "url": "https://www.oikiou.top/2022/d911b12b/",
            "title": "Zsh",
            "date_published": "2022-12-12T14:57:15.000Z",
            "content_html": "<h1 id=\"Powerlevel10k\"><a href=\"#Powerlevel10k\" class=\"headerlink\" title=\"Powerlevel10k\"></a>Powerlevel10k</h1><p><a href=\"https://github.com/romkatv/powerlevel10k\">https://github.com/romkatv/powerlevel10k</a></p>\n<ul>\n<li>Download these four ttf files:<ul>\n<li>[MesloLGS NF Regular.ttf](<a href=\"https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS\">https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS</a> NF Regular.ttf)</li>\n<li>[MesloLGS NF Bold.ttf](<a href=\"https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS\">https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS</a> NF Bold.ttf)</li>\n<li>[MesloLGS NF Italic.ttf](<a href=\"https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS\">https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS</a> NF Italic.ttf)</li>\n<li>[MesloLGS NF Bold Italic.ttf](<a href=\"https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS\">https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS</a> NF Bold Italic.ttf)</li>\n</ul>\n</li>\n<li>Double-click on each file and click “Install”. This will make <code>MesloLGS NF</code> font available to all applications on your system.</li>\n</ul>\n",
            "tags": [
                "zsh",
                "shell",
                "linux"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/4dd4ea8a/",
            "url": "https://www.oikiou.top/2022/4dd4ea8a/",
            "title": "Ip 转换成 Location 的Api",
            "date_published": "2022-11-08T15:24:15.000Z",
            "content_html": "<h1 id=\"ip-to-location\"><a href=\"#ip-to-location\" class=\"headerlink\" title=\"ip to location\"></a>ip to location</h1><h2 id=\"ipwhois\"><a href=\"#ipwhois\" class=\"headerlink\" title=\"ipwhois\"></a>ipwhois</h2><p>IPWHOIS.IO的IP地理定位API的URL格式很简单。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">http://ipwhois.app/json/&#123;IP&#125;<br></code></pre></td></tr></table></figure>\n\n<p>例如，我们可以用以下IP地址发出API请求：47.9.123.84。</p>\n<p><img src=\"/2022/4dd4ea8a/ipwhois-api.png\" alt=\"img\"></p>\n<p><strong>参考链接:</strong></p>\n<ul>\n<li><a href=\"https://webdamn.com/ip-geolocation-api/\">IP Geolocation API – IPWHOIS.IO</a></li>\n<li><a href=\"https://webdamn.com/how-to-integrate-ip-geolocation-api-with-php/\">How to Integrate IP Geolocation API with PHP</a></li>\n<li><a href=\"https://webdamn.com/scrape-search-result-data-using-serpapi-with-python/\">Scrape Search Result Data using SerpApi with Python</a></li>\n<li><a href=\"https://webdamn.com/get-geocoding-using-positionstack-api-with-php/\">Get Geocoding using Positionstack API with PHP</a></li>\n<li><a href=\"https://webdamn.com/flight-data-using-aviationstack-api-with-php/\">Flight Data using Aviationstack API with PHP</a></li>\n<li><a href=\"https://webdamn.com/get-address-information-using-geocode-api-with-php/\">Get Address Information using Geocode API with PHP</a></li>\n<li><a href=\"https://webdamn.com/review-scraping-using-reviewapi-with-php/\">Review Scraping using ReviewAPI with PHP</a></li>\n<li><a href=\"https://webdamn.com/simple-web-scraping-with-zenscrape-api-using-php/\">Simple Web Scraping with Zenscrape API using PHP</a></li>\n<li><a href=\"https://webdamn.com/scrape-search-result-with-zenserp-api-using-php/\">Scrape Search Result with Zenserp API using PHP</a></li>\n<li><a href=\"https://webdamn.com/build-user-agent-lookup-system-using-userstack-api-with-php/\">Build User Agent Lookup System using Userstack API with PHP</a></li>\n<li><a href=\"https://webdamn.com/build-ip-lookup-website-using-ipapi-with-php/\">Build IP Lookup Website using ipapi with PHP</a></li>\n<li><a href=\"https://webdamn.com/build-weather-website-with-weatherstack-api-using-php/\">Build Weather Website with Weatherstack API using PHP</a></li>\n<li><a href=\"https://webdamn.com/get-website-visitors-info-using-ipstack-api-with-php/\">Get Website Visitors Info using IPStack API with PHP</a></li>\n<li><a href=\"https://webdamn.com/scrape-serp-data-using-serpstack-api-with-python/\">Scrape SERP Data using SerpStack API with Python</a></li>\n</ul>\n",
            "tags": [
                "ip",
                "location",
                "api"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/6fb71d96/",
            "url": "https://www.oikiou.top/2022/6fb71d96/",
            "title": "单位换算",
            "date_published": "2022-11-01T14:57:15.000Z",
            "content_html": "<h1 id=\"单位换算\"><a href=\"#单位换算\" class=\"headerlink\" title=\"单位换算\"></a>单位换算</h1><h1 id=\"长度\"><a href=\"#长度\" class=\"headerlink\" title=\"长度\"></a>长度</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">★ -----------------</span><br>1 km = 1000 m<br>1 m  = 100  cm<br>1 cm = 10   mm<br>1 mm = 1000 um<br><br>1    inch = 2.54 cm<br>1/10 inch = 2.54 mm<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">--------------------</span><br>1 km = 1000 m<br>1 m  = 10   dm<br>1 dm = 10   cm<br>1 cm = 10   mm<br>1 m  = 1000 mm<br>1 mm = 1000 um<br>1 um = 1000 nm<br>1 nm = 1000 pm <br>1 pm = 1000 fm<br>1 fm = 1000 am<br>...<br>1 inch              = 2.54 cm<br>1 cm                = 0.3937008 inch<br>...<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"></span><br><span class=\"language-bash\">1 海里(nautical mile) = 1852 m = 1.852 km</span><br>1 km                = 0.5399568 海里(nautical mile)<br>...<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">英制长度单位</span><br>1 英里(mile)          = 1.609344 km<br>1 km                = 0.6213712 英里(mile)<br>...<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">天文学长度单位</span><br>1 光年                = 9.4653×10^12 km<br>1 天文单位 ≈ 1.496亿 千米<br>...<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">我国传统的长度单位</span><br>1 km                = 2 里<br>1 里                 = 150 丈 = 500 米<br>1 丈                 = 10尺<br>1 丈                 = 3.33米<br>1 尺                 = 3.33分米<br>1 m                 = 0.3 丈 = 3 尺 = 30 寸<br>1 cm                = 3 分 = 30 厘<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"时间单位\"><a href=\"#时间单位\" class=\"headerlink\" title=\"时间单位\"></a>时间单位</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">★ -----------------</span><br>1 s  = 1000 ms<br>1 ms = 1000 us<br>1 us = 1000 ns<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">   -----------------</span><br>1 minute = 60 s<br>1 s  = 1000 ms<br>1 ms = 1000 us<br>1 us = 1000 ns<br>1 ns = 1000 ps<br><br>100年      = 1世纪<br>365.25天   = 1年<br>1平太阳日     = 24小时3分56.555秒<br>1恒星日      = 23小时56分4.091秒<br>1太阳年(回归年) = 365.2422天(= 365天5小时48分46秒)<br>1恒星年      = 365.2564天(= 365天6小时9分9.5秒)<br>1朔望月      = 29.5306天<br>1恒星月      = 27.3712天<br>1太阳年      = 12个朔望日 = 354.36天<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"速度\"><a href=\"#速度\" class=\"headerlink\" title=\"速度\"></a>速度</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">★ -----------------</span><br>1 m/s  = 3.6 km/h<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">   -----------------</span><br>1 mph  = 1.609344 km/h<br>1 km/h = 0.6213712 mph<br><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"温度\"><a href=\"#温度\" class=\"headerlink\" title=\"温度\"></a>温度</h1><p>$$<br>℉ &#x3D; ℃ * (9&#x2F;5) + 32<br>$$</p>\n<p>$$<br>℃ &#x3D; (℉ - 32)*(5&#x2F;9)<br>$$</p>\n<p>$$<br>K &#x3D; ℃ + 273.15<br>$$</p>\n<p>$$<br>℃ &#x3D; K - 273.15<br>$$</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">25 ℃ = 298.15 K = 77 F<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"电容单位\"><a href=\"#电容单位\" class=\"headerlink\" title=\"电容单位\"></a>电容单位</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><br>1 F  = 1000 mF<br>1 mF = 1000 uF<br>1 uF = 1000 nF<br>1 nF = 1000 pF<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/2022/6fb71d96/tutorials068_001_zh.gif\" alt=\"C\"></p>\n<ul>\n<li>数值中的<code>R</code>代表小数点<code>.</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">标示</th>\n<th align=\"left\">电阻</th>\n<th align=\"left\">电容</th>\n<th align=\"left\">电感</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">120</td>\n<td align=\"left\">12Ω</td>\n<td align=\"left\">12pF</td>\n<td align=\"left\">12μH</td>\n</tr>\n<tr>\n<td align=\"left\">122</td>\n<td align=\"left\">1.2kΩ</td>\n<td align=\"left\">1.2nF</td>\n<td align=\"left\">1.2mH</td>\n</tr>\n<tr>\n<td align=\"left\">124</td>\n<td align=\"left\">120kΩ</td>\n<td align=\"left\">120nF</td>\n<td align=\"left\">120mH</td>\n</tr>\n<tr>\n<td align=\"left\">126</td>\n<td align=\"left\">12MΩ</td>\n<td align=\"left\">12μF</td>\n<td align=\"left\">12H</td>\n</tr>\n<tr>\n<td align=\"left\">R15</td>\n<td align=\"left\">0.15Ω</td>\n<td align=\"left\">0.15pF</td>\n<td align=\"left\">0.15μH</td>\n</tr>\n<tr>\n<td align=\"left\">1R5</td>\n<td align=\"left\">1.5Ω</td>\n<td align=\"left\">1.5pF</td>\n<td align=\"left\">1.5μH</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">误差符号</th>\n<th align=\"center\">误差</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Ｆ</td>\n<td align=\"center\">±1％</td>\n</tr>\n<tr>\n<td align=\"center\">Ｇ</td>\n<td align=\"center\">±2％</td>\n</tr>\n<tr>\n<td align=\"center\">Ｊ</td>\n<td align=\"center\">±5％</td>\n</tr>\n<tr>\n<td align=\"center\">Ｋ</td>\n<td align=\"center\">±10％</td>\n</tr>\n<tr>\n<td align=\"center\">Ｍ</td>\n<td align=\"center\">±20％</td>\n</tr>\n<tr>\n<td align=\"center\">Ｚ</td>\n<td align=\"center\">80%,－20%</td>\n</tr>\n</tbody></table>\n",
            "tags": [
                "unit",
                "m",
                "cm",
                "mm",
                "s",
                "us"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/3db44d04/",
            "url": "https://www.oikiou.top/2022/3db44d04/",
            "title": "Android 文件传输模式 电脑无法识别",
            "date_published": "2022-10-10T14:57:15.000Z",
            "content_html": "<h1 id=\"android-文件传输模式-电脑无法识别\"><a href=\"#android-文件传输模式-电脑无法识别\" class=\"headerlink\" title=\"android 文件传输模式 电脑无法识别\"></a>android 文件传输模式 电脑无法识别</h1><p>最近android手机连接电脑选择传输文件模式，电脑不再识别手机。选择照片模式就没有问题。</p>\n<p>手机选择文件传输模式后 选择自动搜索驱动程序 安装后会 提示“这个inf中的服务安装段落无效”。</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ol>\n<li><p>按“Win+X” 点击 “设备管理器”</p>\n</li>\n<li><p>在设备管理器中找到你的手机，名字可能是你的手机型号，可能是未知设备 ，</p>\n</li>\n<li><p>右键选择更新驱动程序.</p>\n</li>\n<li><p>选择 “浏览计算机以查找驱动程序软件”</p>\n</li>\n<li><p>选择 “让我从计算机上的可用驱动程序列表中选取”</p>\n</li>\n<li><p>在列表里面找到“便携设备” (可能没有这一步操作)</p>\n</li>\n<li><p>选择 “MTP USB 设备”</p>\n<p><img src=\"/2022/3db44d04/1636599848857.png\" alt=\"win10系统识别不了USB设备解决方法介绍-Win10系统识别不了USB设备怎么办-53系统之家\"></p>\n</li>\n<li><p>点击 “下一步”</p>\n</li>\n<li><p>回到设备管理器看到设备已经可用正确运作了</p>\n</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://developer.android.com/studio/run/oem-usb\">安装原始设备制造商 (OEM) USB 驱动程序</a></p>\n<p><a href=\"https://developer.android.com/studio/run/win-usb\">获取 Google USB 驱动程序</a></p>\n",
            "tags": [
                "windows",
                "android",
                "mtp",
                "pc",
                "driver"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/9d389561/",
            "url": "https://www.oikiou.top/2022/9d389561/",
            "title": "Tmux 终端复用器(Terminal Multiplexer)",
            "date_published": "2022-09-29T15:57:15.000Z",
            "content_html": "<h1 id=\"tmux-终端复用器-terminal-multiplexer\"><a href=\"#tmux-终端复用器-terminal-multiplexer\" class=\"headerlink\" title=\"tmux 终端复用器(terminal multiplexer)\"></a>tmux 终端复用器(terminal multiplexer)</h1><p>☆为重要内容</p>\n<h1 id=\"Tmux-简介\"><a href=\"#Tmux-简介\" class=\"headerlink\" title=\"Tmux 简介\"></a>Tmux 简介</h1><p>tmux 终端复用器(terminal multiplexer)</p>\n<h2 id=\"tmux-能干什么\"><a href=\"#tmux-能干什么\" class=\"headerlink\" title=\"tmux 能干什么\"></a>tmux 能干什么</h2><p>命令行的典型使用方式是，打开一个终端窗口（terminal window，以下简称”窗口”），在里面输入命令。<strong>用户与计算机的这种临时的交互，称为一次”会话”（session）</strong> 。</p>\n<p>会话的一个重要特点是，窗口与其中启动的进程是<a href=\"https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html\">连在一起</a>的。打开窗口，会话开始；关闭窗口，会话结束，会话内部的进程也会随之终止，不管有没有运行完。</p>\n<p>一个典型的例子就是，<a href=\"https://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html\">SSH 登录</a>远程计算机，打开一个远程窗口执行一个命令例如<code>iperf3 -s</code>。这时，关掉SSH，会发现<code>iperf3</code>进程也被关掉了。这是因为<code>iperf3</code>属于SSH的子进程，SSH作为父进程，如果父进程关掉了，子进程也就关掉了。</p>\n<p>为了解决这个问题，会话与窗口可以”解绑”：窗口关闭时，会话并不终止，而是继续运行，等到以后需要的时候，再让会话”绑定”其他窗口。</p>\n<p><strong>Tmux 就是会话与窗口的”解绑”工具，将它们彻底分离。</strong></p>\n<blockquote>\n<ul>\n<li>它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用。</li>\n<li>它可以让新窗口”接入”已经存在的会话。</li>\n<li>它允许每个会话有多个连接窗口，因此可以多人实时共享会话。</li>\n<li>它还支持窗口任意的垂直和水平拆分。</li>\n</ul>\n</blockquote>\n<p>类似的终端复用器还有 GNU Screen。Tmux 与它功能相似，但是更易用，也更强大。</p>\n<h1 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h1><p>Tmux 一般需要自己安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># Ubuntu 或 Debian</span><br>$ sudo apt-get install tmux<br><br><span class=\"hljs-comment\"># 启动</span><br>$ tmux<br><br><span class=\"hljs-comment\"># 退出</span><br>$ <span class=\"hljs-built_in\">exit</span><br></code></pre></td></tr></table></figure>\n\n<p>启动后底部<u>左边</u>是<strong>窗口</strong>信息（编号和名称），<u>右侧</u>是系统信息。</p>\n<p><img src=\"/2022/9d389561/image-20220929235001871.png\" alt=\"image-20220929235001871\"></p>\n<p>按下<code>Ctrl+d</code>或者显式输入<code>exit</code>命令，就可以退出 Tmux 窗口。</p>\n<h2 id=\"前缀键☆\"><a href=\"#前缀键☆\" class=\"headerlink\" title=\"前缀键☆\"></a><strong>前缀键</strong>☆</h2><p>Tmux 窗口有大量的快捷键。所有快捷键都要通过前缀键唤起。默认的前缀键是<code>Ctrl+b</code>，即先按下<code>Ctrl+b</code>，快捷键才会生效。</p>\n<p>举例来说，帮助命令的快捷键是<code>Ctrl+b ?</code>。它的用法是，在 Tmux 窗口中，先按下<code>Ctrl+b</code>，再按下<code>?</code>，就会显示帮助信息。</p>\n<p>然后，按下 ESC 键或<code>q</code>键，就可以退出帮助。</p>\n<h2 id=\"会话-窗格-窗口-的概念☆\"><a href=\"#会话-窗格-窗口-的概念☆\" class=\"headerlink\" title=\"会话  窗格  窗口  的概念☆\"></a><strong>会话  窗格  窗口  的概念</strong>☆</h2><blockquote>\n<p>  会话 session<br>  窗口 windows<br>  窗格 pane</p>\n</blockquote>\n<ul>\n<li><code>tmux new</code>的是会话, 会话可以包括多个窗口, 窗口内可以有多个窗格</li>\n</ul>\n<ul>\n<li><code>tmux ls</code> 列出的是会话</li>\n</ul>\n<p><img src=\"/2022/9d389561/image-20220930003505311.png\" alt=\"image-20220930003505311\"></p>\n<h1 id=\"会话的管理\"><a href=\"#会话的管理\" class=\"headerlink\" title=\"会话的管理\"></a>会话的管理</h1><h2 id=\"快捷键☆\"><a href=\"#快捷键☆\" class=\"headerlink\" title=\"快捷键☆\"></a>快捷键☆</h2><p>下面是一些会话相关的快捷键。</p>\n<blockquote>\n<ul>\n<li><code>Ctrl+b d</code>：分离当前会话。</li>\n<li><code>Ctrl+b s</code>：列出所有会话。</li>\n<li><code>Ctrl+b $</code>：重命名当前会话。</li>\n</ul>\n</blockquote>\n<h2 id=\"3-1-new新建会话☆\"><a href=\"#3-1-new新建会话☆\" class=\"headerlink\" title=\"3.1 new新建会话☆\"></a>3.1 new新建会话☆</h2><p>第一个启动的 Tmux 窗口，编号是<code>0</code>，第二个窗口的编号是<code>1</code>，以此类推。这些窗口对应的会话，就是 0 号会话、1 号会话。</p>\n<p>使用编号区分会话，不太直观，更好的方法是为会话起名。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 直接新建一个</span><br>$ tmux<br><span class=\"hljs-comment\"># 新建并设置一个名字</span><br>$ tmux new -s &lt;session-name&gt;<br></code></pre></td></tr></table></figure>\n</blockquote>\n<p>上面命令新建一个指定名称的会话。</p>\n<p>在<code>tmux</code>内应该是无法执行这个指令的, 需要分屏参考下面的窗格操作章节.</p>\n<h2 id=\"3-2-detach分离会话☆\"><a href=\"#3-2-detach分离会话☆\" class=\"headerlink\" title=\"3.2 detach分离会话☆\"></a>3.2 detach分离会话☆</h2><p>在 Tmux 窗口中，按下<code>Ctrl+b d</code>或者输入<code>tmux detach</code>命令，就会将当前会话与窗口分离。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ tmux detach<br></code></pre></td></tr></table></figure>\n</blockquote>\n<p>上面命令执行后，就会退出当前 Tmux 窗口，但是会话和里面的进程仍然在后台运行。</p>\n<p><code>tmux ls</code>命令可以查看当前所有的 Tmux 会话。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ tmux <span class=\"hljs-built_in\">ls</span><br><span class=\"hljs-comment\"># or</span><br>$ tmux list-session<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"3-3-attach接入会话☆\"><a href=\"#3-3-attach接入会话☆\" class=\"headerlink\" title=\"3.3 attach接入会话☆\"></a>3.3 attach接入会话☆</h2><p><code>tmux attach</code>命令用于重新接入某个已存在的会话。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 使用会话编号</span><br>$ tmux attach -t 0<br><br><span class=\"hljs-comment\"># 使用会话名称</span><br>$ tmux attach -t &lt;session-name&gt;<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"3-4-kill-session杀死会话☆\"><a href=\"#3-4-kill-session杀死会话☆\" class=\"headerlink\" title=\"3.4 kill-session杀死会话☆\"></a>3.4 kill-session杀死会话☆</h2><p><code>tmux kill-session</code>命令用于杀死某个会话。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 使用会话编号</span><br>$ tmux kill-session -t 0<br><br><span class=\"hljs-comment\"># 使用会话名称</span><br>$ tmux kill-session -t &lt;session-name&gt;<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"3-5-切换会话\"><a href=\"#3-5-切换会话\" class=\"headerlink\" title=\"3.5 切换会话\"></a>3.5 切换会话</h2><p><code>tmux switch</code>命令用于切换会话。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 使用会话编号</span><br>$ tmux switch -t 0<br><br><span class=\"hljs-comment\"># 使用会话名称</span><br>$ tmux switch -t &lt;session-name&gt;<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"3-6-重命名会话\"><a href=\"#3-6-重命名会话\" class=\"headerlink\" title=\"3.6 重命名会话\"></a>3.6 重命名会话</h2><p><code>tmux rename-session</code>命令用于重命名会话。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ tmux rename-session -t 0 &lt;new-name&gt;<br></code></pre></td></tr></table></figure>\n</blockquote>\n<p>上面命令将0号会话重命名。</p>\n<h1 id=\"窗格操作\"><a href=\"#窗格操作\" class=\"headerlink\" title=\"窗格操作\"></a>窗格操作</h1><h2 id=\"快捷键☆-1\"><a href=\"#快捷键☆-1\" class=\"headerlink\" title=\"快捷键☆\"></a>快捷键☆</h2><blockquote>\n<ul>\n<li><code>Ctrl+b %</code>：划分左右两个窗格。☆</li>\n<li><code>Ctrl+b &quot;</code>：划分上下两个窗格。☆</li>\n<li><code>Ctrl+b &lt;arrow key&gt;</code>：光标切换到其他窗格。<code>&lt;arrow key&gt;</code>是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键<code>↓</code>。☆</li>\n<li><code>Ctrl+b ;</code>：光标切换到上一个窗格。</li>\n<li><code>Ctrl+b o</code>：光标切换到下一个窗格。</li>\n<li><code>Ctrl+b &#123;</code>：当前窗格与上一个窗格交换位置。☆</li>\n<li><code>Ctrl+b &#125;</code>：当前窗格与下一个窗格交换位置。☆</li>\n<li><code>Ctrl+b Ctrl+o</code>：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。</li>\n<li><code>Ctrl+b Alt+o</code>：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。</li>\n<li><code>Ctrl+b x</code>：关闭当前窗格。☆</li>\n<li><code>Ctrl+b !</code>：将当前窗格拆分为一个独立窗口。</li>\n<li><code>Ctrl+b z</code>：当前窗格全屏显示，再使用一次会变回原来大小。</li>\n<li><code>Ctrl+b Ctrl+&lt;arrow key&gt;</code>：按箭头方向调整窗格大小。☆</li>\n<li><code>Ctrl+b q</code>：显示窗格编号。</li>\n</ul>\n</blockquote>\n<h2 id=\"5-1-划分窗格\"><a href=\"#5-1-划分窗格\" class=\"headerlink\" title=\"5.1 划分窗格\"></a>5.1 划分窗格</h2><p><code>tmux split-window</code>命令用来划分窗格。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 划分上下两个窗格</span><br>$ tmux split-window<br><br><span class=\"hljs-comment\"># 划分左右两个窗格</span><br>$ tmux split-window -h<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"5-2-移动光标\"><a href=\"#5-2-移动光标\" class=\"headerlink\" title=\"5.2 移动光标\"></a>5.2 移动光标</h2><p><code>tmux select-pane</code>命令用来移动光标位置。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 光标切换到上方窗格</span><br>$ tmux select-pane -U<br><br><span class=\"hljs-comment\"># 光标切换到下方窗格</span><br>$ tmux select-pane -D<br><br><span class=\"hljs-comment\"># 光标切换到左边窗格</span><br>$ tmux select-pane -L<br><br><span class=\"hljs-comment\"># 光标切换到右边窗格</span><br>$ tmux select-pane -R<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"5-3-交换窗格位置\"><a href=\"#5-3-交换窗格位置\" class=\"headerlink\" title=\"5.3 交换窗格位置\"></a>5.3 交换窗格位置</h2><p><code>tmux swap-pane</code>命令用来交换窗格位置。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 当前窗格上移</span><br>$ tmux swap-pane -U<br><br><span class=\"hljs-comment\"># 当前窗格下移</span><br>$ tmux swap-pane -D<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h1 id=\"窗口管理\"><a href=\"#窗口管理\" class=\"headerlink\" title=\"窗口管理\"></a>窗口管理</h1><h2 id=\"快捷键☆-2\"><a href=\"#快捷键☆-2\" class=\"headerlink\" title=\"快捷键☆\"></a>快捷键☆</h2><p>下面是一些窗口操作的快捷键。</p>\n<blockquote>\n<ul>\n<li><code>Ctrl+b c</code>：创建一个新窗口，状态栏会显示多个窗口的信息。</li>\n<li><code>Ctrl+b p</code>：切换到上一个窗口（按照状态栏上的顺序）。</li>\n<li><code>Ctrl+b n</code>：切换到下一个窗口。</li>\n<li><code>Ctrl+b &lt;number&gt;</code>：切换到指定编号的窗口，其中的<code>&lt;number&gt;</code>是状态栏上的窗口编号。</li>\n<li><code>Ctrl+b w</code>：从列表中选择窗口。</li>\n<li><code>Ctrl+b ,</code>：窗口重命名。</li>\n</ul>\n</blockquote>\n<h2 id=\"6-1-新建窗口\"><a href=\"#6-1-新建窗口\" class=\"headerlink\" title=\"6.1 新建窗口\"></a>6.1 新建窗口</h2><p><code>tmux new-window</code>命令用来创建新窗口。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ tmux new-window<br><br><span class=\"hljs-comment\"># 新建一个指定名称的窗口</span><br>$ tmux new-window -n &lt;window-name&gt;<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"6-2-切换窗口\"><a href=\"#6-2-切换窗口\" class=\"headerlink\" title=\"6.2 切换窗口\"></a>6.2 切换窗口</h2><p><code>tmux select-window</code>命令用来切换窗口。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 切换到指定编号的窗口</span><br>$ tmux select-window -t &lt;window-number&gt;<br><br><span class=\"hljs-comment\"># 切换到指定名称的窗口</span><br>$ tmux select-window -t &lt;window-name&gt;<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"6-3-重命名窗口\"><a href=\"#6-3-重命名窗口\" class=\"headerlink\" title=\"6.3 重命名窗口\"></a>6.3 重命名窗口</h2><p><code>tmux rename-window</code>命令用于为当前窗口起名（或重命名）。</p>\n<blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ tmux rename-window &lt;new-name&gt;<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><h2 id=\"一些其他的快捷键\"><a href=\"#一些其他的快捷键\" class=\"headerlink\" title=\"一些其他的快捷键\"></a>一些其他的快捷键</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 列出所有快捷键，及其对应的 Tmux 命令</span><br>$ tmux list-keys<br><br><span class=\"hljs-comment\"># 列出所有 Tmux 命令及其参数</span><br>$ tmux list-commands<br><br><span class=\"hljs-comment\"># 列出当前所有 Tmux 会话的信息</span><br>$ tmux info<br><br><span class=\"hljs-comment\"># 重新加载当前的 Tmux 配置</span><br>$ tmux source-file ~/.tmux.conf<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"开启鼠标支持\"><a href=\"#开启鼠标支持\" class=\"headerlink\" title=\"开启鼠标支持\"></a>开启鼠标支持</h2><p>tmux2 以上版本和 tmux2 以上版本有所不同</p>\n<blockquote>\n<p>  查看版本<code>tmux -V</code></p>\n<p>  注意大写</p>\n</blockquote>\n<h3 id=\"tmux2-以上\"><a href=\"#tmux2-以上\" class=\"headerlink\" title=\"tmux2 以上\"></a>tmux2 以上</h3><p><strong>写入配置文件</strong></p>\n<p>在<code>~/.tmux.conf</code>中加入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># Enable mouse mode (tmux 2.1 and above)</span><br><span class=\"hljs-built_in\">set</span> -g mouse on<br><br><span class=\"hljs-comment\"># Mouse based copy</span><br>bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel <span class=\"hljs-string\">&quot;reattach-to-user-namespace pbcopy&quot;</span><br>bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel <span class=\"hljs-string\">&quot;reattach-to-user-namespace pbcopy&quot;</span> <br></code></pre></td></tr></table></figure>\n\n<p><strong>临时使用</strong></p>\n<p>按完前缀ctrl+B后，再按冒号：进入<code>命令行</code>模式，输入<code>set -g mouse on</code></p>\n<h3 id=\"tmux2-以下\"><a href=\"#tmux2-以下\" class=\"headerlink\" title=\"tmux2 以下\"></a>tmux2 以下</h3><p><strong>写入配置文件</strong></p>\n<p>在<code>~/.tmux.conf</code>中加入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">setw -g mouse-resize-pane on<br>setw -g mouse-select-pane on<br>setw -g mouse-select-window on<br>setw -g mode-mouse on<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  这几行的作用分别是:<br>  开启用鼠标拖动调节pane的大小（拖动位置是pane之间的分隔线）<br>  开启用鼠标点击pane来激活该pane<br>  开启用鼠标点击来切换活动window（点击位置是状态栏的窗口名称）<br>  开启window&#x2F;pane里面的鼠标支持（也即可以用鼠标滚轮回滚显示窗口内容，此时还可以用鼠标选取文本）</p>\n</blockquote>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/\">A Quick and Easy Guide to tmux</a></li>\n<li><a href=\"https://danielmiessler.com/study/tmux/\">Tactical tmux: The 10 Most Important Commands</a></li>\n<li><a href=\"https://linuxize.com/post/getting-started-with-tmux/\">Getting started with Tmux</a></li>\n<li><a href=\"https://www.ruanyifeng.com/blog/2019/10/tmux.html\">阮一峰</a></li>\n</ul>\n",
            "tags": [
                "linux",
                "tmux"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/a1ed3941/",
            "url": "https://www.oikiou.top/2022/a1ed3941/",
            "title": "我的工作法",
            "date_published": "2022-09-19T12:54:03.000Z",
            "content_html": "<h1 id=\"我的工作法\"><a href=\"#我的工作法\" class=\"headerlink\" title=\"我的工作法\"></a>我的工作法</h1><p><a href=\"https://unknwon.cn/2021/211013-boring-methodology-to-be-productive/\">高效工作法的朴素方法论 -By无闻</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/42694082\">逗总出品：GTD最全面教程，从入门到精通</a></p>\n<h1 id=\"出来玩最重要的是出来\"><a href=\"#出来玩最重要的是出来\" class=\"headerlink\" title=\"出来玩最重要的是出来\"></a>出来玩最重要的是出来</h1><p>不管今天一天做什么惊天地的大事, 第一步都是先起床.</p>\n<h2 id=\"花三分钟安排一天\"><a href=\"#花三分钟安排一天\" class=\"headerlink\" title=\"花三分钟安排一天\"></a>花三分钟安排一天</h2><p>每天开始，先梳理一遍今日视图里的所有任务</p>\n<p>梳理任务的关键在于对于自己实际的产出效率和可用时间上的正确评判</p>\n<h2 id=\"创造仪式感\"><a href=\"#创造仪式感\" class=\"headerlink\" title=\"创造仪式感\"></a>创造仪式感</h2><p>有的人喜欢喝咖啡, 比如倒好一杯咖啡之后就放下手机, 避免去接触任何和当前手上事务不相关的内容(放下手机并让它远离自己).</p>\n<h1 id=\"推送通知是互联网时代的毒药\"><a href=\"#推送通知是互联网时代的毒药\" class=\"headerlink\" title=\"推送通知是互联网时代的毒药\"></a>推送通知是互联网时代的毒药</h1><p>我注意到推送通知经常会带给人们焦虑的情绪，尤其是工作上的，我对此也深恶痛绝。</p>\n<ul>\n<li>在工作时间(专注的时间)关掉它们(尤其是手机), 别让他们打断你的工作节奏</li>\n</ul>\n<h1 id=\"异步沟通是健康的协作方式\"><a href=\"#异步沟通是健康的协作方式\" class=\"headerlink\" title=\"异步沟通是健康的协作方式\"></a>异步沟通是健康的协作方式</h1><p>实时沟通会打断各自的计划, 能够以异步沟通完成的事, 千万不要去同步沟通.  </p>\n<p>马斯克同样推崇异步沟通</p>\n<p><a href=\"https://www.youtube.com/watch?v=kLscv2VAQEE\">https://www.youtube.com/watch?v=kLscv2VAQEE</a></p>\n<h1 id=\"给自己放个假\"><a href=\"#给自己放个假\" class=\"headerlink\" title=\"给自己放个假\"></a>给自己放个假</h1><p>软件类属创造性工作，而人类大脑又是世界上最复杂、最精密的仪器。</p>\n<p>超时长工作并不会使得大脑变得更具创造性，因为每个机械师都知道零部件需要定期检查和维护。</p>\n<p><strong>恐怕你也无法想象你的航空公司会告诉你某架次飞机会因为长期没有检修而飞得更快吧？</strong></p>\n",
            "tags": [
                "life",
                "workflow"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/bc4a75ff/",
            "url": "https://www.oikiou.top/2022/bc4a75ff/",
            "title": "JPEG JPEG2000 WebP PNG GIF对比",
            "date_published": "2022-09-18T05:47:15.000Z",
            "content_html": "<h1 id=\"图像的显示原理\"><a href=\"#图像的显示原理\" class=\"headerlink\" title=\"图像的显示原理\"></a>图像的显示原理</h1><h2 id=\"有损-x2F-无损压缩\"><a href=\"#有损-x2F-无损压缩\" class=\"headerlink\" title=\"有损&#x2F;无损压缩\"></a>有损&#x2F;无损压缩</h2><p>图片文件格式有可能会对图片的文件大小进行不同程度的压缩，图片的压缩分为有损压缩和无损压缩两种。</p>\n<h3 id=\"有损压缩\"><a href=\"#有损压缩\" class=\"headerlink\" title=\"有损压缩\"></a>有损压缩</h3><p>对图像本身的改变，在保存图像时保留了较多的亮度信息，而将色相和色纯度的信息和周围的像素进行合并，合并的比例不同，压缩的比例也不同，由于信息量减少了，所以压缩比可以很高，图像质量也会相应的下降。并且这种损失是不可逆的，我们不可能从有一个有损压缩过的图片中恢复出全来的图片。常见的有损压缩手段，是按照一定的算法将临近的像素点进行合并。<br><strong>有损压缩的原理：</strong> <em>删除景物边缘的某些颜色部分，当人们在屏幕上观看这个场景图片，大脑会利用在景物上看到的颜色填补所丢失的颜色部分。</em><br><strong>有损压缩的优缺点：</strong> <em>是保持颜色的逐渐变化，删除图像中颜色的突然变化。生物学中的大量实验证明，人类大脑会利用与附近最接近的颜色来填补所丢失的颜色。例如，对于蓝色天空背景上的一朵白云，有损压缩的方法就是删除图像中景物边缘的某些颜色部分。当在·屏幕上看这幅图时，大脑会利用在景物上看到的颜色填补所丢失的颜色部分。利用有损压缩技术，某些数据被有意地删除了，而被取消的数据也不再恢复。 无可否认，利用有损压缩技术可以大大地压缩文件的数据，但是会影响图像质量。如果使用了有损压缩的图像仅在屏幕上显示，可能对图像质量影响不太大，至少对于人类眼睛的识别程度来说区别不大。可是，如果要把一幅经过有损压缩技术处理的图像用高分辨率打印机打印出来，那么图像质量就会有明显的受损痕迹。</em></p>\n<h3 id=\"无损压缩\"><a href=\"#无损压缩\" class=\"headerlink\" title=\"无损压缩\"></a>无损压缩</h3><p>无损压缩的基本原理是相同的颜色信息只需保存一次。压缩图像的软件首先会确定图像中哪些区域是相同的，哪些是不同的。包括了重复数据的图像(如蓝天) 就可以被压缩，只有蓝天的起始点和终结点需要被记录下来。但是蓝色可能还会有不同的深浅，天空有时也可能被树木、山峰或其他的对象掩盖，这些就需要另外记录。从本质上看，无损压缩的方法可以删除一些重复数据，大大减少要在磁盘上保存的图像尺寸。但是，无损压缩的方法并不能减少图像的内存占用量，这是因为，当从磁盘上读取图像时，软件又会把丢失的像素用适当的颜色信息填充进来。如果要减少图像占用内存的容量，就必须使用有损压缩方法。<br><strong>无损压缩的特点：</strong> <em>相同的颜色信息只需保存一次。</em><br><strong>无损压缩的原理：</strong> <em>首先辨别出相同颜色的区域，然后把这些相同的数据信息进行压缩记录，也就是记录它的颜色信息、起始和终止位置。</em></p>\n<h2 id=\"索引色-x2F-直接色\"><a href=\"#索引色-x2F-直接色\" class=\"headerlink\" title=\"索引色&#x2F;直接色\"></a>索引色&#x2F;直接色</h2><p>计算机在表示颜色的时候，有两种形式，一种称作索引颜色(Index Color)，一种称作直接颜色(Direct Color)。</p>\n<h3 id=\"索引色。\"><a href=\"#索引色。\" class=\"headerlink\" title=\"索引色。\"></a>索引色。</h3><p>是一种以有限的方式管理数字图像颜色的技术，以节省计算机内存和文件存储，同时加速显示刷新和文件传输。即用一个数字来代表（索引）一种颜色，在存储图片的时候，存储一个数字的组合，同时存储数字到图片颜色的映射。这种方式只能存储有限种颜色，通常是256种颜色，对应到计算机系统中，使用一个字节的数字来索引一种颜色。</p>\n<h3 id=\"直接色。\"><a href=\"#直接色。\" class=\"headerlink\" title=\"直接色。\"></a>直接色。</h3><p>使用四个数字来代表一种颜色，这四个数字分别代表这个颜色中红色、绿色、蓝色以及透明度（即rgba）。现在流行的显示设备可以在这四个维度分别支持256种变化，所以直接色可以表示2的32次方种颜色。当然并非所有的直接色都支持这么多种，为压缩空间使用，有可能只有表达红、绿、蓝的三个数字，每个数字也可能不支持256种变化之多</p>\n<h2 id=\"位图-x2F-矢量图\"><a href=\"#位图-x2F-矢量图\" class=\"headerlink\" title=\"位图&#x2F;矢量图\"></a>位图&#x2F;矢量图</h2><h3 id=\"位图。\"><a href=\"#位图。\" class=\"headerlink\" title=\"位图。\"></a>位图。</h3><p>位图也叫做点阵图，栅格图像，像素图。简单的说，就是最小单位由像素构成的图，缩放会失真。构成位图的最小单位是像素，位图就是由像素阵列的排列来实现其显示效果的，每个像素有自己的颜色信息，在对位图图像进行编辑操作的时候，可操作的对象是每个像素，我们可以改变图像的色相、饱和度、明度，从而改变图像的显示效果。举个例子来说，位图图像就好比在巨大的沙盘上画好的画，当你从远处看的时候，画面细腻多彩，但是当你靠的非常近的时候，你就能看到组成画面的每粒沙子以及每个沙粒单纯的不可变化颜色。</p>\n<h3 id=\"矢量图，\"><a href=\"#矢量图，\" class=\"headerlink\" title=\"矢量图，\"></a>矢量图，</h3><p>也叫做向量图。矢量图并不纪录画面上每一点的信息，而是纪录了元素形状及颜色的算法，当你打开一付矢量图的时候，软件对图形象对应的函数进行运算，将运算结果[图形的形状和颜色]显示给你看。无论显示画面是大还是小，画面上的对象对应的算法是不变的，所以，即使对画面进行倍数相当大的缩放，其显示效果仍然相同(不失真)。</p>\n<h1 id=\"JPEG-JPEG2000-WebP\"><a href=\"#JPEG-JPEG2000-WebP\" class=\"headerlink\" title=\"JPEG JPEG2000 WebP\"></a>JPEG JPEG2000 WebP</h1><blockquote>\n<p>  摘录自知乎: </p>\n<p>  原文: <a href=\"https://zhuanlan.zhihu.com/p/19586108\">https://zhuanlan.zhihu.com/p/19586108</a></p>\n<p>  作者: <a href=\"https://www.zhihu.com/people/xhacker\">柳东原</a> This Xhacker has super Big Cat power.</p>\n</blockquote>\n<p><strong>压缩性能综合看来，WebP 略好于 JPEG2000，而这两者都明显好于 JPEG。</strong></p>\n<p>前段时间测试了一下这三种有损图像压缩算法的质量。（WebP 也能支持无损，不过这里只测试有损。）</p>\n<p>测试结果（<a href=\"https://link.zhihu.com/?target=http://en.wikipedia.org/wiki/Structural_similarity\">SSIM Index</a> 可理解为图片与原图片的相似度）：</p>\n<p><img src=\"/2022/bc4a75ff/6dd37790364b1a5e709f8e67adab81d3_r.jpg\" alt=\"img\"></p>\n<p><img src=\"/2022/bc4a75ff/868c8f801447ee85c0867556cdb1f705_r.jpg\" alt=\"img\"></p>\n<p><img src=\"/2022/bc4a75ff/85ab2ef874126a10072e4669d9cd7c90_720w.jpg\" alt=\"img\"></p>\n<p><img src=\"/2022/bc4a75ff/ea62d92a63b45aa121eb0ccfce4a97fd_720w.jpg\" alt=\"img\"></p>\n<p><img src=\"/2022/bc4a75ff/6cdab6a9efdf3df3fba2657314d81734_720w.jpg\" alt=\"img\"></p>\n<p><img src=\"/2022/bc4a75ff/323465387e562470441127b8f0cc992e_720w.jpg\" alt=\"img\"></p>\n<p>测试细节：对于 JPEG 使用 libjpeg 压缩，JPEG 2000 使用 OpenJPEG，WebP 使用 libwebp。</p>\n<h1 id=\"JPEG-PNG-GIF-WEBP\"><a href=\"#JPEG-PNG-GIF-WEBP\" class=\"headerlink\" title=\"JPEG PNG GIF WEBP\"></a>JPEG PNG GIF WEBP</h1><p><strong>综合看来</strong></p>\n<ul>\n<li>PNG 可以保存透明信息, 比较适合颜色单一, 主要是纯色的图像, ( logo&#x2F;icon&#x2F;透明图 )</li>\n<li>JPEG 适用颜色种类多样 且颜色变化明显的图片 ( 一般照片 )</li>\n<li>GIF 支持动画,透明, 只有8位颜色 ( 动图 )</li>\n<li>WEBP 文件小, 支持透明, 有损无损压缩, 支持动画, 兼容性不好 ( 网页图像 )</li>\n</ul>\n<h2 id=\"JPEG\"><a href=\"#JPEG\" class=\"headerlink\" title=\"JPEG\"></a>JPEG</h2><p>JPEG是有损的、采用直接色的、位图。JPEG也是一种针对照片影像而广泛使用的有损压缩标准方法。JPEG图片格式的设计目标，是在不影响人类可分辨的图片质量的前提下，尽可能的压缩文件大小。这意味着JPEG去掉了一部分图片的原始信息，也即是进行了有损压缩。JPEG的图片的优点，是采用了直接色，得益于更丰富的色彩，JPEG非常适合用来存储照片，用来表达更生动的图像效果，比如颜色渐变。</p>\n<ul>\n<li>特性：适用于存储色彩丰富、层次分明的图片，不适合于线条绘图（drawing）和其他文字或图标（iconic）的图形，因为它的压缩方法用在这些类型的图形上，得到的结果并不好(PNG和GIF通常是用来存储这类的图形)</li>\n</ul>\n<h2 id=\"PNG\"><a href=\"#PNG\" class=\"headerlink\" title=\"PNG\"></a>PNG</h2><p>便携式网络图形是一种无损压缩的位图图形格式，支持索引、灰度、RGB三种颜色方案以及Alpha通道等特性</p>\n<ul>\n<li>特性：如果保存文本，线条或类似的边缘清晰，有大块相同颜色区域的图像，PNG格式的压缩效果就要比JPEG好很多，并且不会出现JPEG那样的高对比度区域的图像有损。如果图像既有清晰边缘，又有照片图像的特点，就需要在这两种格式之间权衡一下了。JPEG不支持透明度。<br>PNG格式有8位、24位、32位三种形式,其中8位PNG支持两种不同 的透明形式（索引透明和alpha透明）,24位PNG不支持透明,32位 PNG 在24位基础上增加了8位透明通道（32-24&#x3D;&#x3D;&#x3D;8）,因此可展现256级透明程度。</li>\n</ul>\n<h3 id=\"PNG8\"><a href=\"#PNG8\" class=\"headerlink\" title=\"PNG8\"></a>PNG8</h3><p>PNG8是<strong>无损的、使用索引色的、点阵图</strong>,支持不透明、索引透明、Alpha透明，都最多只能展示256（2的8次方）种颜色，所以“PNG8”格式更适合那些颜色比较单一的图像，例如纯色、logo、图标等；因为颜色数量少，所以图片的体积也会更小；</p>\n<ul>\n<li><p>PNG8(不透明),默认PNG8</p>\n</li>\n<li><p>PNG8(索引色透明),简单说可以理解为静态的GIF<br>指定一个像素点是不是透明<br>但是PNG由于算法的优势,体积比较少<br>所以,静态GIF完全可用PNG8取代</p>\n</li>\n<li><p>PNG8(Alpha透明),牛逼在可指定像素点的透明度,例如50%透明度<br>这种优点在于比PNG24&#x2F;32体积小,因为也只有256色嘛<br>缺点在于IE6支持不好,会把半透明的像素点显示成全透明</p>\n</li>\n</ul>\n<h3 id=\"PNG24\"><a href=\"#PNG24\" class=\"headerlink\" title=\"PNG24\"></a>PNG24</h3><p>是PNG的直接色版本。PNG24是<strong>无损的、使用直接色的、点阵图</strong>,支持2的24次方种颜色，表现为不透明。用三个8bits分别去表示 R（红）、G（绿）、B（蓝）。R(0255),G(0255),B(0~255)，可以表达256乘以256乘以256&#x3D;16777216种颜色的图片，这样PNG24就能比PNG8表示色彩更丰富的图片,图片的清晰度也会更好，图片质量更高，当然图片的大小也会相应增加，所以“PNG24”的图片比较适合像摄影作品之类颜色比较丰富的图片<br>PNG24与JPG一样能表达丰富的图片细节，但并不能替代JPG。图片存储为PNG24比存储为JPG，文件大小至少是JPG的5倍，但在图片品质上的提升却微乎其微。所以除非对品质的要求极高，否则色彩丰富的网络图片还是推荐使用JPG</p>\n<h3 id=\"PNG32\"><a href=\"#PNG32\" class=\"headerlink\" title=\"PNG32\"></a>PNG32</h3><p>支持2的32次方种颜色，32位是我们最常使用的格式，它是在PNG在24位的PNG基础上增加了8位的透明信息，支持不同程度的半透效果</p>\n<h3 id=\"PNG8-PNG24-PNG32三者的区别在于：\"><a href=\"#PNG8-PNG24-PNG32三者的区别在于：\" class=\"headerlink\" title=\"PNG8\\PNG24\\PNG32三者的区别在于：\"></a>PNG8\\PNG24\\PNG32三者的区别在于：</h3><ul>\n<li>PNG-32每个像素的深度为32bits，其中RGBA四个通道各占8bits。所谓的RGBA四个通道，就是红，绿，蓝，透明 这四种色值各自的大小，都用8bits来表示（0～255）。</li>\n<li>PNG-24的像素深度为24bits，其中RGB三个通道各占8bits。</li>\n<li>PNG-8则是使用8位的索引色。</li>\n</ul>\n<h2 id=\"GIF\"><a href=\"#GIF\" class=\"headerlink\" title=\"GIF\"></a>GIF</h2><p>GIF是一种<strong>无损、使用于索引色的、位图</strong>。由于采用了无损压缩，相比古老的bmp格式，尺寸较小，而且支持透明和动画。缺点是由于gif只存储8位索引（也就是最多能表达2^8&#x3D;256种颜色），色彩复杂、细节丰富的图片不适合保存为gif格式。色彩简单的logo、icon、线框图适合采用gif格式。</p>\n<p>静态GIF完全可用PNG8取代</p>\n<h2 id=\"WEBP\"><a href=\"#WEBP\" class=\"headerlink\" title=\"WEBP\"></a>WEBP</h2><p>WebP图片是一种同时提供了<strong>有损压缩与无损压缩、使用直接色的、位图</strong>，由Google开发。与png、jpg相比，相同的视觉体验下，WebP图像的尺寸缩小了大约30％。另外，WebP图像格式还支持有损压缩、无损压缩、透明和动画。理论上完全可以替代png、jpg、gif等图片格式，当然目前webp的还没有得到全面的支持。</p>\n<p>WEBP与PNG压缩对比</p>\n<p><img src=\"/2022/bc4a75ff/formatpng.png\" alt=\"img\"></p>\n<p>可以得出结论：</p>\n<blockquote>\n<p>  PNG 转 WebP 的压缩率要高于 PNG 原图压缩率，同样支持有损与无损压缩<br>  转换后的 WebP 体积大幅减少，图片质量也得到保障（同时肉眼几乎无法看出差异）<br>  转换后的 WebP 支持 Alpha 透明和 24-bit 颜色数，不存在 PNG8 色彩不够丰富和在浏览器中可能会出现毛边的问题</p>\n</blockquote>\n",
            "tags": [
                "jpeg",
                "webp",
                "jpeg2000",
                "image"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/631793c8/",
            "url": "https://www.oikiou.top/2022/631793c8/",
            "title": "文件后缀与文件",
            "date_published": "2022-09-15T09:47:15.000Z",
            "content_html": "<h1 id=\"文件后缀与文件\"><a href=\"#文件后缀与文件\" class=\"headerlink\" title=\"文件后缀与文件\"></a>文件后缀与文件</h1><table>\n<thead>\n<tr>\n<th>后缀</th>\n<th>名称描述</th>\n<th>简述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>.DS_Store</code></td>\n<td>Desktop Services Store</td>\n<td>Mac OS X操作系统所创造的隐藏文件，类似<code>desktop.ini</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"编辑历史\"><a href=\"#编辑历史\" class=\"headerlink\" title=\"编辑历史\"></a>编辑历史</h2><table>\n<thead>\n<tr>\n<th>date</th>\n<th>note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2022.9.15</td>\n<td>First Version</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"DS-Store\"><a href=\"#DS-Store\" class=\"headerlink\" title=\".DS_Store\"></a>.DS_Store</h2><blockquote>\n<p>  DS_Store，英文全称是 Desktop Services Store（桌面服务存储），开头的 DS 是 Desktop Services（桌面服务） 的缩写。它是一种由macOS系统自动创建的隐藏文件，存在于每一个用「Finder」打开过的文件夹下面。</p>\n<p>  <code>.DS_Store</code> 是一种由苹果公司的Mac OS X操作系统所创造的隐藏文件，目的在于存贮目录的自定义属性，例如文件们的图标位置或者是背景色的选择。该文件由<code>Finder</code>创建并维护，类似于<code>Microsoft Windows</code>中的<code>desktop.ini</code>文件。</p>\n</blockquote>\n<h2 id=\"RTF\"><a href=\"#RTF\" class=\"headerlink\" title=\".RTF\"></a>.RTF</h2><blockquote>\n<p>  <strong>富文本格式</strong>（<strong>Rich Text Format</strong>）即<strong>RTF格式</strong>，又称<strong>多文本格式</strong>，是由<a href=\"https://zh.wikipedia.org/wiki/%E5%BE%AE%E8%BD%AF\">微软</a>公司开发的跨平台<a href=\"https://zh.wikipedia.org/wiki/%E6%96%87%E6%A1%A3\">文档</a>格式。大多数的<a href=\"https://zh.wikipedia.org/wiki/%E6%96%87%E5%AD%97%E5%A4%84%E7%90%86\">文字处理</a>软件都能读取和保存RTF文档。</p>\n<h2 id=\"支持软件\"><a href=\"#支持软件\" class=\"headerlink\" title=\"支持软件\"></a>支持软件</h2><ul>\n<li><a href=\"https://zh.wikipedia.org/wiki/WordPad\">WordPad</a>（<a href=\"https://zh.wikipedia.org/wiki/Microsoft_Windows\">Microsoft Windows</a>）&#x2F; <a href=\"https://zh.wikipedia.org/wiki/%E6%96%87%E5%AD%97%E7%B7%A8%E8%BC%AF_(%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F)\">文本编辑</a>（<a href=\"https://zh.wikipedia.org/wiki/Mac_OS\">Mac OS</a>）</li>\n<li><a href=\"https://zh.wikipedia.org/wiki/Microsoft_Word\">Microsoft Word</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/Apache_OpenOffice\">Apache OpenOffice</a> &#x2F; <a href=\"https://zh.wikipedia.org/wiki/LibreOffice\">LibreOffice</a></li>\n<li><a href=\"https://zh.wikipedia.org/zh-cn/WPS_Office\">WPS Office</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/EIOffice\">EIOffice</a></li>\n</ul>\n</blockquote>\n",
            "tags": [
                "DS_Store",
                "rtf",
                "后缀"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/613d8edd/",
            "url": "https://www.oikiou.top/2022/613d8edd/",
            "title": "Zip Gzip Bzip2 Tar 的区别和差异",
            "date_published": "2022-09-14T16:20:15.000Z",
            "content_html": "<h1 id=\"zip-gzip-bzip2-tar-命令的区别和差异\"><a href=\"#zip-gzip-bzip2-tar-命令的区别和差异\" class=\"headerlink\" title=\"zip gzip bzip2 tar 命令的区别和差异\"></a>zip gzip bzip2 tar 命令的区别和差异</h1><ul>\n<li><code>gzip</code> 和 <code>bzip2</code>用于压缩单个文件。bzip2 比 gzip 具有更高的压缩率，同样的也会需要<strong>更多更多更多</strong>时间来进行压缩。</li>\n<li><code>tar</code>格式的包只是将文件归档在一起, 并不会有任何压缩。</li>\n<li><code>zip</code> 和 <code>tar</code> 命令用于压缩和归档文件夹。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>zip</td>\n<td><code>.zip</code></td>\n<td>可以压缩目录</td>\n<td>源文件会保留</td>\n<td>专门的压缩命令</td>\n</tr>\n<tr>\n<td>gzip</td>\n<td><code>.gz</code></td>\n<td>只能压缩文件</td>\n<td>压缩后源文件会被删除</td>\n<td></td>\n</tr>\n<tr>\n<td>bzip2</td>\n<td><code>.bz2</code></td>\n<td>只能压缩文件</td>\n<td>加<code>-k</code>参数源文件可以保留</td>\n<td></td>\n</tr>\n<tr>\n<td>tar</td>\n<td><code>.tar</code></td>\n<td>可以压缩目录</td>\n<td>源文件会保留</td>\n<td>linux包大多是这形态<br>将目录打包成一个文件<code>Tape archive</code></td>\n</tr>\n<tr>\n<td>xz</td>\n<td><code>.xz</code></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h2><h2 id=\"gzip\"><a href=\"#gzip\" class=\"headerlink\" title=\"gzip\"></a>gzip</h2><p>该<code>gzip</code>程序用于压缩一个或多个文件。执行时，它将原始文件替换为原始文件的压缩版本。使用 gzip 压缩的文件具有扩展名<code>.gz</code></p>\n<h2 id=\"bzip2\"><a href=\"#bzip2\" class=\"headerlink\" title=\"bzip2\"></a>bzip2</h2><p>该<code>bzip2</code>命令类似于 gzip，但使用不同的压缩算法，以牺牲压缩速度为代价归档更高级别的压缩。使用 bzip2 压缩的文件具有扩展名<code>.bz2</code></p>\n<h2 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h2><p><code>tar</code>命令，首字母缩略词<em><strong>Tape archive</strong></em>用于创建存档文件。tar 存档可以由单独的文件、一个或多个目录层次结构或两者的混合组成。tar 文件有扩展名<code>.tar</code></p>\n<h2 id=\"xz\"><a href=\"#xz\" class=\"headerlink\" title=\"xz\"></a>xz</h2><p><code>xz</code>是一个通用的数据压缩工具，命令行语法类似于 gzip 和 bzip2 。它根据选择的操作模式压缩或解压缩每个文件。用 xz 压缩的文件具有扩展名<code>.xz</code></p>\n<h1 id=\"Zip-和-Unzip\"><a href=\"#Zip-和-Unzip\" class=\"headerlink\" title=\"Zip 和 Unzip\"></a>Zip 和 Unzip</h1><h2 id=\"zip-1\"><a href=\"#zip-1\" class=\"headerlink\" title=\"zip\"></a>zip</h2><p><strong>命令格式</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">zip [-r] [压缩后文件名] [文件或目录]<br></code></pre></td></tr></table></figure>\n\n<p><strong>命令描述</strong></p>\n<ul>\n<li><code>zip</code>命令用来对文件进行打包操作。zip是个使用广泛的压缩程序，文件经它压缩后会另外产生具有“.zip”扩展名的压缩文件；</li>\n<li>在linux压缩后的文件，基本都可以在Windows系统中解压；Windows中压缩的文件，在Linux中不一定可用，但是zip格式的压缩文件，可以做到可用；</li>\n<li>zip的压缩比不是很高；</li>\n</ul>\n<p><strong>示例</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 压缩文件</span><br>$ zip a.zip a.txt<br><span class=\"hljs-comment\"># 查看压缩后的文件</span><br>$ <span class=\"hljs-built_in\">ls</span><br>a.txt  a.zip  <br><br><span class=\"hljs-comment\"># 2. -r：压缩文件夹</span><br>$ zip -r test.zip testDir/<br>$ <span class=\"hljs-built_in\">ls</span><br>testDir  test.zip<br><br><span class=\"hljs-comment\"># 3. -x 排除文件</span><br>$ zip -r test2.zip testDir/ -x <span class=\"hljs-string\">&quot;testDir/hello*&quot;</span> -x <span class=\"hljs-string\">&quot;testDir/dir/*&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"unzip-解压\"><a href=\"#unzip-解压\" class=\"headerlink\" title=\"unzip 解压\"></a>unzip 解压</h2><p><strong>命令格式</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">unzip [选项] 文件名<br></code></pre></td></tr></table></figure>\n\n<p><strong>命令描述</strong></p>\n<p><code>unzip</code>命令用于解压缩由zip命令压缩的“.zip”压缩包。</p>\n<p><strong>选项</strong></p>\n<ul>\n<li>-n：解压缩时不要覆盖原有的文件；</li>\n<li>-o：不必先询问用户，unzip执行后覆盖原有的文件；</li>\n<li>-d &lt;目录&gt;：指定文件解压缩后所要存储的目录(不指定目录，默认解压到当前目录)</li>\n</ul>\n<p><strong>示例</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 解压文件到家目录</span><br>$ unzip test.zip -d ~<br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Gzip-和-Gunzip\"><a href=\"#Gzip-和-Gunzip\" class=\"headerlink\" title=\"Gzip 和 Gunzip\"></a>Gzip 和 Gunzip</h1><h2 id=\"gzip-1\"><a href=\"#gzip-1\" class=\"headerlink\" title=\"gzip\"></a><strong>gzip</strong></h2><p><strong>命令格式</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">gzip [文件]<br></code></pre></td></tr></table></figure>\n\n<p><strong>命令描述</strong></p>\n<p><code>gzip</code>命令 用来压缩文件。gzip是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多处“<code>.gz</code>”扩展名。<code>gzip</code>只能压缩文件，不能压缩文件夹，压缩后原文件会被删除</p>\n<p><code>gzip</code>是在Linux系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。gzip不仅可以用来压缩大的、较少使用的文件以节省磁盘空间，还可以和tar命令一起构成Linux操作系统中比较流行的压缩文件格式。据统计，gzip命令对文本文件有60%～70%的压缩率。减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。</p>\n<p><strong>示例</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 压缩文件</span><br>$ gzip a.txt<br><span class=\"hljs-comment\"># 查看压缩后的文件，源文件被删除</span><br>$ <span class=\"hljs-built_in\">ls</span><br>a.txt.gz<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"gunzip-解压\"><a href=\"#gunzip-解压\" class=\"headerlink\" title=\"gunzip 解压\"></a>gunzip 解压</h2><p><strong>命令格式</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">gzip [文件]<br></code></pre></td></tr></table></figure>\n\n<p><strong>命令描述</strong></p>\n<p><code>gunzip</code>命令用来解压缩文件。gunzip是个使用广泛的解压缩程序，它用于解开被gzip压缩过的文件，这些压缩文件预设最后的扩展名为<code>.gz</code>。</p>\n<p><strong>示例</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 解压文件，解压后压缩文件被删除</span><br>$ gunzip a.txt.gz<br>$ <span class=\"hljs-built_in\">ls</span><br>a.txt <br></code></pre></td></tr></table></figure>\n\n<h1 id=\"Bzip2\"><a href=\"#Bzip2\" class=\"headerlink\" title=\"Bzip2\"></a>Bzip2</h1><h2 id=\"bzip2-1\"><a href=\"#bzip2-1\" class=\"headerlink\" title=\"bzip2\"></a>bzip2</h2><p><strong>命令格式</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">bzip2 [选项] [文件]<br></code></pre></td></tr></table></figure>\n\n<p><strong>命令描述</strong></p>\n<ul>\n<li>bzip2命令用于压缩“<code>.bz2</code>”格式的压缩包，是<code>gzip</code>的升级版本，可以保留原文件；</li>\n<li>bzip2的压缩比比较高，可用于压缩较大文件的压缩；</li>\n<li>bzip2也是只对文件进行压缩，如果相对目录进行压缩的话，可以配合 <code>tar</code>命令使用，使用 <code>tar -jcvf</code> 文件名 完成打包压缩。</li>\n</ul>\n<p><strong>选项</strong></p>\n<p>-k（keep）：保留原文件（不删除原文件）</p>\n<p><strong>示例</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># bzip2 压缩文件</span><br>$ bzip2 -k a.txt<br>$ <span class=\"hljs-built_in\">ls</span><br>a.txt  a.txt.bz2<br><br><span class=\"hljs-comment\"># 配合使用tar 命令，完成打包压缩</span><br>$ <span class=\"hljs-built_in\">mkdir</span> music<br>$ tar -jcvf music.tar.bz2 music/<br>$ <span class=\"hljs-built_in\">ls</span><br>music  music.tar.bz2<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"bunzip2-解压\"><a href=\"#bunzip2-解压\" class=\"headerlink\" title=\"bunzip2 解压\"></a>bunzip2 解压</h2><p><strong>命令格式</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">bunzip2 [选项] [文件]<br></code></pre></td></tr></table></figure>\n\n<p><strong>命令描述</strong></p>\n<ul>\n<li>解压缩“<code>.bz2</code>”格式的压缩文件；</li>\n<li>gunzip的升级版，可以使用<code>-k</code>保留原文件；</li>\n<li>可以配合使用tar命令，完成解压缩解包： <code>tar -jxvf 文件名</code></li>\n</ul>\n<p><strong>选项</strong></p>\n<p>-k（keep）：保留原文件（不删除原文件）</p>\n<p><strong>示例</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">ls</span><br>a.txt.bz2  music.tar.bz2<br><br><span class=\"hljs-comment\"># 解压缩文件</span><br>$ bunzip2 -k a.txt.bz2<br>$ <span class=\"hljs-built_in\">ls</span><br>a.txt  a.txt.bz2  music.tar.bz2<br><br><span class=\"hljs-comment\"># 使用tar完成解压解包</span><br>$ tar -jxvf music.tar.bz2<br>$ <span class=\"hljs-built_in\">ls</span><br>a.txt  a.txt.bz2  music  music.tar.bz2<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"tar-1\"><a href=\"#tar-1\" class=\"headerlink\" title=\"tar\"></a>tar</h1><h2 id=\"tar-2\"><a href=\"#tar-2\" class=\"headerlink\" title=\"tar\"></a>tar</h2><p><strong>命令格式</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs text\">tar [选项] [压缩后文件名] [目录]<br></code></pre></td></tr></table></figure>\n\n<p><strong>命令描述</strong></p>\n<p>打包目录，将目录打包成一个文件，同时可以压缩，压缩后的拓展名为<code>.tar.gz</code>，这个拓展名在下载Linux相关安装包时很常见。</p>\n<p>使用<code>tar</code>命令时，如果想要打包并压缩一个目录，可以有两种方法进行：</p>\n<ol>\n<li>先利用tar命令打包目录为一个文件，然后使用gzip压缩</li>\n<li>直接利用tar命令打包并压缩 (简单方便，推荐使用)</li>\n</ol>\n<p>解压时也有两种方式：</p>\n<ol>\n<li>先使用gunzip解压缩，再使用tar解包</li>\n<li>直接利用tar命令解压缩并解包 (简单方便，推荐使用)</li>\n</ol>\n<p><strong>选项</strong></p>\n<ul>\n<li>-c：打包(将所有文件变成一个文件 Create  a new archive)</li>\n<li>-x：解包</li>\n<li>-v：显示详细信息</li>\n<li>-f：指定文件名</li>\n<li>-z：打包同时压缩&#x2F;解压缩  ，gzip压缩</li>\n<li>-j：生成压缩文件 ，bzip2压缩</li>\n</ul>\n<p><strong>示例</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 压缩</span><br>tar -zcvf movie2.tar.gz movie<br><span class=\"hljs-comment\"># 解压</span><br>tar -zxvf movie2.tar.gz<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 1、2为    打包压缩    的两种方法</span><br><span class=\"hljs-comment\"># 1. 使用 tar -cvf 打包，然后使用gzip压缩</span><br>$ tar -cvf movie.tar movie/<br>$ <span class=\"hljs-built_in\">ls</span><br>movie  movie.tar<br>$ gzip movie.tar<br>$ <span class=\"hljs-built_in\">ls</span><br>movie  movie.tar.gz<br><br><span class=\"hljs-comment\"># 2. 使用 tar -zcvf 打包并压缩</span><br>$ tar -zcvf movie2.tar.gz movie<br>$ <span class=\"hljs-built_in\">ls</span><br>movie  movie2.tar.gz<br><br><span class=\"hljs-comment\"># 3、4为     解压缩并解包     的两种方法</span><br><span class=\"hljs-comment\"># 3. 先使用gunzip解压缩，然后 tar -xvf解包</span><br>$ gunzip movie.tar.gz<br>$ <span class=\"hljs-built_in\">ls</span><br>movie2.tar.gz  movie.tar<br>$ tar -xvf movie.tar<br>movie/<br>$ <span class=\"hljs-built_in\">ls</span><br>movie  movie2.tar.gz  movie.tar<br><br><span class=\"hljs-comment\"># 4. 使用tar -zxvf 解压缩并解包</span><br>$ tar -zxvf movie2.tar.gz<br>$ <span class=\"hljs-built_in\">ls</span><br>movie  movie2.tar.gz  movie.tar<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://techviewleo.com/compress-uncompress-files-tar-gzip-bzip2-xz-linux/\">LPIC 101 – Compress and Uncompress Files Using tar, gzip, bzip2 and xz on Linux</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/List_of_archive_formats#Comparison\">List of archive formats</a></p>\n",
            "tags": [
                "zip",
                "gzip",
                "bzip",
                "tar"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/45a589a3/",
            "url": "https://www.oikiou.top/2022/45a589a3/",
            "title": "MD5",
            "date_published": "2022-09-14T14:57:15.000Z",
            "content_html": "<h1 id=\"MD5\"><a href=\"#MD5\" class=\"headerlink\" title=\"MD5\"></a>MD5</h1><p><strong>MD5消息摘要算法</strong>（英语：MD5 Message-Digest Algorithm），一种被广泛使用的<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A2%BC%E9%9B%9C%E6%B9%8A%E5%87%BD%E6%95%B8\">密码散列函数</a>，可以产生出一个128位（16个字符(BYTES)）的散列值（hash value），用于确保信息传输完整一致。将<a href=\"https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE\">数据</a>（如一段文字）运算变为另一固定长度值，是散列算法的基础原理。</p>\n<p><strong>参考</strong></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/121492822\">MD5破解的几种方法</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/MD5\">Wiki MD5</a></p>\n<h1 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h1><ul>\n<li><p>不可逆向的</p>\n<blockquote>\n<p>  我们没办法把MD5码还原对应的原文。道理很简单，任意长度的数据经过MD5处理后，所包含的信息量已经大大减少，那是不可能再次还原成为原始信息的。</p>\n</blockquote>\n</li>\n<li><p>原文中作一个小变化其散列也会发生巨大的变化</p>\n<blockquote>\n  <figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\"><span class=\"hljs-symbol\">MD5</span>(<span class=\"hljs-string\">&quot;The quick brown fox jumps over the lazy dog&quot;</span>)<br>= <span class=\"hljs-number\">9</span>e107d9d372bb6826bd81d3542a419d6<br></code></pre></td></tr></table></figure>\n\n<p>  比如用c取代d, 其MD5值发生了巨大的变化</p>\n  <figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\"><span class=\"hljs-symbol\">MD5</span>(<span class=\"hljs-string\">&quot;The quick brown fox jumps over the lazy cog&quot;</span>)<br>= <span class=\"hljs-number\">1055</span>d3e698d289f2af8663725127bd4b<br></code></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>已被破解</p>\n<blockquote>\n<p>  通俗点讲就是，可以找到一个A和一个B，使hash（A）&#x3D;hash（B），而真正有用的是给定一个A能得到B，使hash（A）&#x3D;hash（B），而王小云能做到这样</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><p>MD5 摘要已在<a href=\"https://en.wikipedia.org/wiki/Software\">软件</a>世界中广泛使用，以确保传输的文件已完好无损地到达。例如，文件服务器通常会为文件提供预先计算的 MD5（称为<a href=\"https://en.wikipedia.org/wiki/Md5sum\">md5sum</a>）<a href=\"https://en.wikipedia.org/wiki/Checksum\">校验和</a>，以便用户可以将下载文件的校验和与其进行比较。</p>\n<p><img src=\"/2022/45a589a3/350px-CPT-Hashing-File-Transmission.png\" alt=\"350px-CPT-Hashing-File-Transmission.svg\"></p>\n<p>由于很容易产生 MD5 冲突，因此创建文件的人可能会创建具有相同校验和的第二个文件，因此该技术无法防止某些形式的恶意篡改。</p>\n<p>在某些情况下，校验和是不可信的（例如，如果它是通过与下载文件相同的渠道获得的，他人可能修改了文件后再次修改了MD5，使得MD5并不可信），在这种情况下，MD5 只能提供错误检查功能：“它会识别损坏或不完整的下载，这变成下载较大文件时更有可能。”</p>\n<h1 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h1><h2 id=\"穷举法-amp-字典法\"><a href=\"#穷举法-amp-字典法\" class=\"headerlink\" title=\"穷举法&amp;字典法\"></a>穷举法&amp;字典法</h2><p><strong>穷举法非常简单，就是不停地尝试各种字符的排列组合，看哪一个组合的MD5码能对上。</strong>可惜缺点是太耗费时间了。我们举个栗子，假设我们要破解一个6位大小写字母和数字混合的密码，那么一共有(26+26+10)<sup>6</sup> 种组合。这个数的大小超过500亿。</p>\n<p>既然计算如此费时，能不能考虑<strong>把计算结果以映射表的形式存放起来，一个萝卜一个坑</strong>，一个原文对应着一个MD5码呢？可以呀！这就是传说中的“字典法”。将已知的MD5码查表，直接反查出原文。<strong>字典法体现了算法设计的“以空间换时间”的思想。</strong>缺点是比较耗费空间。不过现在硬盘的价格变得白菜价了，空间开销不算什么。</p>\n<p><a href=\"https://www.cmd5.com/password.aspx\">CMD5 反查网站</a></p>\n<p><a href=\"https://www.somd5.com/\">SMD5 反查网站</a></p>\n<h2 id=\"哈希链表-amp-彩虹表法\"><a href=\"#哈希链表-amp-彩虹表法\" class=\"headerlink\" title=\"哈希链表&amp;彩虹表法\"></a>哈希链表&amp;彩虹表法</h2><blockquote>\n<p>  如果说穷举法太耗费时间，字典法太耗费存储空间的话，我们能不能考虑在时间消耗和空间消耗之间折中呢？我们可以考虑用链表将一系列有意义的原文和MD5码串起来。</p>\n<p>  要构造这样的链表，我们需要两个函数：哈希函数H(x)和衰减函数（reduction function）R(x)。哈希函数可以是MD5，也可以是其他的消息摘要算法。H(x)的值域是R(x)的定义域，R(x)的值域是H(x)的定义域。<strong>R(x)不是H(x)的反函数。</strong></p>\n<p>  将一个原文不停地使用H(x)和R(x)交替进行运算k次，再将原文本身和运算结果以链表的形式串接起来，就可以得到结点个数为2k+1的链表。实际存放的时候只存放首端和末端两个原文即可。<strong>这种链表叫做“哈希链表”，体现了算法设计的“时空权衡”（Space and Time Tradeoffs）。</strong></p>\n<p>  举个栗子，假设原文s&#x3D;abcabc，经过2次交替运算，得到以下的链表：</p>\n<p>  abcabc-&gt;H(x)-&gt;3C8B0D7A-&gt;R(x)-&gt;eopmca-&gt;H(x)-&gt;7E9F216C-&gt;R(x)-&gt;rapper</p>\n<p>  以上数据均为举例编造的，仅为说明原理使用。那我们存放这个链表的时候，只需要记录abcabc和rapper两个原文即可。</p>\n<p>  假设我们要破解的摘要值（哈希链表的H(x)不一定是MD5算法，这里用更准确的说法代替MD5码）是7E9F216C，经过R(x)运算得到rapper，说明我们要寻找的原文就在以rapper为末端的哈希链表中。从首端开始经过多次运算，我们发现eopmca的摘要值就是7E9F216C。于是就反查出7E9F216C对应的原文是eopmca。</p>\n<p>  <strong>如果在生成哈希链表的时候依次使用多个不一样的R(x)，此时的哈希链表就是“彩虹表”。</strong></p>\n<p>  这里有已经计算好的彩虹表：<a href=\"https://link.zhihu.com/?target=http://project-rainbowcrack.com/table.htm\">http://project-rainbowcrack.com</a></p>\n</blockquote>\n<h2 id=\"差分攻击\"><a href=\"#差分攻击\" class=\"headerlink\" title=\"差分攻击\"></a>差分攻击</h2><p>上面介绍的穷举法、字典法和彩虹表法都是暴力破解，适用于任何的消息摘要算法。</p>\n<p>真正意义上MD5算法的破解，是2004年山东大学王小云教授提出的MD5碰撞方法。她所用到的方法正是差分攻击。</p>\n<p><a href=\"https://www.sohu.com/a/501560600_121106869\">她是这样的“中国密码女神”！</a> </p>\n",
            "tags": [
                "md5"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/471570a6/",
            "url": "https://www.oikiou.top/2022/471570a6/",
            "title": "SpaceDesk手机用作电脑屏幕",
            "date_published": "2022-08-29T14:57:15.000Z",
            "content_html": "<h1 id=\"SpaceDesk\"><a href=\"#SpaceDesk\" class=\"headerlink\" title=\"SpaceDesk\"></a>SpaceDesk</h1><p>在windows主机上虚拟出一块屏幕, 通过网络传输到其他带屏设备上.</p>\n<ul>\n<li>投屏到手机支持触摸</li>\n</ul>\n<h1 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h1><p><a href=\"https://www.spacedesk.net/\">https://www.spacedesk.net/</a></p>\n<h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><h2 id=\"软件没有验证功能-不安全\"><a href=\"#软件没有验证功能-不安全\" class=\"headerlink\" title=\"软件没有验证功能(不安全)\"></a>软件没有验证功能(不安全)</h2><p>有一次在公司用手机客户端, 直接连接上了公司其他同事的电脑屏幕.</p>\n<p>公司的网络ip是dhcp的无法固定, 而且网络质量并不好, 所以我选择电脑开热点 手机连电脑热点.</p>\n<p>防火墙加规则,只允许热点网段的IP入站.</p>\n<p><img src=\"/2022/471570a6/image-20220811195054454.png\" alt=\"image-20220811195054454\"></p>\n<p><img src=\"/2022/471570a6/image-20220811194925793.png\" alt=\"image-20220811194925793\"></p>\n",
            "tags": [
                "windows",
                "spacedesk",
                "投屏"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/fd90dc4c/",
            "url": "https://www.oikiou.top/2022/fd90dc4c/",
            "title": "使用Jlink 烧写SPI Flash存储芯片",
            "date_published": "2022-08-26T15:23:05.000Z",
            "content_html": "<h1 id=\"使用Jlink-烧写SPI-Flash存储芯片\"><a href=\"#使用Jlink-烧写SPI-Flash存储芯片\" class=\"headerlink\" title=\"使用Jlink 烧写SPI Flash存储芯片\"></a>使用Jlink 烧写SPI Flash存储芯片</h1><p>参考:</p>\n<p><a href=\"https://www.segger.com/products/debug-probes/j-link/tools/j-flash-spi/\">https://www.segger.com/products/debug-probes/j-link/tools/j-flash-spi/</a></p>\n<h1 id=\"硬件连接\"><a href=\"#硬件连接\" class=\"headerlink\" title=\"硬件连接\"></a>硬件连接</h1><h2 id=\"SPI-amp-Single\"><a href=\"#SPI-amp-Single\" class=\"headerlink\" title=\"SPI &amp; Single\"></a>SPI &amp; Single</h2><p><img src=\"/2022/fd90dc4c/formatpng.png\" alt=\"img\"></p>\n<p><img src=\"/2022/fd90dc4c/pinout-spi-20-pin.gif\" alt=\"引出线 spi 20 针\"></p>\n<h2 id=\"QSPI-amp-Quad\"><a href=\"#QSPI-amp-Quad\" class=\"headerlink\" title=\"QSPI &amp; Quad\"></a>QSPI &amp; Quad</h2><p><img src=\"/2022/fd90dc4c/pinout-qspi-20-pin.png\" alt=\"img\"></p>\n<blockquote>\n<p>  注意:</p>\n<p>  这里要注意的一点，正版的Jlink仿真器1脚是输入引脚，是外部提供参考电平的，但由于现在大部分的JLink仿真器都是学习(dao)版的，1脚不是输入，而是3.3v的输出(并不确定也有可能是5V的, 盗版的Jlink真的是什么乱七八糟的都有)，所以正常情况下可以直接用这个管教来给SPI Flash供电。</p>\n<p>  <strong>关于 nRESET 的注意事项</strong>：如果有另一个设备&#x2F;外围设备也控制 SPI 闪存（例如闪存连接到的 CPU），则 J-Link 的 nRESET 应连接到目标系统的复位或 CPU 的复位引脚确保 J-Link 可以在对 SPI 闪存进行编程时保持 CPU 处于复位状态。</p>\n<p>  <strong>一开始没注意到这个功能, 现在回过头来再看, 有这个功能之后烧芯片简直不要太简单, 根本不需要拆芯片了, 直接用芯片夹就可以烧录了.</strong></p>\n</blockquote>\n<h1 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h1><p>安装Jlink套件的时候会自带<code>JFlashSPI.exe</code>在开始菜单名称应该类似<code>J-Flash SPI</code>, 这是J-Flash的GUI程序,还有一个命令行的不多做介绍.</p>\n<blockquote>\n<p>  如果没有找到自带的, 请更新Jlink套件, 旧版确实不带这个东西.</p>\n<p>  Segger Jlink套件下载链接 <a href=\"https://www.segger.com/downloads/jlink/\">https://www.segger.com/downloads/jlink/</a></p>\n</blockquote>\n<p><img src=\"/2022/fd90dc4c/image-20220826224742256.png\" alt=\"image-20220826224742256\"></p>\n<p>点击<code>target -&gt; connet</code>连接到Jlink, 它会自动检测大部分SPI闪存, </p>\n<blockquote>\n<p>  有时候识别的具体型号并不准确, 但是这不重要他们参数类似, 可以正常完成编程的工作.</p>\n<p>  Jlink支持的SPI Flash型号可以在<a href=\"https://www.segger.com/products/debug-probes/j-link/technology/cpus-and-devices/supported-spi-flashes/\">点击这里</a>找到.</p>\n</blockquote>\n<p>点击<code>file -&gt; open data file </code>我们打开要烧录的文件.</p>\n<blockquote>\n<p>  bin 文件需要设定起始地址</p>\n<p>  hex文件自带了位置信息</p>\n</blockquote>\n<p>点击<code>target -&gt; auto</code>可以自动将文件烧录进去 还会进行读回校验.</p>\n<p>至此烧录完成.</p>\n<p><strong>Tips:</strong></p>\n<blockquote>\n<p>  点击<code>target -&gt; read back</code> 可以将SPI Flash内的数据读取出来<br>  点击<code>options -&gt; settings -&gt; setup -&gt; interface speed</code>可以修改时钟速度. </p>\n</blockquote>\n<p><strong>Other:</strong></p>\n<p>Jlink真的是超级牛的工具, J-Scope, RTT这些都很好用, 还有很多高级功能我还没用上.<br>我前面有写过RTT的笔记, 在调试一个项目的时候没法使用串口, 当时就是用RTT搭建了一个log平台.</p>\n<h1 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h1><h2 id=\"winbood-W25Q128封装\"><a href=\"#winbood-W25Q128封装\" class=\"headerlink\" title=\"winbood W25Q128封装\"></a>winbood W25Q128封装</h2><p><img src=\"/2022/fd90dc4c/image-20220826104542006.png\" alt=\"image-20220826104542006\"></p>\n<p><img src=\"/2022/fd90dc4c/20210622091839750557.png\" alt=\"img\"></p>\n",
            "tags": [
                "spi",
                "j-link",
                "flash",
                "j-tag",
                "jlink"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/c65e1067/",
            "url": "https://www.oikiou.top/2022/c65e1067/",
            "title": "Tags Label Category",
            "date_published": "2022-08-25T14:57:15.000Z",
            "content_html": "<p>知乎  <a href=\"https://www.zhihu.com/people/songvision\">千鸟</a></p>\n<blockquote>\n<p>  这问题要分两个层面来解读：</p>\n<p>  <strong>首先是Tag与Category的区别。</strong>Category往往限制在一个维度里，当树状结构复杂到不可调和时，出现瓶颈是迟早的事。Category的问题在于，既不能完全满足用户需求，也不能完全表达创建者对内容属性的认知。而Tag反之都成立，完全互补。</p>\n<p>  <strong>其次是Label与Tag的区别。</strong>于对内容的概括出现偏差，但显然这种问题不是tag，在内容组织范畴那应该是什么？答案就是label，除产品描述，其应用范畴还涉及功能名称、模块名称、导航名称、引导文字等等场景。我认为tag与label之间有三个显著差异：</p>\n<ol>\n<li>label是本身的，tag是附加的；</li>\n<li>label强调是一种标志，tag强调是一种记号；</li>\n<li>label标明信息之间的归属，tag区别信息之间的差异。</li>\n</ol>\n</blockquote>\n<p>知乎 郑讯</p>\n<blockquote>\n<p>  Tag，标签，一般包含一段内容的属性，可以是分类，可以是话题，也可以是作者，地理信息等。</p>\n<p>  Label，标记，是网页框架中一个区域的功能概括。比如知乎首页上的“浏览”、“问题”、“通知”就是label。选择不同的标记，相应区域的功能就会发生变化。</p>\n<p>  category，分类，可以理解为种属概念。一段内容有且只有一个种属的分类。和Tag不同的是一段内容可以有多个tag，并且tag是未预先设定的，一段内容可以有多个Tag，也可以没有Tag。但caterory在一个分类标准下只有一个。</p>\n</blockquote>\n<p>知乎 李楠</p>\n<blockquote>\n<p>  <strong>Category</strong></p>\n<p>  Category 是非常理想化和一根筋的分类方式。图书馆这种死板到头的地方用的多。但是他们也遇到了问题：“苏菲的世界”到底是“哲学”，还是“文学”？</p>\n<p>  物理世界无力从根本上解决这种问题（但似乎不少讨论）。问过我们学校的图书馆，似乎他们方式还比较靠谱：<strong>买两本，两处放。</strong></p>\n<p>  分类对象数字化之后， Category 的影响还在（早期的门户找点跨界的东西就很悲剧）。直到 Web2.0 ， Tag 竟然才开始流行。</p>\n<p>  <strong>Tag</strong></p>\n<p>  Tag 是更好的分类方式的原因是：</p>\n<p>  1</p>\n<p>  “类别”本来就不应该事先定义：人不是上帝。</p>\n<p>  从一个个具体对象的“属性”中，总结出“类别”是最自然的模式。也是“人”可以做到的事情。</p>\n<p>  2</p>\n<p>  “属性”本来就应该可以自然的表现为多个。</p>\n<p>  苏菲的世界终于可以自然的打上“哲学”和“文学”的 Tag 了，或者再加个“少儿读物”。这种思考方式比 Category 优雅太多。</p>\n<p>  Tag 最终普及，背后恐怕有<a href=\"https://www.zhihu.com/search?q=%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:12226710%7D\">软件工程</a>上 OO 普及（面向对象）的因素。<strong>“面向对象”不仅仅是的程序构建方式，更是认识世界的方法论的进步。</strong></p>\n<p>  “属性”跟随“对象”，比“对象”属于“类别”更自然，不机械。 。</p>\n<p>  <strong>Tag 的改进</strong></p>\n<p>  Tag 本身也可以看作“对象”。</p>\n<p>  那么就有针对 Tag 的操作，比如“搜索”，“排序”，“关联对象”。也有 Tag 本身的属性，比如“使用次数”，“关注人数”等等。</p>\n<p>  如何能在使用 Tag 的系统中，根据这些数据，计算出最适合的对象，就要靠算法的优化和运营的调整了。</p>\n</blockquote>\n<p>知乎 <a href=\"https://www.zhihu.com/people/zheng-wei-42-9\">榆木脑袋</a></p>\n<blockquote>\n<p>  Catagory是逻辑清晰的。Tag是随意自由的。在看到一个信息的时候我们需要自由捕获自己头脑中的闪光。在重新审视或再利用我们收集的信息时，就需要清晰的逻辑条理。</p>\n<p>  以文件管理为例：</p>\n<p>  在标记Tag时需求有二：一是能够方便增加新的Tag，二是能够很方便的看到已有的Tag，并能同时把已有标签赋予当前信息。</p>\n<p>  在查找文件时个人觉得需要有的功能是：一是有固定的几个入口，也就是根目录；二是可以增加根节点；三是根目录可以指定某几个Tag，也可以不是；三如果根目录不是Tag，需要定义关联到此根目录（分类）下的Tag；四（重点功能）根目录下不直接列出信息或文件（时间长了，某一Tag下文件会相当多），而是列出关联Tag的所有文件的其它Tag，显示为子目录，并标识出此子目录中的文件数量。五（作为管理功能）此时可以定义哪些Tag不在此根目录下出现。六设置某个Tag或某类Tag(文件数量大过一个数量)下仍不列出文件而是继续列出Tag；七子目录（Tag）下，上级目录Tag不再出现。</p>\n<p>  我个人非常偏好使用树形目录结构，但苦恼于文件的多重分类和文件进行多重分类时的繁琐。经过多方搜索只找到三个比较符合的软件，一个是PinKM，一个是蓝码动力图片管理软件，一个是国外的Tabbles。但都因标签管理和整理的繁琐而放弃。</p>\n</blockquote>\n<p><strong>个人理解</strong></p>\n<ul>\n<li>Catagory 是属于严格的分类方法, 一个东西应当只属于一个Catagory内, 而且它是有层级关系的</li>\n<li>Tags 是可有可无的, 一个东西可以有很多的Tags, 它是无层级关系的,</li>\n</ul>\n",
            "tags": [
                "tags",
                "label",
                "category"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/f96c3c41/",
            "url": "https://www.oikiou.top/2022/f96c3c41/",
            "title": "静态网页 静态博客",
            "date_published": "2022-08-21T14:57:15.000Z",
            "content_html": "<h1 id=\"静态网页\"><a href=\"#静态网页\" class=\"headerlink\" title=\"静态网页\"></a>静态网页</h1><h1 id=\"静态网页生成器\"><a href=\"#静态网页生成器\" class=\"headerlink\" title=\"静态网页生成器\"></a>静态网页生成器</h1><p><a href=\"https://jekyllrb.com/\">Jekyll</a>（由 Github 构建的用于为其 Github 页面提供支持的 Ruby 生成器）、</p>\n<p><a href=\"https://gohugo.io/\">Hugo</a>（构建在 Go 编程之上的极快静态生成器）语言）和</p>\n<p><a href=\"https://hexo.io/\">Hexo</a>（基于 Node.js 的快速网站生成器）。</p>\n<p><strong>参考</strong></p>\n<p><a href=\"https://www.techiediaries.com/jekyll-hugo-hexo/\">How to Choose the Right Static Generator: Jekyll vs. Hugo vs. Hexo</a></p>\n<p><a href=\"https://stackshare.io/stackups/hexo-vs-hugo-vs-jekyll\">StackShare</a></p>\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>TBD</p>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>TBD</p>\n<h2 id=\"Hugo\"><a href=\"#Hugo\" class=\"headerlink\" title=\"Hugo\"></a>Hugo</h2><p>TBD</p>\n<h1 id=\"Hexo-1\"><a href=\"#Hexo-1\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h1><h2 id=\"Hexo-部署\"><a href=\"#Hexo-部署\" class=\"headerlink\" title=\"Hexo 部署\"></a>Hexo 部署</h2><p><a href=\"https://hexo.io/zh-cn/docs/\">HEXO文档_参考链接</a></p>\n<p><strong>要求:</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)<br>Git<br></code></pre></td></tr></table></figure>\n\n<p><strong>部署:</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install hexo-cli -g<br>hexo init blog<br><span class=\"hljs-built_in\">cd</span> blog<br>npm install<br>hexo server<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo-CMD\"><a href=\"#Hexo-CMD\" class=\"headerlink\" title=\"Hexo CMD\"></a>Hexo CMD</h2><h3 id=\"Init-初始化\"><a href=\"#Init-初始化\" class=\"headerlink\" title=\"Init 初始化\"></a>Init 初始化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo init [folder]<br></code></pre></td></tr></table></figure>\n\n<p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p>\n<h3 id=\"new-新建\"><a href=\"#new-新建\" class=\"headerlink\" title=\"new 新建\"></a>new 新建</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo new [layout] &lt;title&gt;<br>hexo new <span class=\"hljs-string\">&quot;post title with whitespace&quot;</span><br>hexo new page --path about/me <span class=\"hljs-string\">&quot;About me&quot;</span><br>hexo new page -p     about/me <span class=\"hljs-string\">&quot;About me&quot;</span><br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>-p</code>, <code>--path</code></td>\n<td align=\"left\">自定义新文章的路径</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-r</code>, <code>--replace</code></td>\n<td align=\"left\">如果存在同名文章，将其替换</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-s</code>, <code>--slug</code></td>\n<td align=\"left\">文章的 Slug，作为新文章的文件名和发布后的 URL</td>\n</tr>\n</tbody></table>\n<h3 id=\"generate-生成\"><a href=\"#generate-生成\" class=\"headerlink\" title=\"generate 生成\"></a>generate 生成</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 生成静态文件。</span><br>hexo generate<br><span class=\"hljs-comment\"># 该命令可以简写为</span><br>hexo g<br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th></th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-d</td>\n<td>–deploy</td>\n<td align=\"left\"><strong>文件生成后立即部署网站</strong></td>\n</tr>\n<tr>\n<td align=\"left\">-w</td>\n<td>–watch</td>\n<td align=\"left\"><strong>监视文件变动</strong></td>\n</tr>\n<tr>\n<td align=\"left\">-b</td>\n<td>–bail</td>\n<td align=\"left\">生成过程中如果发生任何未处理的异常则抛出异常</td>\n</tr>\n<tr>\n<td align=\"left\">-f</td>\n<td>–force</td>\n<td align=\"left\">强制重新生成文件 Hexo 引入了差分机制，<br>如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。<br/>使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>\n</tr>\n<tr>\n<td align=\"left\">-c</td>\n<td>–concurrency</td>\n<td align=\"left\">最大同时生成文件的数量，默认无限制</td>\n</tr>\n</tbody></table>\n<h3 id=\"publish-草稿\"><a href=\"#publish-草稿\" class=\"headerlink\" title=\"publish 草稿\"></a>publish 草稿</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">hexo publish [layout] <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">filename</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>发表草稿。</p>\n<h3 id=\"server-服务器\"><a href=\"#server-服务器\" class=\"headerlink\" title=\"server 服务器\"></a>server 服务器</h3><p>在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs axapta\">hexo <span class=\"hljs-keyword\">server</span><br>hexo s<br></code></pre></td></tr></table></figure>\n\n<p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>-p</code>, <code>--port</code></td>\n<td align=\"left\">重设端口</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-s</code>, <code>--static</code></td>\n<td align=\"left\">只使用静态文件(不会更新)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-l</code>, <code>--log</code></td>\n<td align=\"left\">启动日记记录，使用覆盖记录格式</td>\n</tr>\n<tr>\n<td align=\"left\"><code>-i</code></td>\n<td align=\"left\"><code>hexo server -i 192.168.1.1</code> 指定监听的IP</td>\n</tr>\n</tbody></table>\n<h3 id=\"deploy-部署\"><a href=\"#deploy-部署\" class=\"headerlink\" title=\"deploy 部署\"></a>deploy 部署</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-comment\"># 部署网站。</span><br>hexo <span class=\"hljs-keyword\">deploy</span><br><span class=\"hljs-comment\"># 该命令可以简写为：</span><br>hexo d<br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>-g</code>, <code>--generate</code></td>\n<td align=\"left\">部署之前预先生成静态文件</td>\n</tr>\n</tbody></table>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\">hexo render &lt;file1&gt; [file2] ...<br></code></pre></td></tr></table></figure>\n\n<p>渲染文件。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>-o</code>, <code>--output</code></td>\n<td align=\"left\">设置输出路径</td>\n</tr>\n</tbody></table>\n<h3 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h3><figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elm\"><span class=\"hljs-title\">hexo</span> migrate &lt;<span class=\"hljs-keyword\">type</span>&gt;<br></code></pre></td></tr></table></figure>\n\n<p>从其他博客系统 <a href=\"https://hexo.io/zh-cn/docs/migration\">迁移内容</a>。</p>\n<h3 id=\"clean-清理\"><a href=\"#clean-清理\" class=\"headerlink\" title=\"clean 清理\"></a>clean 清理</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crystal\"><span class=\"hljs-variable\">$ </span>hexo clean<br></code></pre></td></tr></table></figure>\n\n<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p>\n<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<h3 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h3><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crystal\"><span class=\"hljs-variable\">$ </span>hexo list &lt;<span class=\"hljs-keyword\">type</span>&gt;<br></code></pre></td></tr></table></figure>\n\n<p>列出网站资料。</p>\n<h2 id=\"Hexo-Config-yml\"><a href=\"#Hexo-Config-yml\" class=\"headerlink\" title=\"Hexo _Config.yml\"></a>Hexo _Config.yml</h2><blockquote>\n<h3 id=\"Home-page-setting\"><a href=\"#Home-page-setting\" class=\"headerlink\" title=\"Home page setting\"></a>Home page setting</h3><p>  <code>index_generator.order_by</code>  文章的顺序</p>\n<ul>\n<li><code>-date</code> 默认情况下按日期降序排序(从新到旧)。</li>\n<li><code>-update</code> 按更新时间排序(<code>-</code> &#x3D; 从新到旧)。</li>\n</ul>\n</blockquote>\n<h1 id=\"Hexo-Theme\"><a href=\"#Hexo-Theme\" class=\"headerlink\" title=\"Hexo Theme\"></a>Hexo Theme</h1><p>我是直接在github搜索 <code>hexo theme</code>看到了几个 star 比较多而且比较活跃的 repository </p>\n<ul>\n<li><p><strong><a href=\"https://github.com/ppoffice/hexo-theme-icarus\">icarus</a></strong> 5.5K star</p>\n<p><img src=\"/2022/f96c3c41/68747470733a2f2f70706f66666963652e6769746875622e696f2f6865786f2d7468656d652d6963617275732f67616c6c6572792f707265766965772e706e673f31.png\" alt=\"img\"></p>\n</li>\n<li><p><strong><a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">fluid</a></strong> 4.8K star</p>\n<p><img src=\"/2022/f96c3c41/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f666c7569642d6465762f737461746963406d61737465722f6865786f2d7468656d652d666c7569642f73637265656e73686f74732f696e6465782e706e67.png\" alt=\"ScreenShot\"></p>\n</li>\n<li><p><a href=\"https://github.com/blinkfox/hexo-theme-matery\">matery</a>(blinkfox) 4.5K star</p>\n<p><img src=\"/2022/f96c3c41/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d312e706e67.png\" alt=\"首页\"></p>\n<p><img src=\"/2022/f96c3c41/687474703a2f2f7374617469632e626c696e6b666f782e636f6d2f6d61746572792d32303138313230322d332e706e67.png\" alt=\"首页文章列表\"></p>\n</li>\n<li><p><strong><a href=\"https://github.com/jerryc127/hexo-theme-butterfly\">butterfly</a></strong> 4.3K star</p>\n<p><img src=\"/2022/f96c3c41/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a65727279633132372f43444e406d322f696d672f7468656d652d627574746572666c792d726561646d652e706e67.png\" alt=\"img\"></p>\n</li>\n<li><p><a href=\"https://github.com/volantis-x/hexo-theme-volantis\">volantis</a> 1.5k star</p>\n<p><img src=\"/2022/f96c3c41/68747470733a2f2f692e6c6f6c692e6e65742f323032302f30332f31382f663550516c576973766d397a62674b2e6a7067.jpeg\" alt=\"img\"></p>\n<p><img src=\"/2022/f96c3c41/68747470733a2f2f692e6c6f6c692e6e65742f323032302f30332f31382f585742476639354532743162646e6c2e6a7067.jpeg\" alt=\"img\"></p>\n</li>\n</ul>\n<p>其中 <code>fluid</code> 和 <code>volantis</code> 最对我胃口, 最后选择的 <code>fluid</code>, 后期可能会改成<code>volantis</code>或者<code>icarus</code>试试看, 主要是喜欢简洁些, 又能有一定的观赏性的.</p>\n<h2 id=\"Fluid\"><a href=\"#Fluid\" class=\"headerlink\" title=\"Fluid\"></a>Fluid</h2><p>参考文档</p>\n<p><a href=\"https://hexo.fluid-dev.com/docs/guide/\">https://hexo.fluid-dev.com/docs/guide/</a></p>\n<p>theme 的 Github</p>\n<p><a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">https://github.com/fluid-dev/hexo-theme-fluid</a></p>\n<h3 id=\"自带的内置图标库\"><a href=\"#自带的内置图标库\" class=\"headerlink\" title=\"自带的内置图标库\"></a>自带的内置图标库</h3><p><a href=\"https://hexo.fluid-dev.com/docs/icon/#%E5%86%85%E7%BD%AE%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87\">内置社交图标</a> </p>\n<p><img src=\"/2022/f96c3c41/iconfont.f8319467.png\" alt=\"内置图标\"></p>\n<h1 id=\"Hexo-Note\"><a href=\"#Hexo-Note\" class=\"headerlink\" title=\"Hexo Note\"></a>Hexo Note</h1><h2 id=\"Hexo-Permalink简化\"><a href=\"#Hexo-Permalink简化\" class=\"headerlink\" title=\"Hexo Permalink简化\"></a>Hexo Permalink简化</h2><p>参考:</p>\n<p><a href=\"https://blog.csdn.net/Galahadzhou/article/details/105355733\">Hexo Permalink简化</a></p>\n<p>Note:</p>\n<p>使用<code>hexo-abbrlink</code>插件实现</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># install</span><br>npm install hexo-abbrlink --save<br><span class=\"hljs-comment\"># setting edit _config.yml</span><br>permalink: posts/:abbrlink.html<br>abbrlink:<br>  alg: crc32  <span class=\"hljs-comment\"># 算法：crc16(default) and crc32</span><br>  rep: hex    <span class=\"hljs-comment\"># 进制：dec(default) and hex</span><br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"hexo-图片链接问题\"><a href=\"#hexo-图片链接问题\" class=\"headerlink\" title=\"hexo 图片链接问题\"></a>hexo 图片链接问题</h2><p><strong><code>hexo</code>本地图片显示问题</strong></p>\n<p>使用<code>hexo</code>生成静态资源后,由于<code>url</code>的问题会出现图片加载的问题,现在网上的文章及官方的解决方案大概分为三种:</p>\n<ol>\n<li>将图片放入<code>source/images</code>目录下,每次<code>generate</code>都会生成图片,在使用相对或绝对路径进行引用</li>\n<li>配置<code>hexo</code>的<code>_config.yml</code>文件, 将 <code>post_asset_folder</code> 设置为<code>true</code>, 这样每次new 生成一个文章时都会同步生成一个同名的文件夹,然后设置相对或绝对路径. </li>\n<li>使用<code>hexo</code>官方的解决方案,使用模版变量, <code>&#123;% asset_img slug [title] %&#125; </code> </li>\n<li>!new!. <code>hexo init</code>的时候会自动copy一个插件 <code>hexo-renderer-marked</code> 这个插件可以开启相对路径的支持,但是需要改一些代码</li>\n</ol>\n<p>但是在配置过程中发现这三种方式都多多少少存在一些问题,前两中首页跟内容页会有一个加载失败的问题,而第三种则失去了<code>markdown</code>的意义.</p>\n<p><strong>方法四:</strong></p>\n<p>官方手册上提到过, <a href=\"https://github.com/hexojs/hexo-renderer-marked\">hexo-renderer-marked</a> 3.1.0已经开始支持相对路径了.但是可以看到它支持的路径似乎并不合理, 其他的md阅读器是不能识别这样的路径的.</p>\n<p><img src=\"/2022/f96c3c41/image-20220815153651988.png\" alt=\"image-20220815153651988\"></p>\n<p>参考: <a href=\"https://github.com/hexojs/hexo-renderer-marked/issues/216\">https://github.com/hexojs/hexo-renderer-marked/issues/216</a></p>\n<ol>\n<li><p>修改<code>_config.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">post_asset_folder:</span> <span class=\"hljs-literal\">true</span><br><span class=\"hljs-attr\">marked:</span><br>  <span class=\"hljs-attr\">prependRoot:</span> <span class=\"hljs-literal\">true</span><br>  <span class=\"hljs-attr\">postAsset:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>修改文件<code>node_modules\\hexo-renderer-marked\\lib\\renderer.js</code></p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-regexp\">/^(#|\\/\\/|http(s)?:)/</span>.<span class=\"hljs-title function_\">test</span>(href) &amp;&amp; !relative_link &amp;&amp; prependRoot) &#123;<br>  <span class=\"hljs-keyword\">if</span> (!href.<span class=\"hljs-title function_\">startsWith</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>) &amp;&amp; !href.<span class=\"hljs-title function_\">startsWith</span>(<span class=\"hljs-string\">&#x27;\\\\&#x27;</span>) &amp;&amp; postPath) &#123;<br>    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">PostAsset</span> = hexo.<span class=\"hljs-title function_\">model</span>(<span class=\"hljs-string\">&#x27;PostAsset&#x27;</span>);<br>    <span class=\"hljs-comment\">// findById requires forward slash</span><br>    <span class=\"hljs-comment\">// ***************** Add the following code *******************</span><br>    <span class=\"hljs-keyword\">const</span> fixPostPath = <span class=\"hljs-title function_\">join</span>(postPath, <span class=\"hljs-string\">&#x27;../&#x27;</span>);<br>    <span class=\"hljs-keyword\">const</span> asset = <span class=\"hljs-title class_\">PostAsset</span>.<span class=\"hljs-title function_\">findById</span>(<span class=\"hljs-title function_\">join</span>(fixPostPath, href.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/\\\\/g</span>, <span class=\"hljs-string\">&#x27;/&#x27;</span>)));<br>    <span class=\"hljs-comment\">// const asset = PostAsset.findById(join(postPath, href.replace(/\\\\/g, &#x27;/&#x27;)));</span><br>    <span class=\"hljs-comment\">// ************************** End *****************************</span><br>    <span class=\"hljs-comment\">// asset.path is backward slash in Windows</span><br>    <span class=\"hljs-keyword\">if</span> (asset) href = asset.<span class=\"hljs-property\">path</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/\\\\/g</span>, <span class=\"hljs-string\">&#x27;/&#x27;</span>);<br>  &#125;<br>  href = url_for.<span class=\"hljs-title function_\">call</span>(hexo, href);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>enjoy it</li>\n</ol>\n<p><strong>方法二:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"># 设置<br><span class=\"hljs-attr\">post_asset_folder</span>:<span class=\"hljs-literal\">true</span><br># 安装插件 asset-image<br>npm install <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//github.com/CodeFalling/hexo-asset-image  --save</span><br># typora中设置图片为相对路径 看下图<br>./$&#123;filename&#125;<br># 运行查看<br>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo s <br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/2022/f96c3c41/image-20220815133503275.png\" alt=\"image-20220815133503275\"></p>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><blockquote>\n<p>   Env:使用方法四</p>\n<ul>\n<li>文件名不能带有空格, title 可以带空格 (<code>hexo new</code>的时候需要注意这一点)<ul>\n<li>修改 <code>node_modules\\hexo-renderer-marked\\lib\\renderer.js</code>文件可能可以改善这点. -&gt; TBD</li>\n</ul>\n</li>\n<li>md文件名要和图片等等资源文件夹同名 -&gt; 注定了不能使用 <code>./$&#123;filename&#125;.assets</code>这种方案, 一定要改成<code>./$&#123;filename&#125;</code>才行</li>\n</ul>\n</blockquote>\n<h2 id=\"Hexo-跳过一些文件-不渲染某些文件\"><a href=\"#Hexo-跳过一些文件-不渲染某些文件\" class=\"headerlink\" title=\"Hexo 跳过一些文件,不渲染某些文件\"></a>Hexo 跳过一些文件,不渲染某些文件</h2><p>搜索引擎确认网站所有权时往往会提供一个html文件来进行验证，要是这个文件被渲染了，验证自然就会失败了。或者，有时候会写一些简单的html示例页面或<code>README.md</code>，这也是不希望Hexo渲染的。因此有必要针对某个文件或者目录进行排除。</p>\n<p>Hexo博客的基本内容是一些Markdown文件，放在<code>source/_post</code>文件夹下，每个文件对应一篇文章。除此之外，放在<code>source</code>文件夹下的所有开头不是下划线的文件，在<code>hexo generate</code>的时候，都会被拷贝到<code>public</code>文件夹下。但是，Hexo默认会渲染所有的HTML和Markdown文件，导致我的README.md直接转成html格式了。。。</p>\n<p>怎么样避开这个坑呢？如果只有一个HTML文件的话，可以简单地在文件开头加上<code>layout: false</code>一行即可：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">layout:</span> <span class=\"hljs-literal\">false</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-meta\"></span><br><span class=\"hljs-string\">&lt;html&gt;</span><br><span class=\"hljs-string\">...</span><br></code></pre></td></tr></table></figure>\n\n<p>如果有多个要避开渲染的md文件，显然是不可能使用这种方法的。这时候需要使用<code>skip_render</code>配置。根据<a href=\"https://hexo.io/zh-cn/docs/configuration.html\">Hexo文档</a>中的说明，通过在<code>_config.yml</code>配置文件中使用<code>skip_render</code>参数，可以跳过指定文件的渲染。使用方式如下：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">skip_render: [games<span class=\"hljs-regexp\">/**, depview/</span>**, knowledge/**]<br></code></pre></td></tr></table></figure>\n\n<p>这里的路径匹配可以使用正则表达式。</p>\n<p><strong>注意：<code>skip_render</code>参数设置的路径是相对于<code>source</code>目录的路径。</strong>例如，需要跳过渲染source&#x2F;README.md，只需要设置 <code>skip_render:README.md</code>。</p>\n<p>在设置了跳过渲染之后，最好使用<code>hexo clean</code>清除以前的编译结果，保证配置生效。</p>\n<h2 id=\"hexo-开启RSS订阅-feed-atom\"><a href=\"#hexo-开启RSS订阅-feed-atom\" class=\"headerlink\" title=\"hexo 开启RSS订阅 feed atom\"></a>hexo 开启RSS订阅 feed atom</h2><p>基于<code>hexo-generator-feed</code></p>\n<p>先安装这个包:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install hexo-generator-feed<br></code></pre></td></tr></table></figure>\n\n<p>然后在在<code>_config.yml</code>文件中配置该插件</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">feed:</span><br>    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">atom</span><br>    <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">atom.xml</span><br>    <span class=\"hljs-attr\">limit:</span> <span class=\"hljs-number\">20</span><br>    <span class=\"hljs-attr\">hub:</span><br>    <span class=\"hljs-attr\">content:</span><br>    <span class=\"hljs-attr\">content_limit:</span><br>    <span class=\"hljs-attr\">content_limit_delim:</span> <span class=\"hljs-string\">&#x27; &#x27;</span><br>    <span class=\"hljs-attr\">order_by:</span> <span class=\"hljs-string\">-date</span><br>    <span class=\"hljs-attr\">icon:</span> <span class=\"hljs-string\">/images/favicon.png</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  参数的含义：</p>\n<ul>\n<li><code>type</code>: <code>RSS</code>的类型(<code>atom/rss2</code>)</li>\n<li><code>path</code>: 文件路径,默认是<code>atom.xml/rss2.xml</code></li>\n<li><code>limit</code>: 展示文章的数量,使用<strong>0</strong>或则<strong>false</strong>代表展示全部</li>\n<li><code>hub</code>:</li>\n<li><code>content</code>: 在<code>RSS</code>文件中是否包含内容 ,有3个值 <code>true/false</code>默认不填为<code>false</code></li>\n<li><code>content_limit</code>: 指定内容的长度作为摘要,仅仅在上面<code>content</code>设置为<code>false</code>和<code>没有自定义的描述出现</code></li>\n<li><code>content_limit_delim</code>: 上面截取描述的分隔符,截取内容是以指定的这个分隔符作为截取结束的标志.在达到规定的内容长度之前最后出现的这个分隔符之前的内容,，防止从中间截断.</li>\n<li><code>order_by</code>: 顺序排列方式</li>\n<li><code>icon</code>: 图标路径</li>\n</ul>\n</blockquote>\n<p>配置好之后运行<code>hexo clean &amp; hexo g</code>就可以找到你博客的<code>pubilc</code> 文件夹下发现<code>atom.xml</code>文件了</p>\n<p>我们可以在<code>关于(about)</code>页面添加RSS源, 有些主题可以在头像下面自动开启, 这些都是后话了.</p>\n<p>配置RSS的时候发现还有一些其他的推送方式, 比如邮件推送, 浏览器通知推送等等.</p>\n<h3 id=\"RSS阅读器\"><a href=\"#RSS阅读器\" class=\"headerlink\" title=\"RSS阅读器\"></a>RSS阅读器</h3><p><a href=\"https://feedly.com/\">Feedly.com</a> 这个比较满意, 文章显示和界面都不错</p>\n<p><a href=\"https://www.inoreader.com/\">inoreader</a>: 订阅的文章展示效果也还不错(卡片形式).</p>\n<p><a href=\"https://theoldreader.com/\">the old reader</a>: 这个是比较老牌的RSS阅读器了</p>\n<p>参考链接:</p>\n<p><a href=\"https://segmentfault.com/a/1190000012647294\">为hexo博客添加RSS订阅功能</a></p>\n<p><a href=\"https://sean10.github.io/2020/06/27/hexo%E5%BC%80%E5%90%AFatom%E8%AE%A2%E9%98%85/\">hexo开启atom订阅</a></p>\n<h2 id=\"hexo-静态网页压缩\"><a href=\"#hexo-静态网页压缩\" class=\"headerlink\" title=\"hexo 静态网页压缩\"></a>hexo 静态网页压缩</h2><p>了解到有三个插件可以做到这个功能(<code>hexo-neat</code>, <code>gulp</code>, <code>Hexo-all-minifier</code>)</p>\n<p><code>gulp</code>存在各种乱七八糟的依赖关系, 推荐直接用<code>Hexo-all-minifier</code>一套走.</p>\n<h3 id=\"1-hexo-neat\"><a href=\"#1-hexo-neat\" class=\"headerlink\" title=\"1. hexo-neat\"></a>1. hexo-neat</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">安装</span><br><span class=\"hljs-meta prompt_\">$ </span><span class=\"language-bash\">npm install hexo-neat --save</span><br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">在 _config.yml 添加配置</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">博文压缩</span><br>neat_enable: true<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">压缩html</span><br>neat_html:<br>  enable: true<br>  exclude:<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">压缩css</span><br>neat_css:<br>  enable: true<br>  exclude:<br>    - &#x27;**/*.min.css&#x27;<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">压缩js</span><br>neat_js:<br>  enable: true<br>  mangle: true<br>  output:<br>  compress:<br>  exclude:<br>    - &#x27;**/*.min.js&#x27;<br>    - &#x27;**/jquery.fancybox.pack.js&#x27;<br>    - &#x27;**/index.js&#x27;<br></code></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-gulp\"><a href=\"#2-gulp\" class=\"headerlink\" title=\"2. gulp\"></a>2. gulp</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 安装gulp</span><br>npm install gulp --save<br><span class=\"hljs-comment\"># 安装gulp依赖</span><br>npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp-imagemin --save<br></code></pre></td></tr></table></figure>\n<p><strong>创建 gulpfile.js 文件</strong></p>\n<p>在<code>Hexo</code>站点根目录下创建<code>gulpfile.js</code>文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><br><span class=\"hljs-keyword\">var</span> gulp = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> minifycss = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-minify-css&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> uglify = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-uglify&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> htmlmin = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-htmlmin&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> htmlclean = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-htmlclean&#x27;</span>);<br><span class=\"hljs-keyword\">var</span> imagemin = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-imagemin&#x27;</span>);<br><span class=\"hljs-comment\">// 压缩css文件</span><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;minify-css&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> gulp.<span class=\"hljs-title function_\">src</span>(<span class=\"hljs-string\">&#x27;./public/**/*.css&#x27;</span>)<br>  .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">minifycss</span>())<br>  .<span class=\"hljs-title function_\">pipe</span>(gulp.<span class=\"hljs-title function_\">dest</span>(<span class=\"hljs-string\">&#x27;./public&#x27;</span>));<br>&#125;);<br><span class=\"hljs-comment\">// 压缩html文件</span><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;minify-html&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> gulp.<span class=\"hljs-title function_\">src</span>(<span class=\"hljs-string\">&#x27;./public/**/*.html&#x27;</span>)<br>  .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">htmlclean</span>())<br>  .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">htmlmin</span>(&#123;<br>    <span class=\"hljs-attr\">removeComments</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-attr\">minifyJS</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-attr\">minifyCSS</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-attr\">minifyURLs</span>: <span class=\"hljs-literal\">true</span>,<br>  &#125;))<br>  .<span class=\"hljs-title function_\">pipe</span>(gulp.<span class=\"hljs-title function_\">dest</span>(<span class=\"hljs-string\">&#x27;./public&#x27;</span>))<br>&#125;);<br><span class=\"hljs-comment\">// 压缩js文件</span><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;minify-js&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">return</span> gulp.<span class=\"hljs-title function_\">src</span>([<span class=\"hljs-string\">&#x27;./public/**/.js&#x27;</span>,<span class=\"hljs-string\">&#x27;!./public/js/**/*min.js&#x27;</span>])<br>        .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">uglify</span>())<br>        .<span class=\"hljs-title function_\">pipe</span>(gulp.<span class=\"hljs-title function_\">dest</span>(<span class=\"hljs-string\">&#x27;./public&#x27;</span>));<br>&#125;);<br><span class=\"hljs-comment\">// 压缩 public/demo 目录内图片</span><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;minify-images&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>    gulp.<span class=\"hljs-title function_\">src</span>(<span class=\"hljs-string\">&#x27;./public/demo/**/*.*&#x27;</span>)<br>        .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">imagemin</span>(&#123;<br>           <span class=\"hljs-attr\">optimizationLevel</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-comment\">//类型：Number  默认：3  取值范围：0-7（优化等级）</span><br>           <span class=\"hljs-attr\">progressive</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">//类型：Boolean 默认：false 无损压缩jpg图片</span><br>           <span class=\"hljs-attr\">interlaced</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-comment\">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span><br>           <span class=\"hljs-attr\">multipass</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-comment\">//类型：Boolean 默认：false 多次优化svg直到完全优化</span><br>        &#125;))<br>        .<span class=\"hljs-title function_\">pipe</span>(gulp.<span class=\"hljs-title function_\">dest</span>(<span class=\"hljs-string\">&#x27;./public/uploads&#x27;</span>));<br>&#125;);<br><span class=\"hljs-comment\">// 默认任务 gulp 4.0 适用的方式</span><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;default&#x27;</span>, gulp.<span class=\"hljs-title function_\">parallel</span>(<span class=\"hljs-string\">&#x27;minify-html&#x27;</span>, <span class=\"hljs-string\">&#x27;minify-css&#x27;</span>, <span class=\"hljs-string\">&#x27;minify-js&#x27;</span><br> <span class=\"hljs-comment\">//build the website</span><br>));<br></code></pre></td></tr></table></figure>\n\n<p>只要每次在执行<code>hexo g</code>命令后执行<code>gulp</code>就可以进行静态资源压缩，压缩后再同步到github上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo cl &amp; hexo g &amp; gulp<br>hexo d<br></code></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"注意-这里部署的时候出了一个问题\"><a href=\"#注意-这里部署的时候出了一个问题\" class=\"headerlink\" title=\"注意: 这里部署的时候出了一个问题\"></a><strong>注意: 这里部署的时候出了一个问题</strong></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Error [ERR_REQUIRE_ESM]: require() of ES Module xxx\\hexo\\node_modules\\gulp-imagemin\\index.js from xxx\\hexo\\gulpfile.js not supported.<br>Instead change the require of index.js <span class=\"hljs-keyword\">in</span> xxx\\hexo\\gulpfile.js to a dynamic import() <span class=\"hljs-built_in\">which</span> is available <span class=\"hljs-keyword\">in</span> all CommonJS modules.<br>    at Object.&lt;anonymous&gt; (xxx\\hexo\\gulpfile.js:6:16)<br>    at async Promise.all (index 0) &#123;<br>  code: <span class=\"hljs-string\">&#x27;ERR_REQUIRE_ESM&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  gulp-imagemin 8.0.0 and above are now ESM only. You can downgrade gulp-imagemin to 7.1.0 which is commonjs and it should work fine.</p>\n<blockquote>\n<p>  This package is now pure ESM. Please read this.</p>\n</blockquote>\n<p>  <a href=\"https://github.com/sindresorhus/gulp-imagemin/releases/tag/v8.0.0\">https://github.com/sindresorhus/gulp-imagemin/releases/tag/v8.0.0</a></p>\n</blockquote>\n<p><strong>最终找到说是包的版本太高导致的</strong></p>\n<p>重新安装特定版本的包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 先卸载掉这些包</span><br>npm uninstall gulp<br>npm uninstall gulp-htmlclean gulp-htmlmin gulp-clean-css gulp-uglify gulp-imagemin<br>npm uninstall gulp-minify-css <br><br><span class=\"hljs-comment\"># 重新安装</span><br>npm install gulp@4.0.2 --save<br>npm install gulp-htmlclean@4.0.2 gulp-htmlmin@5.0.1 gulp-clean-css@4.2.0 gulp-uglify@3.0.2 gulp-imagemin@7.1.0 --save<br>npm install gulp-babel@8.0.0 babel-preset-env@1.7.0 babel-preset-mobx@2.0.0 --save<br>npm install gulp-miniify-css@1.2.4 -save<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  包的版本可以参考这个<br>  <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-attr\">&quot;babel-preset-env&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^1.7.0&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;babel-preset-mobx&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^2.0.0&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;gulp&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^4.0.2&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;gulp-babel&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^8.0.0&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;gulp-clean-css&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^4.2.0&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;gulp-htmlclean&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^2.7.22&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;gulp-htmlmin&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^5.0.1&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;gulp-imagemin&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^7.1.0&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;gulp-uglify&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^3.0.2&quot;</span><span class=\"hljs-punctuation\">,</span><br><span class=\"hljs-attr\">&quot;gulp-minify-css&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^1.2.4&quot;</span><span class=\"hljs-punctuation\">,</span><br></code></pre></td></tr></table></figure></p>\n</blockquote>\n<p>把<code>gulpfile.js</code>也改动了一下, </p>\n<p>在<code>minify-images</code>项里面我的图片是随文章存放的, 并不是全部存放在<code>img</code>等文件夹下面, 所以只能用全文件匹配去做图片压缩, 代价就是速度很忙, 希望有大佬来指点一下如何更好的修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">let</span> gulp      = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp&#x27;</span>)<br><span class=\"hljs-keyword\">let</span> htmlmin   = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-htmlmin&#x27;</span>)<br><span class=\"hljs-keyword\">let</span> htmlclean = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-htmlclean&#x27;</span>)<br><span class=\"hljs-keyword\">let</span> uglify    = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-uglify&#x27;</span>)<br><span class=\"hljs-keyword\">let</span> imagemin  = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-imagemin&#x27;</span>)<br><span class=\"hljs-keyword\">var</span> minifycss = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;gulp-minify-css&#x27;</span>);<br><br><span class=\"hljs-comment\">// 压缩html</span><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;minify-html&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">// 匹配所有 .html结尾的文件</span><br>    <span class=\"hljs-keyword\">return</span> gulp.<span class=\"hljs-title function_\">src</span>(<span class=\"hljs-string\">&#x27;./public/**/*.html&#x27;</span>)<br>        .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">htmlclean</span>())<br>        .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">htmlmin</span>(&#123;<br>            <span class=\"hljs-attr\">removeComments</span>: <span class=\"hljs-literal\">true</span>,<br>            <span class=\"hljs-attr\">minifyJS</span>: <span class=\"hljs-literal\">true</span>,<br>            <span class=\"hljs-attr\">minifyCSS</span>: <span class=\"hljs-literal\">true</span>,<br>            <span class=\"hljs-attr\">minifyURLs</span>: <span class=\"hljs-literal\">true</span>,<br>        &#125;))<br>        .<span class=\"hljs-title function_\">pipe</span>(gulp.<span class=\"hljs-title function_\">dest</span>(<span class=\"hljs-string\">&#x27;./public&#x27;</span>))<br>&#125;);<br><br><span class=\"hljs-comment\">// 压缩css</span><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;minify-css&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">return</span> gulp.<span class=\"hljs-title function_\">src</span>(<span class=\"hljs-string\">&#x27;./public/**/*.css&#x27;</span>)<br>        .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">minifycss</span>())<br>        .<span class=\"hljs-title function_\">pipe</span>(gulp.<span class=\"hljs-title function_\">dest</span>(<span class=\"hljs-string\">&#x27;./public&#x27;</span>));<br>&#125;);<br><br><span class=\"hljs-comment\">// 压缩js</span><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;minify-js&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">return</span> gulp.<span class=\"hljs-title function_\">src</span>([<span class=\"hljs-string\">&#x27;./public/**/.js&#x27;</span>, <span class=\"hljs-string\">&#x27;!./public/js/**/*min.js&#x27;</span>])<br>        .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">uglify</span>())<br>        .<span class=\"hljs-title function_\">pipe</span>(gulp.<span class=\"hljs-title function_\">dest</span>(<span class=\"hljs-string\">&#x27;./public&#x27;</span>));<br>&#125;)<br><br><span class=\"hljs-comment\">// 压缩图片</span><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;minify-images&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-keyword\">return</span> gulp.<span class=\"hljs-title function_\">src</span>(<span class=\"hljs-string\">&#x27;./public/**/*.*&#x27;</span>)<br>        .<span class=\"hljs-title function_\">pipe</span>(<span class=\"hljs-title function_\">imagemin</span>(&#123;<br>            <span class=\"hljs-attr\">optimizationLevel</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-comment\">//类型：Number  默认：3  取值范围：0-7（优化等级）</span><br>            <span class=\"hljs-attr\">progressive</span>: <span class=\"hljs-literal\">true</span>,    <span class=\"hljs-comment\">//类型：Boolean 默认：false 无损压缩jpg图片</span><br>            <span class=\"hljs-attr\">interlaced</span>: <span class=\"hljs-literal\">false</span>,    <span class=\"hljs-comment\">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span><br>            <span class=\"hljs-attr\">multipass</span>: <span class=\"hljs-literal\">false</span>,     <span class=\"hljs-comment\">//类型：Boolean 默认：false 多次优化svg直到完全优化</span><br>        &#125;))<br>        .<span class=\"hljs-title function_\">pipe</span>(gulp.<span class=\"hljs-title function_\">dest</span>(<span class=\"hljs-string\">&#x27;./public&#x27;</span>));<br>&#125;)<br><br>gulp.<span class=\"hljs-title function_\">task</span>(<span class=\"hljs-string\">&#x27;default&#x27;</span>, gulp.<span class=\"hljs-title function_\">series</span>(<span class=\"hljs-string\">&#x27;minify-html&#x27;</span>, <span class=\"hljs-string\">&#x27;minify-css&#x27;</span>, <span class=\"hljs-string\">&#x27;minify-js&#x27;</span>, <span class=\"hljs-string\">&#x27;minify-images&#x27;</span>))<br></code></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-Hexo-all-minifier\"><a href=\"#3-Hexo-all-minifier\" class=\"headerlink\" title=\"3. Hexo-all-minifier\"></a>3. Hexo-all-minifier</h3><blockquote>\n<p>  <a href=\"https://github.com/chenzhutian/hexo-all-minifier\">https://github.com/chenzhutian/hexo-all-minifier</a></p>\n<p>  <a href=\"https://archive.vincent0700.com/2019/12/31/034_Usage_of_hexo-all-minifier_copy/\">Hexo 资源压缩 | hexo-all-minifier</a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 安装</span><br>npm install hexo-all-minifier --save<br><br><span class=\"hljs-comment\"># 在_config.yml文件添加配置</span><br>all_minifier: <span class=\"hljs-literal\">true</span><br><br><span class=\"hljs-comment\"># </span><br>hexo cl &amp; hexo g <br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Hexo-Sitemap\"><a href=\"#Hexo-Sitemap\" class=\"headerlink\" title=\"Hexo Sitemap\"></a>Hexo Sitemap</h2><blockquote>\n<p>   据网友所言: 谷歌就xx乱爬, 百度就xx乱删, 必应就xx不收录</p>\n</blockquote>\n<p>为了让博文能够被google或百度检索，需要先将网站收录到他们的库里面，我们可以在谷歌的站长平台里面提交我们的sitemap文件，告诉浏览器应该我们的站点有哪些页面，这样他就会去爬取收录了。</p>\n<blockquote>\n<p>  站点地图是一种文件，您可以在其中提供与您网站中的网页、视频或其他文件有关的信息，还可以说明这些内容之间的关系。Google 等搜索引擎会读取此文件，以便更高效地抓取您的网站。站点地图会告诉 Google 您认为网站中的哪些网页和文件比较重要，还会提供与这些文件有关的重要信息。例如，网页上次更新的时间和网页是否有任何备用的语言版本。</p>\n<p>  您可以使用站点地图提供与特定类型的网页内容（包括<a href=\"https://developers.google.com/search/docs/advanced/sitemaps/video-sitemaps\">视频</a>、<a href=\"https://developers.google.com/search/docs/advanced/sitemaps/image-sitemaps\">图片</a>和<a href=\"https://developers.google.com/search/docs/advanced/sitemaps/news-sitemap\">新闻</a>内容）有关的信息。例如：</p>\n<ul>\n<li>站点地图视频条目可以指定视频的时长、评分以及适合哪些年龄段的受众。</li>\n<li>站点地图图片条目中可包含网页中所含图片的位置。</li>\n<li>站点地图新闻条目中可包含报道标题和发布日期。</li>\n</ul>\n<p>  <strong>我需要站点地图吗？</strong></p>\n<p>  如果您网站上的网页链接得当，那么 Google 通常能够发现其中的大多数网页。链接得当是指您认为重要的所有网页都可以通过某些形式的导航（例如您网站的菜单，或您放入网页中的链接）抵达。即便如此，站点地图仍有助于我们更加高效地抓取规模更大、更复杂的网站或更特殊的文件。</p>\n</blockquote>\n<h3 id=\"生成sitemap-xml\"><a href=\"#生成sitemap-xml\" class=\"headerlink\" title=\"生成sitemap.xml\"></a>生成<code>sitemap.xml</code></h3><p>首先我们安装生成sitemao的插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 谷歌的</span><br>npm install hexo-generator-sitemap --save<br><span class=\"hljs-comment\"># 百度的</span><br>npm install hexo-generator-baidu-sitemap --save<br></code></pre></td></tr></table></figure>\n\n<p>修改配置文件<code>_config.yml</code>增加下面这些内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Plugins:<br>- hexo-generator-sitemap<br>- hexo-generator-baidu-sitemap<br><br>baidusitemap:<br>  path: baidusitemap.xml<br>sitemap:<br>  path: sitemap.xml<br></code></pre></td></tr></table></figure>\n\n<p>生成<code>sitemap.xml</code>文件, 重新生成网站, 在网站根目录就可以看到<code>sitemap.xml</code>文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo cl &amp; hexo g <br></code></pre></td></tr></table></figure>\n\n<h3 id=\"提交sitemap-xml\"><a href=\"#提交sitemap-xml\" class=\"headerlink\" title=\"提交sitemap.xml\"></a>提交<code>sitemap.xml</code></h3><p><a href=\"https://www.google.com/webmasters/tools\">GoogleSearchConsole</a></p>\n<p><a href=\"https://www.bing.com/webmasters/\">BingWebMaster</a></p>\n<p><a href=\"https://ziyuan.baidu.com/site/index\">百度资源平台</a></p>\n<p><strong>下面讲一下谷歌的</strong></p>\n<p>登录<a href=\"https://www.google.com/webmasters/tools\">GoogleSearchConsole</a>, 按照提示验证站点的所有权</p>\n<p>打开谷歌控制台选择-&gt;<strong>索引</strong>-&gt;<strong>站点地图</strong>，在添加新的站点地图中填入你的<code>sitemap.xml</code>的路径, 这里直接写<code>sitemap.xml</code>即可。</p>\n<p><img src=\"/2022/f96c3c41/image-20220918004138059.png\" alt=\"image-20220918004138059\"></p>\n<blockquote>\n<p>   这个谷歌真是让我大无语, 一直显示无法获取, 一直没法解决这个问题, 网址检查显示没什么问题, 但是一直显示无法获取真是麻了.</p>\n<p>  求助群友后他们推荐使用 Hexo-SEO-AutoPush</p>\n</blockquote>\n<h3 id=\"收录查询\"><a href=\"#收录查询\" class=\"headerlink\" title=\"收录查询\"></a>收录查询</h3><ol>\n<li><p>通过网站管理平台的控制台去看数据</p>\n</li>\n<li><p>搜索引擎直接搜索</p>\n</li>\n</ol>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">site:</span>oikiou.top<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"手动生成Sitemap文件\"><a href=\"#手动生成Sitemap文件\" class=\"headerlink\" title=\"手动生成Sitemap文件\"></a>手动生成Sitemap文件</h3><p><a href=\"https://www.xml-sitemaps.com/\">https://www.xml-sitemaps.com/</a></p>\n<h2 id=\"Hexo-SEO-AutoPush的使用\"><a href=\"#Hexo-SEO-AutoPush的使用\" class=\"headerlink\" title=\"Hexo-SEO-AutoPush的使用\"></a>Hexo-SEO-AutoPush的使用</h2><p><a href=\"https://github.com/Lete114/Hexo-SEO-AutoPush\">https://github.com/Lete114/Hexo-SEO-AutoPush</a></p>\n<blockquote>\n<p>  注意以下几点: </p>\n<ol>\n<li>由于生成的 actions 是在<code>.github/workflows/HexoSeoAutoPush.yml</code>，点开头的文件或文件夹都会被视为隐藏文件，所以 hexo 不会将隐藏文件部署到 pages，需要新增配置<code>ignore_hidden</code></li>\n</ol>\n<pre><code class=\"hljs\"> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">deploy:<br> ignore_hidden: <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\"># 忽略隐藏文件及文件夹(目录)</span><br></code></pre></td></tr></table></figure>\n \n</code></pre>\n<ol start=\"2\">\n<li><p>Bing的<code>API</code>在登录控制台后的<em>右上角齿轮上</em>可以找到, 如果找不到可能是界面更新导致的, 请参考官方文档</p>\n</li>\n<li><p>注意google的信息填写方式</p>\n<p><code>google_private_key</code>是填写Json内的 <code>private_key </code> 不是<code>private_key_id </code>注意区分. </p>\n<p>而且<code>google_private_key </code> 是带双引号的需要注意, 而<code>google_client_email</code>填写的时候是不带双引号的.</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>形似</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>google_client_email</td>\n<td><a href=\"mailto:&#120;&#x78;&#x78;&#x40;&#x78;&#x78;&#x78;&#x2e;&#x78;&#120;&#x78;&#46;&#103;&#115;&#x65;&#114;&#118;&#x69;&#99;&#x65;&#x61;&#99;&#x63;&#111;&#x75;&#110;&#116;&#46;&#99;&#111;&#x6d;\">&#120;&#x78;&#x78;&#x40;&#x78;&#x78;&#x78;&#x2e;&#x78;&#120;&#x78;&#46;&#103;&#115;&#x65;&#114;&#118;&#x69;&#99;&#x65;&#x61;&#99;&#x63;&#111;&#x75;&#110;&#116;&#46;&#99;&#111;&#x6d;</a></td>\n<td>【必填】Value 输入谷歌的 client_email</td>\n</tr>\n<tr>\n<td>google_private_key</td>\n<td>“—–BEGIN PRIVATE KEY—–\\nxxxxxx\\n—–END PRIVATE KEY—–\\n”</td>\n<td>【必填】Value 输入谷歌的 private_key （注意：填写的时候需要使用<strong>双引号</strong>包起来，如: <code>&quot;private_key&quot;</code>）</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n</blockquote>\n<p>在Github内点击Action-&gt;Hexo SEO Auto Push -&gt; 查看执行情况 没有报错就是执行的没问题, 稍等片刻刷新控制台就可以看到提交的信息.</p>\n<p>打开<a href=\"https://www.bing.com/webmasters/\">Home - Bing Webmaster Tools</a>, <code>URL提交</code>标签</p>\n<p>在<a href=\"https://console.cloud.google.com/apis/dashboard\">Google Cloud Platform</a> 中查看.</p>\n<h3 id=\"注意-1\"><a href=\"#注意-1\" class=\"headerlink\" title=\"注意:\"></a><strong>注意:</strong></h3><p>部署的时候报了下面这个错误, 当时弄这个东西的时候是半夜, 脑子不清醒(各位同学注意早睡早起, 熬夜效率是极其低下的), <code>private_key</code>填写错了发生了这个错误, 有相似错误的同学可以看看是不是<code>private_key</code>有问题.</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">Run npx hexoautopush *** ***<br>Error: error:<span class=\"hljs-number\">0909006</span>C:PEM routines:get_name:no start line<br>    at Sign.sign (internal<span class=\"hljs-regexp\">/crypto/</span>sig.js:<span class=\"hljs-number\">110</span>:<span class=\"hljs-number\">29</span>)<br>    at Object.sign (<span class=\"hljs-regexp\">/xxx/</span>node_modules<span class=\"hljs-regexp\">/jwa/i</span>ndex.js:<span class=\"hljs-number\">152</span>:<span class=\"hljs-number\">45</span>)<br>    at Object.jwsSign [as sign] (<span class=\"hljs-regexp\">/xxx/</span>node_modules<span class=\"hljs-regexp\">/jws/</span>lib/sign-stream.js:<span class=\"hljs-number\">32</span>:<span class=\"hljs-number\">24</span>)<br>    at GoogleToken.requestToken (<span class=\"hljs-regexp\">/xxx/</span>node_modules<span class=\"hljs-regexp\">/gtoken/</span>build<span class=\"hljs-regexp\">/src/i</span>ndex.js:<span class=\"hljs-number\">225</span>:<span class=\"hljs-number\">31</span>)<br>    at GoogleToken.getTokenAsyncInner (<span class=\"hljs-regexp\">/xxx/</span>node_modules<span class=\"hljs-regexp\">/gtoken/</span>build<span class=\"hljs-regexp\">/src/i</span>ndex.js:<span class=\"hljs-number\">163</span>:<span class=\"hljs-number\">21</span>)<br>    at GoogleToken.getTokenAsync (<span class=\"hljs-regexp\">/xxx/</span>node_modules<span class=\"hljs-regexp\">/gtoken/</span>build<span class=\"hljs-regexp\">/src/i</span>ndex.js:<span class=\"hljs-number\">142</span>:<span class=\"hljs-number\">55</span>)<br>    at GoogleToken.getToken (<span class=\"hljs-regexp\">/xxx/</span>node_modules<span class=\"hljs-regexp\">/gtoken/</span>build<span class=\"hljs-regexp\">/src/i</span>ndex.js:<span class=\"hljs-number\">94</span>:<span class=\"hljs-number\">21</span>)<br>    at JWT.refreshTokenNoCache (<span class=\"hljs-regexp\">/xxx/</span>node_modules<span class=\"hljs-regexp\">/google-auth-library/</span>build<span class=\"hljs-regexp\">/src/</span>auth/jwtclient.js:<span class=\"hljs-number\">171</span>:<span class=\"hljs-number\">36</span>)<br>    at JWT.refreshToken (<span class=\"hljs-regexp\">/xxx/</span>node_modules<span class=\"hljs-regexp\">/google-auth-library/</span>build<span class=\"hljs-regexp\">/src/</span>auth/oauth2client.js:<span class=\"hljs-number\">145</span>:<span class=\"hljs-number\">25</span>)<br>    at JWT.authorizeAsync (<span class=\"hljs-regexp\">/xxx/</span>node_modules<span class=\"hljs-regexp\">/google-auth-library/</span>build<span class=\"hljs-regexp\">/src/</span>auth/jwtclient.js:<span class=\"hljs-number\">152</span>:<span class=\"hljs-number\">35</span>) &#123;<br>  library: <span class=\"hljs-string\">&#x27;PEM routines&#x27;</span>,<br>  <span class=\"hljs-keyword\">function</span>: <span class=\"hljs-string\">&#x27;get_name&#x27;</span>,<br>  reason: <span class=\"hljs-string\">&#x27;no start line&#x27;</span>,<br>  code: <span class=\"hljs-string\">&#x27;ERR_OSSL_PEM_NO_START_LINE&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Hexo博客修改Archive页面显示文章数量\"><a href=\"#Hexo博客修改Archive页面显示文章数量\" class=\"headerlink\" title=\"Hexo博客修改Archive页面显示文章数量\"></a>Hexo博客修改Archive页面显示文章数量</h2><p>默认情况下，Hexo无法对主页、Archive页面、标签页面每页显示文章数量进行单独设置</p>\n<p>这里我们借助<code>hexo-generator-archive</code>来实现这个功能, 因为Archive分页的话看起来贼难受, 如果能将所有的文章全部显示那就舒服了.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 先安装包</span><br>npm install hexo-generator-archive --save<br></code></pre></td></tr></table></figure>\n\n<p>编辑<code>_config.yml</code>新增以下内容</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\"># Pagination</span><br><span class=\"hljs-comment\">## Set per_page to 0 to disable pagination</span><br><span class=\"hljs-attr\">index_generator:</span><br>  <span class=\"hljs-attr\">per_page:</span> <span class=\"hljs-number\">32</span><br><br><span class=\"hljs-attr\">index_generator:</span><br>  <span class=\"hljs-attr\">per_page:</span> <span class=\"hljs-number\">5</span><br><br><span class=\"hljs-attr\">archive_generator:</span><br>  <span class=\"hljs-attr\">per_page:</span> <span class=\"hljs-number\">20</span>  \t<span class=\"hljs-comment\">#为0时表示不分页全展示</span><br>  <span class=\"hljs-attr\">yearly:</span> <span class=\"hljs-literal\">false</span>  \t<span class=\"hljs-comment\">#按年生成归档</span><br>  <span class=\"hljs-attr\">monthly:</span> <span class=\"hljs-literal\">false</span> \t<span class=\"hljs-comment\">#按月生成归档</span><br><br><span class=\"hljs-attr\">tag_generator:</span><br>  <span class=\"hljs-attr\">per_page:</span> <span class=\"hljs-number\">10</span><br><br><span class=\"hljs-attr\">category_generator:</span><br>  <span class=\"hljs-attr\">per_page:</span> <span class=\"hljs-number\">50</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>  注意:上面归档设置中的按年或者按月，需要修改模板给出对应的链接入口，对于没有兴趣修改模板的同学，可以将此处设为false，减少生成页面时的工作量。</p>\n</blockquote>\n<h1 id=\"Comment-评论系统\"><a href=\"#Comment-评论系统\" class=\"headerlink\" title=\"Comment 评论系统\"></a>Comment 评论系统</h1><h2 id=\"cusdis-系统\"><a href=\"#cusdis-系统\" class=\"headerlink\" title=\"cusdis 系统\"></a>cusdis 系统</h2><p>功能较少,看起来非常轻量, 也可以私有部署,正打算私有部署的时候看到了<code>twikoo</code>所以就转入<code>twikoo</code>了,因为cusdis现阶段功能确实有些少.</p>\n<h2 id=\"twikoo-系统\"><a href=\"#twikoo-系统\" class=\"headerlink\" title=\"twikoo 系统\"></a>twikoo 系统</h2><p>twikoo支持docker私有部署，这是它吸引我的一点，这也是我对比几个之后最终敲定下来选择的。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p>官网：<a href=\"https://twikoo.js.org/\">https://twikoo.js.org/</a></p>\n<p>Docker：<a href=\"https://hub.docker.com/r/imaegoo/twikoo\">https://hub.docker.com/r/imaegoo/twikoo</a></p>\n<p><del>私有docker部署部署半天还是不成功, 看起来像是需要HTTPS才行.</del></p>\n<p>功能挺丰富的,<del>就是半天没部署成功</del></p>\n<blockquote>\n<p>  部署后没有启用HTTPS<br>  fluid 配置里面又启动了强行使用HTTPS,<br>  F12,看consel发现,ERR_SSL_PROTOCOL_ERROR,被重定向到了HTTPS去了</p>\n</blockquote>\n<h3 id=\"Docker部署\"><a href=\"#Docker部署\" class=\"headerlink\" title=\"Docker部署\"></a>Docker部署</h3><p>安装好docker后直接运行下面的命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">在当前文件夹下创建Data文件用于存放 twikoo 的评论数据</span><br>docker run --name=&quot;twikoo&quot; -p 8080:8080 -v $&#123;PWD&#125;/data:/app/data -d imaegoo/twikoo<br></code></pre></td></tr></table></figure>\n\n<p>测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">curl http://localhost:8080/<br></code></pre></td></tr></table></figure>\n\n<p>看到有输出就表示正常部署了。</p>\n<h4 id=\"启用HTTPS\"><a href=\"#启用HTTPS\" class=\"headerlink\" title=\"启用HTTPS\"></a>启用HTTPS</h4><p>配置前置 Nginx 服务器或负载网关，以通过 HTTPS 访问 Twikoo，如下 Nginx 配置可供参考。</p>\n<p><code>service nginx status</code> 我们可以找到nginx的配置文件在哪。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">http &#123;<br>    server &#123;<br>        listen       80;<br>        listen       [::]:80;<br>        # 重定向到https<br>        return       301 https://$server_name$request_uri;<br>    &#125;<br>    server &#123;<br>        listen       443 ssl;<br>        listen       [::]:443 ssl;<br>        # 下面两就是证书文件<br>        ssl_certificate      cert/fullchain.pem;<br>        ssl_certificate_key  cert/privkey.pem;<br>        # 连接到docker twikoo的端口<br>        location / &#123;<br>            proxy_pass   http://127.0.0.1:8080;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"dockers-部署后升级\"><a href=\"#dockers-部署后升级\" class=\"headerlink\" title=\"dockers 部署后升级\"></a>dockers 部署后升级</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">　拉取新版本</span> <br>docker pull imaegoo/twikoo<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">停止旧版本容器</span> <br>docker stop twikoo<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">　删除旧版本容器</span> <br>docker rm twikoo<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">启动新版本容器</span><br>dockr run .......<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"关于设置面板的头像风格类型\"><a href=\"#关于设置面板的头像风格类型\" class=\"headerlink\" title=\"关于设置面板的头像风格类型\"></a>关于设置面板的头像风格类型</h3><blockquote>\n<p>  头像风格类型<br>  404：如果没有任何图像与电子邮件哈希无关，则不加载任何图像，而是返回HTTP 404（找不到文件）响应<br>  mp：（神秘人物）一个人的简单卡通风格的轮廓（不随电子邮件哈希值而变化）<br>  identicon：基于电子邮件哈希的几何图案<br>  monsterid：生成的具有不同颜色，面孔等的“怪物”<br>  wavatar：生成的具有不同特征和背景的面孔<br>  retro：生成的令人敬畏的8位街机风格像素化面孔<br>  robohash：具有不同颜色，面部等的生成的机器人<br>  blank：透明的PNG图像（以下为演示目的添加到HTML的边框）</p>\n</blockquote>\n<ul>\n<li><p>Twikoo我是用的docker,nginx和ssl配置可以参考<a href=\"https://hub.docker.com/r/imaegoo/twikoo\">DockerHub</a>, https的端口是可以更改的, 默认的443占用了换成别的就好.</p>\n</li>\n<li><p>twikoo的即时推送尝试了几个譬如 Qmsq, server酱等等发现又一系列的问题 都不尽如人意  最后选择的是最简单的邮件通知.</p>\n</li>\n</ul>\n<h2 id=\"remark42\"><a href=\"#remark42\" class=\"headerlink\" title=\"remark42\"></a>remark42</h2><h1 id=\"部署平台-托管平台\"><a href=\"#部署平台-托管平台\" class=\"headerlink\" title=\"部署平台(托管平台)\"></a>部署平台(托管平台)</h1><p><a href=\"https://i.vince.pub/p/hexo-static/\">常见静态网站托管平台使用及多节点部署方案</a></p>\n<p><img src=\"/2022/f96c3c41/2fc062cb2.svg\" alt=\"节点\"></p>\n<p>现阶段比较好的方案是<code>coding</code>和<code>github+netlify</code>.</p>\n<h1 id=\"一些资源\"><a href=\"#一些资源\" class=\"headerlink\" title=\"一些资源\"></a>一些资源</h1><p><strong>字体族（<code>font-family</code>）</strong></p>\n<blockquote>\n<p>   <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-family\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-family</a></p>\n</blockquote>\n<p><strong>调色板灵感</strong></p>\n<blockquote>\n<p>   <a href=\"https://www.webdesignrankings.com/resources/lolcolors/\">https://www.webdesignrankings.com/resources/lolcolors/</a></p>\n</blockquote>\n<p><strong>ISO-8601 日期</strong></p>\n<blockquote>\n<p>  <a href=\"http://momentjs.cn/docs/#/parsing/string-format/\">http://momentjs.cn/docs/#/parsing/string-format/</a></p>\n</blockquote>\n<p><strong>代码高亮风格</strong></p>\n<blockquote>\n<p>  highlightjs:  <a href=\"https://highlightjs.org/static/demo/\">https://highlightjs.org/static/demo/</a></p>\n<p>  prismjs:  <a href=\"https://prismjs.com/\">https://prismjs.com/</a></p>\n</blockquote>\n<p><strong>Logo生成器</strong></p>\n<blockquote>\n<p>  adobe: <a href=\"https://www.adobe.com/express/create/logo\">https://www.adobe.com/express/create/logo</a></p>\n</blockquote>\n<p><strong>图床</strong></p>\n<blockquote>\n<p>  <a href=\"https://postimg.cc/\">https://postimg.cc/</a></p>\n</blockquote>\n<p><strong>壁纸</strong></p>\n<blockquote>\n<p>  <a href=\"https://wallpapercrafter.com/\">https://wallpapercrafter.com/</a></p>\n</blockquote>\n<p><strong>实时获取网站的<code>Favicon.ion</code>文件</strong></p>\n<blockquote>\n<p>  <a href=\"https://tools.ly522.com/ico/\">https://tools.ly522.com/ico/</a></p>\n<p>  远程实时获取并显示网站的Favicon.ico文件，美化网站外链显示效果。</p>\n</blockquote>\n<p><strong>bing壁纸接口</strong></p>\n<blockquote>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://bing.img.run/uhd.php&quot;</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Bing每日壁纸UHD超高清原图&quot;</span> /&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://bing.img.run/1920x1080.php&quot;</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Bing每日壁纸1080P高清&quot;</span> /&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://bing.img.run/1366x768.php&quot;</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Bing每日壁纸普清&quot;</span> /&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://bing.img.run/m.php&quot;</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Bing每日壁纸手机版1080P高清&quot;</span> /&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://bing.img.run/rand_uhd.php&quot;</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;随机获取Bing历史壁纸UHD超高清原图&quot;</span> /&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://bing.img.run/rand.php&quot;</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;随机获取Bing历史壁纸1080P高清&quot;</span> /&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://bing.img.run/rand_1366x768.php&quot;</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;随机获取Bing历史壁纸普清&quot;</span> /&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://bing.img.run/rand_m.php&quot;</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;随机获取Bing历史壁纸手机版1080P高清&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure>\n\n</blockquote>\n<h1 id=\"一些知识\"><a href=\"#一些知识\" class=\"headerlink\" title=\"一些知识\"></a>一些知识</h1><h2 id=\"Creative-Commons-licenses\"><a href=\"#Creative-Commons-licenses\" class=\"headerlink\" title=\"Creative Commons licenses\"></a>Creative Commons licenses</h2><p><a href=\"https://www.wur.nl/en/article/What-are-Creative-Commons-licenses.htm\">What are Creative Commons licenses?</a></p>\n<p><img src=\"/2022/f96c3c41/licences_3bf0e9af_670x502.jpg\" alt=\"知识共享许可.jpg\"></p>\n<h2 id=\"Gravatar-amp-Cravatar\"><a href=\"#Gravatar-amp-Cravatar\" class=\"headerlink\" title=\"Gravatar &amp; Cravatar\"></a>Gravatar &amp; Cravatar</h2><p><a href=\"https://en.gravatar.com/\">Gravatar</a> &amp; <a href=\"https://cravatar.cn/\">Cravatar</a>的差异</p>\n<h3 id=\"Gravatar\"><a href=\"#Gravatar\" class=\"headerlink\" title=\"Gravatar\"></a>Gravatar</h3><p>Gravatar是一项用于提供在全球范围内使用的头像服务。只要你在Gravatar的服务器上上传了你自己的头像，你便可以在其他任何支持Gravatar的博客、论坛等地方使用它。</p>\n<h3 id=\"Cravatar-cn\"><a href=\"#Cravatar-cn\" class=\"headerlink\" title=\"Cravatar  (cn)\"></a>Cravatar  (cn)</h3><p>Cravatar 是 Gravatar 在中国的完美替代方案,从此你可以自由的上传和分享头像。</p>\n<p><strong>与 Gravatar API 兼容</strong></p>\n<p>为了降低你的使用成本，我们的 API 规范始终保持与 Gravatar 100% 兼容</p>\n<p><strong>独有的三级头像匹配机制</strong></p>\n<p>当访客请求自己的头像时，我们会按此顺序分三级匹配头像：<strong>Cravatar-&gt;Gravatar-&gt;QQ 头像</strong>，对于博客站，这平均可以为 70% 的访客提供准确的头像</p>\n",
            "tags": [
                "hexo",
                "jekyll",
                "fluid",
                "cusdis",
                "twikoo",
                "blog",
                "gravatar",
                "cravatar"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/438d1de3/",
            "url": "https://www.oikiou.top/2022/438d1de3/",
            "title": "字符集和字符编码",
            "date_published": "2022-08-14T14:12:34.000Z",
            "content_html": "<h1 id=\"字符集和字符编码\"><a href=\"#字符集和字符编码\" class=\"headerlink\" title=\"字符集和字符编码\"></a>字符集和字符编码</h1><p><a href=\"https://www.cnblogs.com/skynet/archive/2011/05/03/2035105.html\">字符集和字符编码 (Charset &amp; Encoding)</a></p>\n<p><a href=\"http://www.knowsky.com/resource/gb2312tbl.htm\">GB2312简体中文编码表</a></p>\n<p><a href=\"http://tools.jb51.net/table/gb2312\">GB2312简体中文编码表</a></p>\n<p><a href=\"https://www.unicode.org/charts/\">Unicode码查询</a></p>\n<p><a href=\"https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84\">Unicode字符平面映射</a></p>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p><strong>字符集（Charset）</strong>：是一个系统支持的所有抽象字符的集合。字符是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等。</p>\n<p>常见字符集：ASCII字符集、GB2312字符集、BIG5字符集、GB18030字符集、Unicode字符集等。计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。</p>\n<p><strong>字符编码（Character Encoding）</strong>：是一套法则，使用该法则能够对自然语言的字符的一个集合（如字母表或音节表），与其他东西的一个集合（如号码、数字或电脉冲）进行配对。即在符号集合与数字系统之间建立对应关系，它是信息处理的一项基本技术。通常人们用符号集合（一般情况下就是文字）来表达信息。而以计算机为基础的信息处理系统则是利用元件（硬件）不同状态的组合来存储和处理信息的。元件不同状态的组合能代表数字系统的数字，因此字符编码就是将符号转换为计算机可以接受的数字系统的数，称为数字代码。</p>\n<h2 id=\"ASCII\"><a href=\"#ASCII\" class=\"headerlink\" title=\"ASCII\"></a>ASCII</h2><p><strong>ASCII字符集</strong>：主要包括控制字符（回车键、退格、换行键等）；可显示字符（英文大小写字符、阿拉伯数字和西文符号）。</p>\n<p><strong>ASCII编码</strong>：将ASCII字符集转换为计算机可以接受的数字系统的数的规则。使用7位（bits）表示一个字符，共128字符；但是7位编码的字符集只能支持128个字符，为了表示更多的常用字符欧洲对ASCII进行了扩展，ASCII扩展字符集使用8位（bits）表示一个字符，共256字符。ASCII字符集映射到数字编码规则如下图所示：</p>\n<p><img src=\"/2022/438d1de3/2011050311372042.png\" alt=\"img\"></p>\n<p><img src=\"/2022/438d1de3/201105031137219627.png\" alt=\"img\"></p>\n<h2 id=\"GBxxx\"><a href=\"#GBxxx\" class=\"headerlink\" title=\"GBxxx\"></a>GBxxx</h2><p>中国把那些127号之后的奇异符号们（即EASCII、扩充ASCII）取消掉，规定：一个小于127的字符的意义与原来相同，但两个大于127的字符连在一起时，就表示一个汉字。前面的一个字节（他称之为高字节）从0xA1用到 0xF7，后面一个字节（低字节）从0xA1到0xFE，这样我们就可以组合出大约7000多个简体汉字了。在这些编码里，还把数学符号、罗马希腊的 字母、日文的假名们都编进去了，连在ASCII里本来就有的数字、标点、字母都统统重新编了两个字节长的编码，这就是常说的”全角”字符，而原来在127号以下的那些就叫”半角”字符了。</p>\n<p>上述编码规则就是<strong>GB2312</strong>。<strong>GB2312</strong>或<strong>GB2312-80</strong>是<a href=\"http://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E5%AE%B6%E6%A0%87%E5%87%86\">中国国家标准</a><a href=\"http://zh.wikipedia.org/wiki/%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">简体中文</a><a href=\"http://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E9%9B%86\">字符集</a>，全称《<strong>信息交换用汉字编码字符集·基本集</strong>》，又称<a href=\"http://zh.wikipedia.org/wiki/%E5%9B%BD%E5%AE%B6%E6%A0%87%E5%87%86%E4%BB%A3%E7%A0%81\"><strong>GB0</strong></a>，由<a href=\"http://zh.wikipedia.org/w/index.php?title=%E4%B8%AD%E5%9B%BD%E5%9B%BD%E5%AE%B6%E6%A0%87%E5%87%86%E6%80%BB%E5%B1%80&action=edit&redlink=1\">中国国家标准总局</a>发布，<a href=\"http://zh.wikipedia.org/wiki/1981%E5%B9%B4\">1981年</a><a href=\"http://zh.wikipedia.org/wiki/5%E6%9C%881%E6%97%A5\">5月1日</a>实施。GB2312编码通行于中国大陆；<a href=\"http://zh.wikipedia.org/wiki/%E6%96%B0%E5%8A%A0%E5%9D%A1\">新加坡</a>等地也采用此编码。GB2312的出现，基本满足了汉字的计算机处理需要，它所收录的汉字已经覆盖中国大陆99.75%的使用频率。对于<a href=\"http://zh.wikipedia.org/wiki/%E4%BA%BA%E5%90%8D\">人名</a>、<a href=\"http://zh.wikipedia.org/wiki/%E5%8F%A4%E6%B1%89%E8%AF%AD\">古汉语</a>等方面出现的<a href=\"http://zh.wikipedia.org/wiki/%E7%BD%95%E7%94%A8%E5%AD%97\">罕用字</a>，GB2312不能处理，这导致了后来<a href=\"http://zh.wikipedia.org/wiki/GBK\">GBK</a>及<a href=\"http://zh.wikipedia.org/wiki/GB_18030\">GB 18030</a>汉字字符集的出现。</p>\n<p><a href=\"http://www.knowsky.com/resource/gb2312tbl.htm\">GB2312简体中文编码表</a></p>\n<p><a href=\"http://tools.jb51.net/table/gb2312\">GB2312简体中文编码表</a></p>\n<h2 id=\"Unicode\"><a href=\"#Unicode\" class=\"headerlink\" title=\"Unicode\"></a>Unicode</h2><p>Unicode编码系统为表达任意语言的任意字符而设计。它使用4字节的数字来表达每个字母、符号，或者表意文字(ideograph)。每个字符对应一个数字，每个数字对应一个字符，即不存在二义性，不再需要记录”模式”了。U+0041总是代表’A’，即使这种语言没有’A’这个字符。</p>\n<p>在计算机科学领域中，<strong>Unicode</strong>（<strong>统一码</strong>、<strong>万国码</strong>、<strong>单一码</strong>、<strong>标准万国码</strong>）是业界的一种标准，它可以使电脑得以体现世界上数十种文字的系统。</p>\n<p>（<strong>可以这样理解：Unicode是字符集，UTF-32&#x2F; UTF-16&#x2F; UTF-8是三种字符编码方案。</strong>）</p>\n<p><a href=\"https://www.unicode.org/charts/\">Unicode码查询</a></p>\n<p><a href=\"https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84\">Unicode字符平面映射</a></p>\n<h3 id=\"BOM\"><a href=\"#BOM\" class=\"headerlink\" title=\"BOM\"></a>BOM</h3><p>EF BB BF　　　 UTF-8<br>FE FF　　　　　UTF-16&#x2F;UCS-2, little endian<br>FF FE　　　　　UTF-16&#x2F;UCS-2, big endian<br>FF FE 00 00　　UTF-32&#x2F;UCS-4, little endian.<br>00 00 FE FF　　UTF-32&#x2F;UCS-4, big-endian.</p>\n<ul>\n<li><strong>字符集和字符编码</strong></li>\n</ul>\n<p><img src=\"/2022/438d1de3/v2-aee5ae604328ab912b285d03b6c62273_720w.jpg\" alt=\"img\"></p>\n<h3 id=\"UTF-32\"><a href=\"#UTF-32\" class=\"headerlink\" title=\"UTF-32\"></a>UTF-32</h3><p>上述使用4字节的数字来表达每个字母、符号，或者表意文字(ideograph)，每个数字代表唯一的至少在某种语言中使用的符号的编码方案，称为UTF-32。UTF-32又称<strong>UCS-4</strong>是一种将<a href=\"http://zh.wikipedia.org/wiki/Unicode\">Unicode</a>字符编码的协定，对每个字符都使用4字节。就空间而言，是非常没有效率的。</p>\n<p>这种方法有其优点，最重要的一点就是可以在常数时间内定位字符串里的第N个字符，因为第N个字符从第4×Nth个字节开始。虽然每一个码位使用固定长定的字节看似方便，它并不如其它Unicode编码使用得广泛。</p>\n<h3 id=\"UTF-16\"><a href=\"#UTF-16\" class=\"headerlink\" title=\"UTF-16\"></a>UTF-16</h3><p>对于UTF-32和UTF-16编码方式还有一些其他不明显的缺点。不同的计算机系统会以不同的顺序保存字节。这意味着字符U+4E2D在UTF-16编码方式下可能被保存为4E 2D或者2D 4E，这取决于该系统使用的是大尾端(big-endian)还是小尾端(little-endian)。为了解决这个问题，多字节的Unicode编码方式定义了一个”字节顺序标记(Byte Order Mark)”，它是一个特殊的非打印字符，你可以把它包含在文档的开头来指示你所使用的字节顺序。对于UTF-16，字节顺序标记是U+FEFF。如果收到一个以字节FFFE开头的UTF-16编码的文档，你就能确定它的字节顺序是单向的(one way)的了；如果它以FEFF开头，则可以确定字节顺序反向了。</p>\n<p><strong>具体编码方式</strong></p>\n<p>Unicode范围<code>U+10000</code><del><code>U+10FFFF</code>：将Unicode值减去（0x10000），得到20bit长的值。再将Unicode分为高10位和低10位。<a href=\"https://www.zhihu.com/search?q=UTF-16%E7%BC%96%E7%A0%81&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:106379925%7D\">UTF-16编码</a>的高位是2 Byte，高10位Unicode范围为<code>0</code>-<code>0x3FF</code>，将Unicode值加上<code>0XD800</code>，得到高位代理（或称为前导代理，存储高位）；低位也是2 Byte，低十位Unicode范围一样为<code>0</code></del><code>0x3FF</code>，将Unicode值加上<code>0xDC00</code>,得到低位代理（或称为后尾代理，存储低位）</p>\n<p>根据上面的转换方式，我们就能够将Unicode码根据UTF-16的编码方式进行转换。下面我们仍然通过两个例子来看下：</p>\n<ul>\n<li><code>U+0020</code>，这个值的范围在第一部分，即经过UTF-16编码后，结果仍然为<code>U+0020</code>，在内存中的顺序为<code>00 20</code>。</li>\n<li><code>U+12345</code>, 这个值的范围在第二部分，因此需要先减去<code>0x10000</code>，得到<code>0x02345</code>，拆分成高10位<code>00 0000 1000</code>和低10位<code>11 0100 0101</code>。根据上面规则加上特定值后，高位代理值为<code>D808</code>，低位代理值为<code>DF45</code>，最终内存中的顺序为<code>D8 08 DF 45</code>。</li>\n</ul>\n<h3 id=\"UTF-8\"><a href=\"#UTF-8\" class=\"headerlink\" title=\"UTF-8\"></a>UTF-8</h3><p><strong>UTF-8</strong>（8-bit Unicode Transformation Format）是一种针对<a href=\"http://zh.wikipedia.org/wiki/Unicode\">Unicode</a>的可变长度<a href=\"http://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81\">字符编码</a>（<a href=\"http://zh.wikipedia.org/w/index.php?title=%E5%AE%9A%E9%95%BF%E7%A0%81&action=edit&redlink=1\">定长码</a>），也是一种<a href=\"http://zh.wikipedia.org/w/index.php?title=%E5%89%8D%E7%BC%80%E7%A0%81&action=edit&redlink=1\">前缀码</a>。它可以用来表示Unicode标准中的任何字符，且其编码中的第一个<a href=\"http://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82\">字节</a>仍与<a href=\"http://zh.wikipedia.org/wiki/ASCII\">ASCII</a>兼容，这使得原来处理ASCII字符的<a href=\"http://zh.wikipedia.org/wiki/%E8%BB%9F%E9%AB%94\">软件</a>无须或只须做少部份修改，即可继续使用。因此，它逐渐成为<a href=\"http://zh.wikipedia.org/wiki/%E9%9B%BB%E5%AD%90%E9%83%B5%E4%BB%B6\">电子邮件</a>、<a href=\"http://zh.wikipedia.org/wiki/%E7%B6%B2%E9%A0%81\">网页</a>及其他<a href=\"http://zh.wikipedia.org/wiki/%E5%84%B2%E5%AD%98%E8%A3%9D%E7%BD%AE\">存储</a>或传送文字的应用中，优先采用的编码。<a href=\"http://zh.wikipedia.org/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF%E5%B7%A5%E7%A8%8B%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%B5%84\">互联网工程工作小组</a>（IETF）要求所有<a href=\"http://zh.wikipedia.org/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF\">互联网</a><a href=\"http://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE\">协议</a>都必须支持UTF-8编码。</p>\n<p>UTF-8使用一至四个<a href=\"http://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82\">字节</a>为每个字符编码</p>\n<p><strong>具体编码方式</strong></p>\n<p><img src=\"/2022/438d1de3/v2-121a14291638f0b28e1dde7c95d2d379_720w.jpg\" alt=\"img\"></p>\n<p>根据上表，解读 UTF-8 编码非常简单。如果一个字节的第一位是<code>0</code>，则这个字节单独就是一个字符；如果第一位是<code>1</code>，则连续有多少个<code>1</code>，就表示当前字符占用多少个字节。<br>下面，还是以汉字<code>严</code>为例，演示如何实现 <a href=\"https://www.zhihu.com/search?q=UTF-8+%E7%BC%96%E7%A0%81&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:790551384%7D\">UTF-8 编码</a>。<br><code>严</code>的 Unicode 是<code>4E25</code>（<code>100111000100101</code>），根据上表，可以发现<code>4E25</code>处在第三行的范围内（<code>0000 0800 - 0000 FFFF</code>），因此<code>严</code>的 UTF-8 编码需要三个字节，即格式是<code>1110xxxx 10xxxxxx 10xxxxxx</code>。然后，从<code>严</code>的最右边<a href=\"https://www.zhihu.com/search?q=%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%8D&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:790551384%7D\">二进制位</a>开始，依次从右往左填入上边格式中的<code>x</code>，多出的位补<code>0</code>。这样就得到了，<code>严</code>的 UTF-8 编码是<code>11100100 10111000 10100101</code>，转换成<a href=\"https://www.zhihu.com/search?q=%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:790551384%7D\">十六进制</a>就是<code>E4 B8 A5</code>。</p>\n<p><strong>优点</strong></p>\n<ul>\n<li>UTF-8是ASCII的一个<a href=\"http://zh.wikipedia.org/wiki/%E8%B6%85%E9%9B%86\">超集</a>。因为一个纯ASCII字符串也是一个合法的UTF-8字符串，所以现存的ASCII文本不需要转换。为传统的扩展ASCII字符集设计的软件通常可以不经修改或很少修改就能与UTF-8一起使用。</li>\n<li>使用标准的面向字节的排序例程对UTF-8排序将产生与*于Unicode代码点排序相同的结果。（尽管这只有有限的有用性，因为在任何特定语言或文化下都不太可能有仍可接受的文字排列顺序。）</li>\n<li>UTF-8和UTF-16都是<a href=\"http://zh.wikipedia.org/wiki/%E5%8F%AF%E6%89%A9%E5%B1%95%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80\">可扩展标记语言</a>文档的标准编码。所有其它编码都必须通过显式或文本声明来指定。</li>\n<li>任何<a href=\"http://zh.wikipedia.org/w/index.php?title=%E9%9D%A2%E5%90%91%E5%AD%97%E8%8A%82&action=edit&redlink=1\">面向字节</a>的<a href=\"http://zh.wikipedia.org/wiki/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95\">字符串搜索算法</a>都可以用于UTF-8的数据（只要输入仅由完整的UTF-8字符组成）。但是，对于包含字符记数的正则表达式或其它结构必须小心。</li>\n<li>UTF-8字符串可以由一个简单的算法可靠地识别出来。就是，一个字符串在任何其它编码中表现为合法的UTF-8的可能性很低，并随字符串长度增长而减小。举例说，字符值C0,C1,F5至FF从来没有出现。为了更好的可靠性，可以使用正则表达式来统计非法过长和替代值（可以查看<a href=\"http://www.w3.org/International/questions/qa-forms-utf-8\">W3 FAQ: Multilingual Forms</a>上的验证UTF-8字符串的正则表达式）。</li>\n</ul>\n<p><strong>缺点</strong></p>\n<p>因为每个字符使用不同数量的字节编码，所以寻找串中第N个字符是一个O(N)复杂度的操作 — 即，串越长，则需要更多的时间来定位特定的字符。同时，还需要位变换来把字符编码成字节，把字节解码成字符。</p>\n",
            "tags": [
                "character encoding",
                "gb2312",
                "utf-8"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/1d3ed0f3/",
            "url": "https://www.oikiou.top/2022/1d3ed0f3/",
            "title": "VScode插件CommentTranslate在WSL内无效",
            "date_published": "2022-08-10T14:57:15.000Z",
            "content_html": "<h1 id=\"VScode插件CommentTranslate在WSL内无效\"><a href=\"#VScode插件CommentTranslate在WSL内无效\" class=\"headerlink\" title=\"VScode插件CommentTranslate在WSL内无效\"></a>VScode插件CommentTranslate在WSL内无效</h1><h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://github.com/intellism/vscode-comment-translate/issues/64\">https://github.com/intellism/vscode-comment-translate/issues/64</a></p>\n<ol>\n<li><p>找到相关语言语法规则文件。如C&#x2F;CPP、bat、css、java、python，这些文件都是在Windows版本的VSCode中内置的，文件路径在 <code>C:\\Users\\ **userNmae** \\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions</code>改过安装路径的是<code>Microsoft VS Code\\resources\\app\\extensions</code></p>\n<p><img src=\"/2022/1d3ed0f3/image-20220811202401467.png\" alt=\"image-20220811202401467\"></p>\n</li>\n</ol>\n<p>​\t</p>\n<ol>\n<li><p>将语法规则的<strong>高亮规则</strong>文件夹拷贝到远程vscode的相关插件目录。以C语言为例，将<code>cpp</code>目录下的高亮规则文件夹<code>syntaxes</code>拷贝到远程C&#x2F;C++插件（<code>ms-vscode.cpptools-x.x.x</code>）目录下。如果你使用SSH远程，远程插件的目录在<code>~/.vscode-server/extensions/ms-vscode.cpptools-x.x.x</code>。</p>\n<p><img src=\"/2022/1d3ed0f3/image-20220811202845203.png\" alt=\"image-20220811202845203\"></p>\n</li>\n<li><p>修改远程插件，添加语法高亮规则。修改远程插件的<code>package.json</code>文件，如C&#x2F;C++插件（<code>ms-vscode.cpptools-x.x.x</code>）目录下的<code>package.json</code>文件，将刚才cpp语法规则文件夹中的<code>package.json</code>文件的”<code>grammars</code>“部分拷贝出来，粘贴到远程插件的<code>package.json</code>的<code>contributes</code>部分中去。</p>\n<p>如果遇到格式难以复制，可以全选内容然后按Shift+Alt+F格式化选定内容。<img src=\"/2022/1d3ed0f3/image-20220811202944334.png\" alt=\"image-20220811202944334\"></p>\n</li>\n</ol>\n<p><img src=\"/2022/1d3ed0f3/image-20220811203114753.png\" alt=\"image-20220811203114753\"></p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\"><span class=\"hljs-string\">&quot;grammars&quot;</span>: [<br>          &#123;<br>              <span class=\"hljs-string\">&quot;language&quot;</span>: <span class=\"hljs-string\">&quot;c&quot;</span>,<br>              <span class=\"hljs-string\">&quot;scopeName&quot;</span>: <span class=\"hljs-string\">&quot;source.c&quot;</span>,<br>              <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;./syntaxes/c.tmLanguage.json&quot;</span><br>          &#125;,<br>          &#123;<br>              <span class=\"hljs-string\">&quot;language&quot;</span>: <span class=\"hljs-string\">&quot;cpp&quot;</span>,<br>              <span class=\"hljs-string\">&quot;scopeName&quot;</span>: <span class=\"hljs-string\">&quot;source.cpp.embedded.macro&quot;</span>,<br>              <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;./syntaxes/cpp.embedded.macro.tmLanguage.json&quot;</span><br>          &#125;,<br>          &#123;<br>              <span class=\"hljs-string\">&quot;language&quot;</span>: <span class=\"hljs-string\">&quot;cpp&quot;</span>,<br>              <span class=\"hljs-string\">&quot;scopeName&quot;</span>: <span class=\"hljs-string\">&quot;source.cpp&quot;</span>,<br>              <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;./syntaxes/cpp.tmLanguage.json&quot;</span><br>          &#125;,<br>          &#123;<br>              <span class=\"hljs-string\">&quot;scopeName&quot;</span>: <span class=\"hljs-string\">&quot;source.c.platform&quot;</span>,<br>              <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;./syntaxes/platform.tmLanguage.json&quot;</span><br>          &#125;,<br>          &#123;<br>              <span class=\"hljs-string\">&quot;language&quot;</span>: <span class=\"hljs-string\">&quot;cuda-cpp&quot;</span>,<br>              <span class=\"hljs-string\">&quot;scopeName&quot;</span>: <span class=\"hljs-string\">&quot;source.cuda-cpp&quot;</span>,<br>              <span class=\"hljs-string\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;./syntaxes/cuda-cpp.tmLanguage.json&quot;</span><br>          &#125;<br>      ],<br></code></pre></td></tr></table></figure>\n\n",
            "tags": [
                "vscode",
                "commenttranslate",
                "wsl"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/3ef2a47d/",
            "url": "https://www.oikiou.top/2022/3ef2a47d/",
            "title": "搭建KMS",
            "date_published": "2022-07-24T14:57:15.000Z",
            "content_html": "<h1 id=\"KMS\"><a href=\"#KMS\" class=\"headerlink\" title=\"KMS\"></a>KMS</h1><p>KMS（Key Management Service），密钥管理服务</p>\n<p>能够通过KMS进行激活的一般称为VL版,即VOLUME授权版，一般不会单独在零售市场进行发售，一般是直接向企业提供电子ISO映像进行批量授权安装，基于对KMS原理研究成果，我们可以自行搭建KMS激活服务器，实现每180天一次的自动激活，使得系统一直保持激活状态。</p>\n<p>KMS可以激活VOL版本的windows系统和office软件</p>\n<h1 id=\"Docker-部署KMS服务器\"><a href=\"#Docker-部署KMS服务器\" class=\"headerlink\" title=\"Docker 部署KMS服务器\"></a>Docker 部署KMS服务器</h1><p><a href=\"https://registry.hub.docker.com/r/teddysun/kms\">https://registry.hub.docker.com/r/teddysun/kms</a></p>\n<ol>\n<li><p>Pull the image</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull teddysun/kms<br></code></pre></td></tr></table></figure>\n<p>This pulls the latest release of KMS server. It can be found at Docker Hub.</p>\n</li>\n<li><p>Start a container</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 1688:1688 --name kms --restart=always teddysun/kms<br></code></pre></td></tr></table></figure>\n<p>Note: The TCP port number <code>1688</code> must be opened in firewall.</p>\n</li>\n</ol>\n<h1 id=\"激活\"><a href=\"#激活\" class=\"headerlink\" title=\"激活\"></a>激活</h1><h2 id=\"激活windows\"><a href=\"#激活windows\" class=\"headerlink\" title=\"激活windows\"></a>激活windows</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 待激活的主机上指定KMS服务器</span><br>slmgr /skms service_address(你搭建的服务器的地址)<br><br><span class=\"hljs-comment\"># 手动激活</span><br>slmgr /ato<br><br><span class=\"hljs-comment\"># 如果激活失败 尝试更改成GVLK KEY再次激活</span><br><span class=\"hljs-comment\"># 运行以下命令查看系统版本 </span><br>wmic os get caption<br><br><span class=\"hljs-comment\"># 访问下面的网址获取key</span><br><span class=\"hljs-comment\"># https://docs.microsoft.com/zh-cn/windows-server/get-started/kms-client-activation-keys</span><br><span class=\"hljs-comment\"># https://technet.microsoft.com/en-us/library/jj612867.aspx</span><br><span class=\"hljs-comment\"># 得到对应key之后，使用管理员权限运行cmd执行安装key：</span><br>slmgr /ipk xxxxx-xxxxx-xxxxx-xxxxx<br><br><span class=\"hljs-comment\"># 手动激活</span><br>slmgr /ato<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"激活office\"><a href=\"#激活office\" class=\"headerlink\" title=\"激活office\"></a>激活office</h2><p>首先你的OFFICE必须是VOL版本，否则无法激活。 找到你的office安装目录，比如</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">C:<span class=\"hljs-string\">\\Program</span> Files (x86)<span class=\"hljs-string\">\\Microsoft</span> Office<span class=\"hljs-string\">\\Office16</span><br></code></pre></td></tr></table></figure>\n\n<p>64位的就是</p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\">C:<span class=\"hljs-string\">\\Program</span> Files<span class=\"hljs-string\">\\Microsoft</span> Office<span class=\"hljs-string\">\\Office16</span><br></code></pre></td></tr></table></figure>\n<p>office16是office2016，office15就是2013，office14就是2010.</p>\n<p>然后目录对的话，该目录下面应该有个OSPP.VBS。</p>\n<p>直接输入下面的指令去指定KMS服务器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">cscript <span class=\"hljs-string\">&quot;C:\\Program Files (x86)\\Microsoft Office\\Office16\\OSPP.VBS&quot;</span> sethst:service_address(你搭建的服务器的地址)<br><span class=\"hljs-comment\"># or</span><br>cscript <span class=\"hljs-string\">&quot;C:\\Program Files\\Microsoft Office\\Office16\\OSPP.VBS&quot;</span> /sethst:service_address(你搭建的服务器的地址)<br></code></pre></td></tr></table></figure>\n\n<p>一般来说，“一句命令已经完成了”，但一般office不会马上连接kms服务器进行激活，所以我们额外补充一条手动激活命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">cscript ospp.vbs /act<br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"如果遇到报错，请检查：\"><a href=\"#如果遇到报错，请检查：\" class=\"headerlink\" title=\"如果遇到报错，请检查：\"></a>如果遇到报错，请检查：</h1><blockquote>\n<ol>\n<li>你的系统&#x2F;OFFICE是否是批量VL版本</li>\n<li>是否以管理员权限运行CMD</li>\n<li>你的系统&#x2F;OFFICE是否修改过KEY&#x2F;未安装GVLK KEY</li>\n<li>检查你的网络连接</li>\n<li>服务器繁忙，多试试（点击检查KMS服务是否可用）</li>\n<li>根据出错代码自己搜索出错原因</li>\n</ol>\n</blockquote>\n<h2 id=\"windows没有密钥\"><a href=\"#windows没有密钥\" class=\"headerlink\" title=\"windows没有密钥\"></a>windows没有密钥</h2><ul>\n<li>windows VOL KEY</li>\n</ul>\n<p><a href=\"https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys\">https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys</a></p>\n<h2 id=\"检查windows版本\"><a href=\"#检查windows版本\" class=\"headerlink\" title=\"检查windows版本\"></a>检查windows版本</h2><ul>\n<li>检查office是否是VOL版本</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 命令提示符（管理员）执行：cd “office的安装目录”</span><br><span class=\"hljs-built_in\">cd</span> <span class=\"hljs-string\">&quot;C:\\Program Files (x86)\\Microsoft Office\\Office16&quot;</span><br><span class=\"hljs-comment\"># or</span><br><span class=\"hljs-built_in\">cd</span> <span class=\"hljs-string\">&quot;C:\\Program Files\\Microsoft Office\\Office16&quot;</span><br><br><span class=\"hljs-comment\"># 执行：</span><br>cscript ospp.vbs /dstatus<br></code></pre></td></tr></table></figure>\n\n<p>在显示的信息中，如果有“VOLUME”字样就是VOL版，即支持KMS激活</p>\n<h2 id=\"office-密钥\"><a href=\"#office-密钥\" class=\"headerlink\" title=\"office 密钥\"></a>office 密钥</h2><ul>\n<li>卸载office的密钥</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 命令提示符（管理员）执行：cd “office的安装目录”</span><br><span class=\"hljs-built_in\">cd</span> <span class=\"hljs-string\">&quot;C:\\Program Files (x86)\\Microsoft Office\\Office16&quot;</span><br><span class=\"hljs-comment\"># or</span><br><span class=\"hljs-built_in\">cd</span> <span class=\"hljs-string\">&quot;C:\\Program Files\\Microsoft Office\\Office16&quot;</span><br><br><span class=\"hljs-comment\"># 查看当前状态</span><br>cscript ospp.vbs /dstatus<br><br><span class=\"hljs-comment\"># 找到 Last 5 characters of installed product key:XXXXX 语句</span><br><span class=\"hljs-comment\"># 卸载密钥</span><br>cscript ospp.vbs /unpkey:XXXXX<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>查找office的VOL KEY</li>\n</ul>\n<p><a href=\"https://docs.microsoft.com/zh-cn/DeployOffice/vlactivation/gvlks\">https://docs.microsoft.com/zh-cn/DeployOffice/vlactivation/gvlks</a></p>\n<ul>\n<li><p>安装密钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Office 专业增强版 2016</span><br>cscript ospp.vbs /inpkey:XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99<br></code></pre></td></tr></table></figure></li>\n</ul>\n",
            "tags": [
                "kms",
                "office",
                "volume"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/82aca4fc/",
            "url": "https://www.oikiou.top/2022/82aca4fc/",
            "title": "SSL证书的申请和自动续期",
            "date_published": "2022-07-21T14:57:15.000Z",
            "content_html": "<h1 id=\"SSL证书的申请和自动续期\"><a href=\"#SSL证书的申请和自动续期\" class=\"headerlink\" title=\"SSL证书的申请和自动续期\"></a>SSL证书的申请和自动续期</h1><p>Let’s Encrypt 证书续期</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://www.jianshu.com/p/a2d0209fa3f5\">https://www.jianshu.com/p/a2d0209fa3f5</a></p>\n<p><a href=\"https://www.cnblogs.com/esofar/p/9291685.html\">快速签发 Let’s Encrypt 证书指南</a></p>\n<p><a href=\"https://certbot.eff.org/\">https://certbot.eff.org/</a></p>\n<h1 id=\"acme-sh-申请\"><a href=\"#acme-sh-申请\" class=\"headerlink\" title=\"acme.sh 申请\"></a>acme.sh 申请</h1><p>用 acme.sh申请来自动续期ssl证书<br> acme说明：<a href=\"https://links.jianshu.com/go?to=https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E\">https://github.com/Neilpang/acme.sh/wiki/说明</a></p>\n<ol>\n<li>下载acme<code>curl https://get.acme.sh | sh</code>  安装完成后必须关闭当前终端，重新开启一个以使acme.sh命令生效</li>\n<li>执行生成和自动更新命令：<code>acme.sh --issue -d mydomain.com -d www.mydomain.com --webroot /var/www/mydomain.com/</code></li>\n<li>安装证书 <code>cd /etc/nginx; mkdir ssl</code></li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">acme.sh  --installcert  -d  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">domain</span>&gt;</span>.com   \\<br>        --key-file   /etc/nginx/ssl/<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">domain</span>&gt;</span>.key \\<br>        --fullchain-file /etc/nginx/ssl/fullchain.cer \\<br>        --reloadcmd  &quot;service nginx force-reload&quot;<br></code></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>配置nginx使用ssl</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">server &#123;<br>    listen 80 default_server;<br>    listen 443 http2 ssl;<br>    listen [::]:80 default_server;<br><br>    ssl_certificate /etc/nginx/ssl/fullchain.cer;<br>    ssl_certificate_key /etc/nginx/ssl/domain.key;<br>    <span class=\"hljs-comment\">#http转https</span><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$scheme</span> = http ) &#123;<span class=\"hljs-built_in\">return</span> 301 https://$host<span class=\"hljs-variable\">$request_uri</span>;&#125;<br>    root /var/www/html;<br><br>    index index.html index.htm index.nginx-debian.html;<br>    server_name _;<br><br>    ssl_certificate /etc/nginx/ssl/fullchain.cer;<br>    ssl_certificate_key /etc/nginx/ssl/domain.key;<br><br>    location /test &#123;<br>          proxy_pass       http://127.0.0.1:3000;<br>          proxy_http_version 1.1;<br>          proxy_set_header Upgrade <span class=\"hljs-variable\">$http_upgrade</span>;<br>          proxy_set_header Connection <span class=\"hljs-string\">&quot;upgrade&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>前端的Upgrade请求发送给后端服务器，Upgrade和Connection的头信息必须被显式的设置。一旦我们完成以上设置，NGINX就可以处理WebSocket连接了。查看配置在哪里<code>ps -ef|grep nginx</code><br> 多个域名的话，配多个nginx.conf配置。</p>\n<ol start=\"5\">\n<li>查看是否有每日任务<br> <code>crontab -l #查看你的任务</code><br> 手动更新证书<code>acme.sh --renew -d domain.com</code></li>\n</ol>\n<h1 id=\"certbot\"><a href=\"#certbot\" class=\"headerlink\" title=\"certbot\"></a>certbot</h1><p><a href=\"https://certbot.eff.org/\">文档</a></p>\n<p>Ubuntu + nginx <a href=\"https://certbot.eff.org/instructions?ws=nginx&os=ubuntufocal\">https://certbot.eff.org/instructions?ws=nginx&amp;os=ubuntufocal</a></p>\n<p>用certbot来自动续期ssl证书</p>\n<ul>\n<li>需要注意的是安装证书的时候最好把nginx关掉先</li>\n</ul>\n",
            "tags": [
                "ssl",
                "https"
            ]
        },
        {
            "id": "https://www.oikiou.top/2022/f15ac6f4/",
            "url": "https://www.oikiou.top/2022/f15ac6f4/",
            "title": "Nintendo Switch",
            "date_published": "2022-07-21T14:57:15.000Z",
            "content_html": "<h1 id=\"TX-转-大气层\"><a href=\"#TX-转-大气层\" class=\"headerlink\" title=\"TX 转 大气层\"></a>TX 转 大气层</h1><p><a href=\"https://www.bilibili.com/video/BV1DZ4y1B777/?spm_id_from=333.788\">https://www.bilibili.com/video/BV1DZ4y1B777/?spm_id_from=333.788</a></p>\n<h1 id=\"SD卡内文件结构\"><a href=\"#SD卡内文件结构\" class=\"headerlink\" title=\"SD卡内文件结构\"></a>SD卡内文件结构</h1><p><img src=\"/2022/f15ac6f4/image-20221103090149675.png\" alt=\"image-20221103090149675\"></p>\n<ul>\n<li><ul>\n<li></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"OS相关\"><a href=\"#OS相关\" class=\"headerlink\" title=\"OS相关\"></a>OS相关</h1><h2 id=\"三种不同的OS\"><a href=\"#三种不同的OS\" class=\"headerlink\" title=\"三种不同的OS\"></a>三种不同的OS</h2><p><img src=\"/2022/f15ac6f4/image-20221103092334424.png\" alt=\"image-20221103092334424\"></p>\n<ul>\n<li>大气层-真实系统<ul>\n<li>使用的是机身的正版系统, 插件是使用的是大气层的插件</li>\n</ul>\n</li>\n<li>大气层-虚拟系统<ul>\n<li>使用的是SD卡内全虚拟的系统</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"查看当前OS版本和环境\"><a href=\"#查看当前OS版本和环境\" class=\"headerlink\" title=\"查看当前OS版本和环境\"></a>查看当前OS版本和环境</h2><p><img src=\"/2022/f15ac6f4/image-20221103090700699.png\" alt=\"image-20221103090700699\"></p>\n<h2 id=\"系统升级\"><a href=\"#系统升级\" class=\"headerlink\" title=\"系统升级\"></a>系统升级</h2><p><img src=\"/2022/f15ac6f4/image-20221103090149675.png\" alt=\"image-20221103090149675\"></p>\n<ul>\n<li>系统升级相关<ul>\n<li>一般来说<code>Nintendo</code>和<code>emuMMC</code>是需要保留的文件, 其他文件是大气层系统相关的文件</li>\n<li>小版本升级可以直接在相册内用<code>daybreak</code>升级<code>14.1.1-&gt;14.1.2</code>, 大版本升级<code>14.1.2-&gt;15.0.0</code>因为可能需要升级大气层系统(atmosphere)所以需要把SD卡拆下来, 删掉除了<code>Nintendo</code>和<code>emuMMC</code>之外的全部文件, 然后找升级包去覆盖掉.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"资源及参考链接\"><a href=\"#资源及参考链接\" class=\"headerlink\" title=\"资源及参考链接\"></a>资源及参考链接</h2><p><a href=\"https://darthsternie.net/switch-firmwares/\">Switch 离线升级固件(分为 大陆版 和 全球版)</a></p>\n<p><a href=\"https://shipengliang.com/games/switch-%E5%A4%A7%E6%B0%94%E5%B1%82-atmosphere-%E5%A6%82%E4%BD%95%E7%A6%BB%E7%BA%BF%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F.html\">Switch 大气层 Atmosphere 如何离线升降级系统</a></p>\n<p><a href=\"https://shipengliang.com/games/switch-firmware-%e5%9b%ba%e4%bb%b6%e4%b8%8b%e8%bd%bd.html\">Switch Firmware固件最新版、NS 历史版本下载列表：</a></p>\n<h1 id=\"安装游戏\"><a href=\"#安装游戏\" class=\"headerlink\" title=\"安装游戏\"></a>安装游戏</h1><ul>\n<li>需要准备的工具<ul>\n<li>游戏资源</li>\n<li>NS-Usbloader PC端程序</li>\n<li>Awoo NS端</li>\n<li>USB-C 线缆</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h2><ul>\n<li>优先点击广告, 请勿白嫖, 为众人抱薪者，不可使其冻毙于风雪</li>\n</ul>\n<p><a href=\"https://xxxxx520.com/27637.html\">https://xxxxx520.com/27637.html</a></p>\n<p><a href=\"https://xxxxx520.net/3892.html\">https://xxxxx520.net/3892.html</a></p>\n<h2 id=\"NS-Usbloader-PC端\"><a href=\"#NS-Usbloader-PC端\" class=\"headerlink\" title=\"NS-Usbloader PC端\"></a>NS-Usbloader PC端</h2><ul>\n<li>通过USB安装游戏, 以及电脑端开机注入都可用</li>\n<li>这个需要java环境, 安装JRE(Java Runtime Environment)即可.</li>\n</ul>\n<p><a href=\"https://github.com/developersu/ns-usbloader/\">https://github.com/developersu/ns-usbloader/</a></p>\n<h2 id=\"Awoo-NS端\"><a href=\"#Awoo-NS端\" class=\"headerlink\" title=\"Awoo NS端\"></a>Awoo NS端</h2><ul>\n<li>NS端安装游戏</li>\n</ul>\n<p><a href=\"https://github.com/Huntereb/Awoo-Installer\">https://github.com/Huntereb/Awoo-Installer</a></p>\n<h1 id=\"特斯拉插件-Tesla-Menu-类似快捷菜单\"><a href=\"#特斯拉插件-Tesla-Menu-类似快捷菜单\" class=\"headerlink\" title=\"特斯拉插件(Tesla-Menu) 类似快捷菜单\"></a>特斯拉插件(Tesla-Menu) 类似快捷菜单</h1><blockquote>\n<p>  <strong>Switch特斯拉插件</strong>(Tesla-Menu)是一个很实用的功能插件的集合。可以直接在switch系统的任何界面通过组合按键调取左屏幕弹窗打开各种功能的快捷开关！目前已经实现的，开关switch硬件信息显示，开关FPS显示，<strong>开关超频</strong>，切换TV模式，这个平台就好比是简洁版相册，相册里面的各种软件就是完整版，这个Tesla-Menu平台提供的功能就相当于缩减版！不用复杂的操作，只是简单的开关，好处就是精简不占用太多资源！不用来返相册去开关软件！</p>\n</blockquote>\n<p>调出菜单: <code>L + ↓</code></p>\n<p>FPS界面调出: 同时按下 <code>左右摇杆</code></p>\n<h1 id=\"金手指-作弊器\"><a href=\"#金手指-作弊器\" class=\"headerlink\" title=\"金手指(作弊器)\"></a>金手指(作弊器)</h1><p>进入NS的相册, 将NS作为U盘挂载到电脑, <code>DBI -&gt; Run MTP responder</code>, 找到这个目录<code>此电脑\\Switch\\1: External SD Card\\atmosphere\\contents</code>这个目录就是NS的金手指存放位置.</p>\n<p>目录下64位16进制的文件夹名, 这个序号就代表着不同的游戏.</p>\n<p>我们找到对应游戏, 打开文件夹后, 里面会有一个<code>cheats</code>的文件夹, 我们打开它, 里面有一个<code>*.txt</code>文件, 这个文件应该记录的就是内存地址, 我们去网络上找到别人保存好的内存地址信息(<code>cheats</code>文件), 放到这个<code>atmosphere\\contents</code>目录下, 在NS端就能看到对应的金手指修改选项了, 注意可能需要关掉游戏重新开一下.</p>\n<h2 id=\"64位游戏ID-对应-游戏名查询\"><a href=\"#64位游戏ID-对应-游戏名查询\" class=\"headerlink\" title=\"64位游戏ID 对应 游戏名查询\"></a>64位游戏ID 对应 游戏名查询</h2><p>调出特斯拉界面选择金手指, 即可查到游戏ID</p>\n<p><a href=\"https://github.com/ibnux/switch-cheat/blob/master/GAMES.md\">https://github.com/ibnux/switch-cheat/blob/master/GAMES.md</a></p>\n<p><a href=\"https://switchbrew.org/w/index.php?title=Title_list/Games\">https://switchbrew.org/w/index.php?title=Title_list/Games</a></p>\n<h2 id=\"cheats-金手指\"><a href=\"#cheats-金手指\" class=\"headerlink\" title=\"cheats 金手指\"></a>cheats 金手指</h2><p><a href=\"https://github.com/ibnux/switch-cheat\">https://github.com/ibnux/switch-cheat</a></p>\n",
            "tags": [
                "switch",
                "nintendo",
                "game"
            ]
        }
    ]
}