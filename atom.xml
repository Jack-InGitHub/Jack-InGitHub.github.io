<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.oikiou.top</id>
    <title>Oikiou&#39;s Blog</title>
    <link href="https://www.oikiou.top" />
    <updated>2023-03-30T02:23:15.000Z</updated>
    <category term="hp" />
    <category term="chrome" />
    <category term="embedded" />
    <category term="cc2530" />
    <category term="zigbee" />
    <category term="sscanf" />
    <category term="c/c++" />
    <category term="jpeg" />
    <category term="webp" />
    <category term="jpeg2000" />
    <category term="image" />
    <category term="hex" />
    <category term="ssl" />
    <category term="https" />
    <category term="license" />
    <category term="md5" />
    <category term="markdown" />
    <category term="note" />
    <category term="osi" />
    <category term="iap" />
    <category term="bootloader" />
    <category term="stm32" />
    <category term="tags" />
    <category term="label" />
    <category term="category" />
    <category term="typora" />
    <category term="usart" />
    <category term="rts" />
    <category term="cts" />
    <category term="dtr" />
    <category term="dsr" />
    <category term="ws2812" />
    <category term="spi" />
    <category term="dma" />
    <category term="windows" />
    <category term="makefile" />
    <category term="xip" />
    <category term="nor" />
    <category term="nand" />
    <category term="android" />
    <category term="mtp" />
    <category term="pc" />
    <category term="driver" />
    <category term="ip" />
    <category term="location" />
    <category term="api" />
    <category term="zip" />
    <category term="gzip" />
    <category term="bzip" />
    <category term="tar" />
    <category term="zsh" />
    <category term="shell" />
    <category term="linux" />
    <category term="kms" />
    <category term="office" />
    <category term="volume" />
    <category term="DS_Store" />
    <category term="rtf" />
    <category term="后缀" />
    <category term="机智云" />
    <category term="蓝桥杯" />
    <category term="国赛" />
    <category term="ct117e" />
    <category term="character encoding" />
    <category term="gb2312" />
    <category term="utf-8" />
    <category term="ct117e-ex" />
    <category term="超声波" />
    <category term="github" />
    <category term="hosts" />
    <category term="c++" />
    <category term="c" />
    <category term="ms-dos" />
    <category term="micropython" />
    <category term="python" />
    <category term="qt" />
    <category term="pyqt" />
    <category term="pid" />
    <category term="数据结构" />
    <category term="堆栈" />
    <category term="队列" />
    <category term="链表" />
    <category term="树" />
    <category term="二叉树" />
    <category term="正则表达式" />
    <category term="life" />
    <category term="人生" />
    <category term="workflow" />
    <category term="心理学" />
    <category term="cad" />
    <category term="cat_drive" />
    <category term="switch" />
    <category term="nintendo" />
    <category term="game" />
    <category term="hardware" />
    <category term="lenovo" />
    <category term="disk" />
    <category term="摄影" />
    <category term="software" />
    <category term="synology" />
    <category term="cmake" />
    <category term="dslogic" />
    <category term="逻辑分析仪" />
    <category term="pyhton" />
    <category term="decoder" />
    <category term="git" />
    <category term="j-link" />
    <category term="rtt" />
    <category term="serial" />
    <category term="debug" />
    <category term="jlink" />
    <category term="flash" />
    <category term="j-tag" />
    <category term="docker" />
    <category term="dockerfile" />
    <category term="namespace" />
    <category term="cgroup" />
    <category term="dockerhub" />
    <category term="ps" />
    <category term="powershell" />
    <category term="rdpwrap" />
    <category term="rdp" />
    <category term="sourceinsigh" />
    <category term="si" />
    <category term="ide" />
    <category term="vscode" />
    <category term="spacedesk" />
    <category term="投屏" />
    <category term="wordpress" />
    <category term="web" />
    <category term="mysql" />
    <category term="nginx" />
    <category term="speedtest" />
    <category term="tools" />
    <category term="commenttranslate" />
    <category term="wsl" />
    <category term="tmux" />
    <category term="unit" />
    <category term="m" />
    <category term="cm" />
    <category term="mm" />
    <category term="s" />
    <category term="us" />
    <category term="hexo" />
    <category term="jekyll" />
    <category term="fluid" />
    <category term="cusdis" />
    <category term="twikoo" />
    <category term="blog" />
    <category term="gravatar" />
    <category term="cravatar" />
    <category term="cortex-a7" />
    <category term="cortex-m3" />
    <category term="rtx" />
    <category term="rtos" />
    <category term="keil" />
    <category term="raspberry" />
    <category term="wiringpi" />
    <category term="pwm" />
    <category term="ucos" />
    <category term="bluetooth" />
    <category term="蓝牙" />
    <category term="ap" />
    <category term="wifi" />
    <category term="alpha_mini" />
    <category term="正点原子" />
    <category term="modbus" />
    <category term="linuxapp" />
    <category term="curl" />
    <category term="libcurl" />
    <category term="zlib" />
    <category term="minizip" />
    <category term="rt-thread" />
    <entry>
        <id>https://www.oikiou.top/2023/3c5e47f1/</id>
        <title>CMake的使用</title>
        <link rel="alternate" href="https://www.oikiou.top/2023/3c5e47f1/"/>
        <content type="html">&lt;h1 id=&#34;LVGL&#34;&gt;&lt;a href=&#34;#LVGL&#34; class=&#34;headerlink&#34; title=&#34;LVGL&#34;&gt;&lt;/a&gt;LVGL&lt;/h1&gt;&lt;p&gt;Github：&lt;a href=&#34;https://github.com/lvgl/lvgl/&#34;&gt;https://github.com/lvgl/lvgl/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LVGL：&lt;a href=&#34;https://lvgl.io/&#34;&gt;https://lvgl.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LVGL（轻巧多功能图形库）是一个免费的开源图形库，提供创建具有易于使用的图形元素、精美的视觉效果和低内存占用的嵌入式 GUI 所需的一切。&lt;/p&gt;
&lt;h3 id=&#34;特性&#34;&gt;&lt;a href=&#34;#特性&#34; class=&#34;headerlink&#34; title=&#34;特性&#34;&gt;&lt;/a&gt;特性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;丰富且强大的模块化&lt;a href=&#34;https://docs.lvgl.io/master/widgets/index.html&#34;&gt;图形组件&lt;/a&gt;：按钮 (buttons)、图表 (charts)、列表 (lists)、滑动条 (sliders)、图片 (images) 等&lt;/li&gt;
&lt;li&gt;高级的图形引擎：动画、抗锯齿、透明度、平滑滚动、图层混合等效果&lt;/li&gt;
&lt;li&gt;支持多种&lt;a href=&#34;https://docs.lvgl.io/master/overview/indev.html&#34;&gt;输入设备&lt;/a&gt;：触摸屏、 键盘、编码器、按键等&lt;/li&gt;
&lt;li&gt;支持&lt;a href=&#34;https://docs.lvgl.io/master/overview/display.html&#34;&gt;多显示设备&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;不依赖特定的硬件平台，可以在任何显示屏上运行&lt;/li&gt;
&lt;li&gt;配置可裁剪（最低资源占用：64 kB Flash，16 kB RAM）&lt;/li&gt;
&lt;li&gt;基于UTF-8的多语种支持，例如中文、日文、韩文、阿拉伯文等&lt;/li&gt;
&lt;li&gt;可以通过&lt;a href=&#34;https://docs.lvgl.io/master/overview/style.html&#34;&gt;类CSS&lt;/a&gt;的方式来设计、布局图形界面（例如：&lt;a href=&#34;https://docs.lvgl.io/master/layouts/flex.html&#34;&gt;Flexbox&lt;/a&gt;、&lt;a href=&#34;https://docs.lvgl.io/master/layouts/grid.html&#34;&gt;Grid&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;支持操作系统、外置内存、以及硬件加速（LVGL已内建支持STM32 DMA2D、SWM341 DMA2D、NXP PXP和VGLite）&lt;/li&gt;
&lt;li&gt;即便仅有&lt;a href=&#34;https://docs.lvgl.io/master/porting/display.html&#34;&gt;单缓冲区(frame buffer)&lt;/a&gt;的情况下，也可保证渲染如丝般顺滑&lt;/li&gt;
&lt;li&gt;全部由C编写完成，并支持C++调用&lt;/li&gt;
&lt;li&gt;支持Micropython编程，参见：&lt;a href=&#34;https://blog.lvgl.io/2019-02-20/micropython-bindings&#34;&gt;LVGL API in Micropython&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;支持&lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/pc-simulator.html&#34;&gt;模拟器&lt;/a&gt;仿真，可以无硬件依托进行开发&lt;/li&gt;
&lt;li&gt;丰富详实的&lt;a href=&#34;https://github.com/lvgl/lvgl/tree/master/examples&#34;&gt;例程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;详尽的&lt;a href=&#34;http://docs.lvgl.io/&#34;&gt;文档&lt;/a&gt;以及API参考手册，可线上查阅或可下载为PDF格式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;硬件要求&#34;&gt;&lt;a href=&#34;#硬件要求&#34; class=&#34;headerlink&#34; title=&#34;硬件要求&#34;&gt;&lt;/a&gt;硬件要求&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;要求&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;最低要求&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;建议要求&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;架构&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;16、32、64位微控制器或微处理器&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;时钟&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt; 16 MHz&lt;/td&gt;
&lt;td&gt;&amp;gt; 48 MHz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Flash&amp;#x2F;ROM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt; 64 kB&lt;/td&gt;
&lt;td&gt;&amp;gt; 180 kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Static RAM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt; 16 kB&lt;/td&gt;
&lt;td&gt;&amp;gt; 48 kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Draw buffer&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt; 1 × &lt;em&gt;hor. res.&lt;/em&gt; pixels&lt;/td&gt;
&lt;td&gt;&amp;gt; 1&amp;#x2F;10屏幕大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;编译器&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;C99或更新&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;em&gt;注意：资源占用情况与具体硬件平台、编译器等因素有关，上表中仅给出参考值&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;如何入门&#34;&gt;&lt;a href=&#34;#如何入门&#34; class=&#34;headerlink&#34; title=&#34;如何入门&#34;&gt;&lt;/a&gt;如何入门&lt;/h1&gt;&lt;p&gt;请按照如下顺序来学习LVGL：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;a href=&#34;https://lvgl.io/demos&#34;&gt;网页在线例程&lt;/a&gt;来体验LVGL&lt;/li&gt;
&lt;li&gt;阅读文档&lt;a href=&#34;https://docs.lvgl.io/master/intro/index.html&#34;&gt;简介&lt;/a&gt;章节来初步了解LVGL&lt;/li&gt;
&lt;li&gt;再来阅读一下文档快速&lt;a href=&#34;https://docs.lvgl.io/master/get-started/quick-overview.html&#34;&gt;快速概览&lt;/a&gt;章节来了解LVGL的基本知识&lt;/li&gt;
&lt;li&gt;学习如何使用&lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/pc-simulator.html&#34;&gt;模拟器&lt;/a&gt;来在电脑上仿真LVGL&lt;/li&gt;
&lt;li&gt;试着动手实践一些&lt;a href=&#34;https://github.com/lvgl/lvgl/tree/master/examples&#34;&gt;例程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考&lt;a href=&#34;https://docs.lvgl.io/master/porting/index.html&#34;&gt;移植指南&lt;/a&gt;尝试将LVGL移植到一块开发板上，LVGL也已经提供了一些移植好的&lt;a href=&#34;https://github.com/lvgl?q=lv_port_&#34;&gt;工程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;仔细阅读文档&lt;a href=&#34;https://docs.lvgl.io/master/overview/index.html&#34;&gt;总览&lt;/a&gt;章节来更加深入的了解和熟悉LVGL&lt;/li&gt;
&lt;li&gt;浏览文档&lt;a href=&#34;https://docs.lvgl.io/master/widgets/index.html&#34;&gt;组件(Widgets)&lt;/a&gt;章节来了解如何使用它们&lt;/li&gt;
&lt;li&gt;如果你有问题可以到LVGL&lt;a href=&#34;http://forum.lvgl.io/&#34;&gt;论坛&lt;/a&gt;提问&lt;/li&gt;
&lt;li&gt;阅读文档&lt;a href=&#34;https://docs.lvgl.io/master/CONTRIBUTING.html&#34;&gt;如何向社区贡献&lt;/a&gt;章节来看看你能帮LVGL社区做些什么，以促进LVGL软件质量的不断提高&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;模拟器入门&#34;&gt;&lt;a href=&#34;#模拟器入门&#34; class=&#34;headerlink&#34; title=&#34;模拟器入门&#34;&gt;&lt;/a&gt;模拟器入门&lt;/h1&gt;&lt;p&gt;您可以&lt;strong&gt;仅使用PC试用&lt;/strong&gt;LVGL（即没有任何开发板）。LVGL将在PC上的模拟器环境中运行，任何人都可以编写和试验真正的LVGL应用程序。&lt;/p&gt;
&lt;p&gt;在PC上使用模拟器具有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬件独立 - 编写代码，在PC上运行它，并在显示器上查看结果。&lt;/li&gt;
&lt;li&gt;跨平台 - 任何Windows，Linux或macOS系统都可以运行PC模拟器。&lt;/li&gt;
&lt;li&gt;可移植性 - 编写的代码是可移植的，这意味着您可以在迁移到嵌入式硬件时简单地复制它。&lt;/li&gt;
&lt;li&gt;易于验证 - 模拟器对于报告错误也非常有用，因为它为每个用户提供了一个通用平台。因此，最好在模拟器中重现错误并在&lt;a href=&#34;https://forum.lvgl.io/&#34;&gt;论坛&lt;/a&gt;中使用该代码片段。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.lvgl.io/master/get-started/platforms/pc-simulator.html&#34;&gt;PC 上的模拟器 — LVGL 文档&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="linux" />
        <category term="cmake" />
        <updated>2023-03-30T02:23:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2023/3c5e47f1/</id>
        <title>CMake的使用</title>
        <link rel="alternate" href="https://www.oikiou.top/2023/3c5e47f1/"/>
        <content type="html">&lt;h1 id=&#34;CMake&#34;&gt;&lt;a href=&#34;#CMake&#34; class=&#34;headerlink&#34; title=&#34;CMake&#34;&gt;&lt;/a&gt;CMake&lt;/h1&gt;&lt;p&gt;CMake是开源、跨平台的构建工具，可以让我们通过编写简单的配置文件去生成本地的Makefile，这个配置文件是&lt;strong&gt;独立于运行平台和编译器&lt;/strong&gt;的，这样就不用亲自去编写Makefile了，而且配置文件可以直接拿到其它平台上使用，无需修改，非常方便。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/whahu1989/article/details/82078563&#34;&gt;Linux下CMake简明教程_linux中cmake_爱就是恒久忍耐的博客-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;CMake-的安装&#34;&gt;&lt;a href=&#34;#CMake-的安装&#34; class=&#34;headerlink&#34; title=&#34;CMake 的安装&#34;&gt;&lt;/a&gt;CMake 的安装&lt;/h1&gt;&lt;h2 id=&#34;Ubuntu下的安装&#34;&gt;&lt;a href=&#34;#Ubuntu下的安装&#34; class=&#34;headerlink&#34; title=&#34;Ubuntu下的安装&#34;&gt;&lt;/a&gt;Ubuntu下的安装&lt;/h2&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;$ &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;sudo apt-get install cmake&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;$ &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;cmake --version&lt;/span&gt;&lt;br&gt;cmake version 3.16.3&lt;br&gt;.....&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;这样就安装好了&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;CMake语法&#34;&gt;&lt;a href=&#34;#CMake语法&#34; class=&#34;headerlink&#34; title=&#34;CMake语法&#34;&gt;&lt;/a&gt;CMake语法&lt;/h1&gt;&lt;h2 id=&#34;最简单的版本&#34;&gt;&lt;a href=&#34;#最简单的版本&#34; class=&#34;headerlink&#34; title=&#34;最简单的版本&#34;&gt;&lt;/a&gt;最简单的版本&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  环境：只有一个main.c的&lt;code&gt;hello world&lt;/code&gt;文件，没有任何依赖。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在&lt;code&gt;main.c&lt;/code&gt;的同级目录下建立一个文件，文件名叫&lt;code&gt;CMakeFileLists.txt&lt;/code&gt;，这个文件名不能变更，只能是这个形式。&lt;/p&gt;
&lt;p&gt;文件内容如下：&lt;/p&gt;
&lt;figure class=&#34;highlight cmake&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs cmake&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# cmake的最低版本要求是2.8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;cmake_minimum_required&lt;/span&gt;(VERSION &lt;span class=&#34;hljs-number&#34;&gt;2.8&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 工程名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;project&lt;/span&gt;(download)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 使用main.c这个源文件 生成elf文件 生成的文件名字叫main&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;add_executable&lt;/span&gt;(main, main.c)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;我们在当前目录（&lt;code&gt;main.c&lt;/code&gt;和&lt;code&gt;CMakeFileLists.txt&lt;/code&gt;的目录下）运行&lt;code&gt;cmake .&lt;/code&gt;，含义就是在当前目录下执行cmake。执行成功后会生成&lt;code&gt;Makefils&lt;/code&gt;以及一些cmake运行时自动生成的文件。&lt;/p&gt;
&lt;p&gt;这个时候我们使用命令&lt;code&gt;make&lt;/code&gt;就可以看到正确编译了。&lt;/p&gt;
&lt;h2 id=&#34;一个目录下的多个源文件&#34;&gt;&lt;a href=&#34;#一个目录下的多个源文件&#34; class=&#34;headerlink&#34; title=&#34;一个目录下的多个源文件&#34;&gt;&lt;/a&gt;一个目录下的多个源文件&lt;/h2&gt;&lt;figure class=&#34;highlight cmake&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs cmake&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;cmake_minimum_required&lt;/span&gt; (VERSION &lt;span class=&#34;hljs-number&#34;&gt;2.8&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;project&lt;/span&gt; (demo)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 当前目录下的源文件存列表存放到变量SRC_LIST里&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;aux_source_directory&lt;/span&gt;(. SRC_LIST)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 在add_executable里调用SRC_LIST（注意调用变量时的写法）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;add_executable&lt;/span&gt;(main &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;SRC_LIST&amp;#125;&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;aux_source_directory()&lt;/code&gt;也存在弊端，它&lt;strong&gt;会把指定目录下的所有源文件都加进来&lt;/strong&gt;，可能会加入一些我们不需要的文件，此时我们可以使用&lt;strong&gt;set命令&lt;/strong&gt;去新建变量来存放需要的源文件&lt;/p&gt;
&lt;figure class=&#34;highlight cmake&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs cmake&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;cmake_minimum_required&lt;/span&gt; (VERSION &lt;span class=&#34;hljs-number&#34;&gt;2.8&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;project&lt;/span&gt; (demo)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# set 命令设置变量存放源文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;set&lt;/span&gt;( SRC_LIST&lt;br&gt;	 ./main.c&lt;br&gt;	 ./testFunc1.c&lt;br&gt;	 ./testFunc.c)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;add_executable&lt;/span&gt;(main &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;SRC_LIST&amp;#125;&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;不同目录下的多个源文件&#34;&gt;&lt;a href=&#34;#不同目录下的多个源文件&#34; class=&#34;headerlink&#34; title=&#34;不同目录下的多个源文件&#34;&gt;&lt;/a&gt;不同目录下的多个源文件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  文件结构&lt;/p&gt;
  &lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;./bin&lt;br&gt;./build&lt;br&gt;./include&lt;br&gt;	xx.h&lt;br&gt;	xxx.h&lt;br&gt;./src&lt;br&gt;	xxx.c&lt;br&gt;	xx.c&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight cmake&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs cmake&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;cmake_minimum_required&lt;/span&gt; (VERSION &lt;span class=&#34;hljs-number&#34;&gt;2.8&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;project&lt;/span&gt; (demo)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 修改输出位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# EXECUTABLE_OUT_PATH和PROJECT_SOURCE_DIR是CMake自带的预定义变量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# EXECUTABLE_OUTPUT_PATH ：目标二进制可执行文件的存放位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# PROJECT_SOURCE_DIR：工程的根目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;set&lt;/span&gt; (EXECUTABLE_OUTPUT_PATH &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;PROJECT_SOURCE_DIR&amp;#125;&lt;/span&gt;/bin)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 当前src目录下的源文件存列表存放到变量SRC_LIST里&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;aux_source_directory&lt;/span&gt; (src SRC_LIST)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 将include文件夹设定为头文件搜索路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 该命令是用来向工程添加多个指定头文件的搜索路径，路径之间用空格分隔。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;include_directories&lt;/span&gt; (&lt;span class=&#34;hljs-keyword&#34;&gt;include&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 生成elf文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;add_executable&lt;/span&gt; (main &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;SRC_LIST&amp;#125;&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;静态库和动态库的编译&#34;&gt;&lt;a href=&#34;#静态库和动态库的编译&#34; class=&#34;headerlink&#34; title=&#34;静态库和动态库的编译&#34;&gt;&lt;/a&gt;静态库和动态库的编译&lt;/h2&gt;&lt;p&gt;编译出动态库和静态库，然后等着让其它程序去使用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  文件结构&lt;/p&gt;
  &lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;./bin&lt;br&gt;./build&lt;br&gt;./lib&lt;br&gt;./include&lt;br&gt;	xx.h&lt;br&gt;	xxx.h&lt;br&gt;./src&lt;br&gt;	xxx.c&lt;br&gt;	xx.c&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight cmake&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs cmake&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;cmake_minimum_required&lt;/span&gt; (VERSION &lt;span class=&#34;hljs-number&#34;&gt;3.5&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;project&lt;/span&gt; (demo)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;set&lt;/span&gt; (SRC_LIST &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;PROJECT_SOURCE_DIR&amp;#125;&lt;/span&gt;/src/xxx.c)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 生成动态库或静态库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 第1个参数指定库的名字；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 第2个参数决定是动态还是静态，如果没有就默认静态；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 第3个参数指定生成库的源文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;add_library&lt;/span&gt; (testFunc_shared SHARED &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;SRC_LIST&amp;#125;&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;add_library&lt;/span&gt; (testFunc_static STATIC &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;SRC_LIST&amp;#125;&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 设置最终生成的库的名称，还有其它功能，如设置库的版本号等等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;set_target_properties&lt;/span&gt; (testFunc_shared PROPERTIES OUTPUT_NAME &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;testFunc&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;set_target_properties&lt;/span&gt; (testFunc_static PROPERTIES OUTPUT_NAME &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;testFunc&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;set&lt;/span&gt; (LIBRARY_OUTPUT_PATH &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;PROJECT_SOURCE_DIR&amp;#125;&lt;/span&gt;/lib)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;对库进行链接&#34;&gt;&lt;a href=&#34;#对库进行链接&#34; class=&#34;headerlink&#34; title=&#34;对库进行链接&#34;&gt;&lt;/a&gt;对库进行链接&lt;/h2&gt;&lt;figure class=&#34;highlight cmake&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs cmake&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;find_library&lt;/span&gt;(TESTFUNC_LIB testFunc HINTS &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;PROJECT_SOURCE_DIR&amp;#125;&lt;/span&gt;/testFunc/lib)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;target_link_libraries&lt;/span&gt; (main &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;TESTFUNC_LIB&amp;#125;&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;find_library: 在指定目录下查找指定库，并把&lt;strong&gt;库的绝对路径&lt;/strong&gt;存放到变量里，其第一个参数是变量名称，第二个参数是库名称，第三个参数是HINTS，第4个参数是路径，其它用法可以参考cmake文档&lt;/li&gt;
&lt;li&gt;target_link_libraries: 把目标文件与库文件进行链接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ps：在lib目录下有testFunc的静态库和动态库，find_library(TESTFUNC_LIB testFunc …默认是查找动态库，如果想直接指定使用动态库还是静态库，可以写成find_library(TESTFUNC_LIB libtestFunc.so …或者find_library(TESTFUNC_LIB libtestFunc.a …&lt;/p&gt;
&lt;p&gt;ps： 查看elf文件使用了哪些库，可以使用readelf -d .&amp;#x2F;xx来查看&lt;/p&gt;
&lt;p&gt;之前本节教程使用的是库查找方法是link_directories，但是很多读者反映运行时有问题，本人去官方文档上查了下，发现不建议使用了，推荐使用find_library或者find_package&lt;/p&gt;
&lt;h2 id=&#34;添加编译选项&#34;&gt;&lt;a href=&#34;#添加编译选项&#34; class=&#34;headerlink&#34; title=&#34;添加编译选项&#34;&gt;&lt;/a&gt;添加编译选项&lt;/h2&gt;&lt;p&gt;有时编译程序时想添加一些编译选项，如-Wall，-std&amp;#x3D;c++11等，就可以使用add_compile_options来进行操作。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;add_compile_options(-std=c++11 -Wall) &lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;更加完善的目录结构及编译选项&#34;&gt;&lt;a href=&#34;#更加完善的目录结构及编译选项&#34; class=&#34;headerlink&#34; title=&#34;更加完善的目录结构及编译选项&#34;&gt;&lt;/a&gt;更加完善的目录结构及编译选项&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  文件结构&lt;/p&gt;
&lt;p&gt;  构建的时候我们需要先&lt;code&gt;cd build&lt;/code&gt;，然后再&lt;code&gt;cmake ..&lt;/code&gt;构建，最后&lt;code&gt;make -j8&lt;/code&gt;编译即可。&lt;/p&gt;
  &lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;.&lt;br&gt;├── build&lt;br&gt;├── CMakeLists.txt&lt;br&gt;├── libzip&lt;br&gt;│   ├── ioapi.c&lt;br&gt;│   ├── ioapi.h&lt;br&gt;│   ├── unzip.c&lt;br&gt;│   └── unzip.h&lt;br&gt;├── main&lt;br&gt;│   └── curl_zip.c&lt;br&gt;├── tools&lt;br&gt;    └── log&lt;br&gt;        └── log.h&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;cmake_minimum_required(VERSION 3.0)&lt;br&gt;project(curl_zip)&lt;br&gt;&lt;br&gt;set(Target down)&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置语言标准&lt;/span&gt;&lt;br&gt;set(CMAKE_C_STANDARD 11)&lt;br&gt;set(CMAKE_CXX_STANDARD 17)&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;为当前路径以及子目录的源文件加入由-D预编译定义&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;add_definitions(-DFOO -DDEBUG ...)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置C++编译参数(CMAKE_CXX_FLAGS是全局变量)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt;(CMAKE_CXX_FLAGS &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;-Wall std=c++11 -Wextra -fPIC -g&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置指定的C++编译器版本是必须的，如果不设置，或者为OFF，则指定版本不可用时，会使用上一版本。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt;(CMAKE_CXX_STANDARD_REQUIRED ON)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置编译器选项&lt;/span&gt;&lt;br&gt;add_compile_options(-O3 -Wall) &lt;br&gt;&lt;br&gt;&lt;br&gt;message(&amp;quot;Target=&amp;quot; $&amp;#123;Target&amp;#125;)&lt;br&gt;message(&amp;quot;---------- Start building ----------&amp;quot;)&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;设置包含路径&lt;/span&gt;&lt;br&gt;include_directories(    $&amp;#123;PROJECT_SOURCE_DIR&amp;#125;/libzip&lt;br&gt;                        $&amp;#123;PROJECT_SOURCE_DIR&amp;#125;/tools/log&lt;br&gt;)&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;把xxx目录下所有源文件写入变量SRC_LIST&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;aux_source_directory($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;#123;PROJECT_SOURCE_DIR&amp;#125;/libzip           SRC_LIST)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;aux_source_directory($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;#123;PROJECT_SOURCE_DIR&amp;#125;/src/curl         SRC_LIST)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;aux_source_directory($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;#123;PROJECT_SOURCE_DIR&amp;#125;/main             SRC_LIST)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;以SRC_LIST为源文件生成目标文件xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;add_executable($&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&amp;#123;Target&amp;#125; &lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;SRC_LIST&amp;#125;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;创建库文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;add_library(&amp;lt;name&amp;gt; [STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] source1 source2 ... sourceN)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;目标文件链接的库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;target_link_libraries() 总是指明 PRIVATE、PUBLIC 、INTERFACE&lt;/span&gt;&lt;br&gt;target_link_libraries( $&amp;#123;Target&amp;#125;&lt;br&gt;    pthread&lt;br&gt;    curl&lt;br&gt;    z&lt;br&gt;)&lt;br&gt;&lt;br&gt;message(&amp;quot;---------- Stop  building ----------&amp;quot;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

































</content>
        <category term="linux" />
        <category term="cmake" />
        <updated>2023-03-29T13:57:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2023/47a3870e/</id>
        <title>Linux 应用编程</title>
        <link rel="alternate" href="https://www.oikiou.top/2023/47a3870e/"/>
        <content type="html">&lt;h1 id=&#34;Linux-Application-Programming&#34;&gt;&lt;a href=&#34;#Linux-Application-Programming&#34; class=&#34;headerlink&#34; title=&#34;Linux Application Programming&#34;&gt;&lt;/a&gt;Linux Application Programming&lt;/h1&gt;&lt;h1 id=&#34;标准IO库-lt-stdio-h-gt&#34;&gt;&lt;a href=&#34;#标准IO库-lt-stdio-h-gt&#34; class=&#34;headerlink&#34; title=&#34;标准IO库 &amp;lt;stdio.h&amp;gt;&#34;&gt;&lt;/a&gt;标准IO库 &amp;lt;stdio.h&amp;gt;&lt;/h1&gt;&lt;h2 id=&#34;字符串&#34;&gt;&lt;a href=&#34;#字符串&#34; class=&#34;headerlink&#34; title=&#34;字符串&#34;&gt;&lt;/a&gt;字符串&lt;/h2&gt;&lt;h3 id=&#34;strtol-字符串转long-int&#34;&gt;&lt;a href=&#34;#strtol-字符串转long-int&#34; class=&#34;headerlink&#34; title=&#34;strtol() 字符串转long int&#34;&gt;&lt;/a&gt;strtol() 字符串转long int&lt;/h3&gt;&lt;p&gt;C 库函数 &lt;code&gt;strtol()&lt;/code&gt; 把参数 &lt;strong&gt;str&lt;/strong&gt; 所指向的字符串根据给定的 &lt;strong&gt;base&lt;/strong&gt; 转换为一个长整数（类型为 long int 型），base 必须介于 2 和 36（包含）之间，或者是特殊值 0。&lt;/p&gt;
&lt;p&gt;strtol() 方法将具有字符串数据类型的值转换为长整数。strtol() 方法跳过字符串开头的所有空白字符，将连续的字符转换为部分的一部分，然后在到达第一个非数字字符时终止。&lt;/p&gt;
&lt;h4 id=&#34;声明&#34;&gt;&lt;a href=&#34;#声明&#34; class=&#34;headerlink&#34; title=&#34;声明&#34;&gt;&lt;/a&gt;声明&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;strtol&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *str, &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; **endptr, &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; base)&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;参数&#34;&gt;&lt;a href=&#34;#参数&#34; class=&#34;headerlink&#34; title=&#34;参数&#34;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;str&lt;/strong&gt; – 要转换为长整数的字符串。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;endptr&lt;/strong&gt; – 对类型为 char* 的对象的引用，其值由函数设置为 &lt;strong&gt;str&lt;/strong&gt; 中数值后的下一个字符。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;base&lt;/strong&gt; – 基数，必须介于 2 和 36（包含）之间，或者是特殊值 0。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值&#34;&gt;&lt;a href=&#34;#返回值&#34; class=&#34;headerlink&#34; title=&#34;返回值&#34;&gt;&lt;/a&gt;返回值&lt;/h4&gt;&lt;p&gt;该函数返回转换后的长整数，如果没有执行有效的转换，则返回一个零值。&lt;/p&gt;
&lt;h4 id=&#34;实例&#34;&gt;&lt;a href=&#34;#实例&#34; class=&#34;headerlink&#34; title=&#34;实例&#34;&gt;&lt;/a&gt;实例&lt;/h4&gt;&lt;p&gt;下面的实例演示了 strtol() 函数的用法。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;()&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;   &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; str[&lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt;] = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;2030300 This is test&amp;quot;&lt;/span&gt;;&lt;br&gt;   &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *ptr;&lt;br&gt;   &lt;span class=&#34;hljs-type&#34;&gt;long&lt;/span&gt; ret;&lt;br&gt;&lt;br&gt;   ret = strtol(str, &amp;amp;ptr, &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;);&lt;br&gt;   &lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;数字（无符号长整数）是 %ld\n&amp;quot;&lt;/span&gt;, ret);&lt;br&gt;   &lt;span class=&#34;hljs-built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;字符串部分是 |%s|&amp;quot;&lt;/span&gt;, ptr);&lt;br&gt;&lt;br&gt;   &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt;(&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;输出：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;数字（无符号长整数）是 2030300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;字符串部分是 | This is test|&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;strtok-用分隔符分解字符串&#34;&gt;&lt;a href=&#34;#strtok-用分隔符分解字符串&#34; class=&#34;headerlink&#34; title=&#34;strtok() 用分隔符分解字符串&#34;&gt;&lt;/a&gt;strtok() 用分隔符分解字符串&lt;/h3&gt;&lt;h4 id=&#34;描述&#34;&gt;&lt;a href=&#34;#描述&#34; class=&#34;headerlink&#34; title=&#34;描述&#34;&gt;&lt;/a&gt;描述&lt;/h4&gt;&lt;p&gt;C 库函数 &lt;code&gt;strtok()&lt;/code&gt; 分解字符串 &lt;strong&gt;str&lt;/strong&gt; 为一组字符串，&lt;strong&gt;delim&lt;/strong&gt; 为分隔符。&lt;/p&gt;
&lt;h4 id=&#34;声明-1&#34;&gt;&lt;a href=&#34;#声明-1&#34; class=&#34;headerlink&#34; title=&#34;声明&#34;&gt;&lt;/a&gt;声明&lt;/h4&gt;&lt;p&gt;下面是 strtok() 函数的声明。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *&lt;span class=&#34;hljs-title function_&#34;&gt;strtok&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *str, &lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *delim)&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;参数-1&#34;&gt;&lt;a href=&#34;#参数-1&#34; class=&#34;headerlink&#34; title=&#34;参数&#34;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;str&lt;/strong&gt; – 要被分解成一组小字符串的字符串。输入NULL则是从上次结束的位置继续查找。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;delim&lt;/strong&gt; – 包含分隔符的 C 字符串。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-1&#34;&gt;&lt;a href=&#34;#返回值-1&#34; class=&#34;headerlink&#34; title=&#34;返回值&#34;&gt;&lt;/a&gt;返回值&lt;/h4&gt;&lt;p&gt;该函数返回被分解的第一个子字符串，如果没有可检索的字符串，则返回一个空指针。&lt;/p&gt;
&lt;h4 id=&#34;实例-1&#34;&gt;&lt;a href=&#34;#实例-1&#34; class=&#34;headerlink&#34; title=&#34;实例&#34;&gt;&lt;/a&gt;实例&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; str[] = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;8.8.8.8&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; s[] = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt; &lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *token;&lt;br&gt;token = strtok(str, s);&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;while&lt;/span&gt; (token != &lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;)&lt;br&gt;&amp;#123;&lt;br&gt;    token = strtok(&lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;, s);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;让我们编译并运行上面的程序，这将产生以下结果：&lt;/p&gt;
&lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;This is &lt;br&gt; www&lt;span class=&#34;hljs-selector-class&#34;&gt;.runoob&lt;/span&gt;&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt; &lt;br&gt; website&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h2 id=&#34;文件&#34;&gt;&lt;a href=&#34;#文件&#34; class=&#34;headerlink&#34; title=&#34;文件&#34;&gt;&lt;/a&gt;文件&lt;/h2&gt;&lt;h3 id=&#34;fclose&#34;&gt;&lt;a href=&#34;#fclose&#34; class=&#34;headerlink&#34; title=&#34;fclose()&#34;&gt;&lt;/a&gt;fclose()&lt;/h3&gt;&lt;p&gt;关闭流 stream。刷新所有的缓冲区（相当于做了fflush）。&lt;/p&gt;
&lt;h4 id=&#34;fclose函数的作用&#34;&gt;&lt;a href=&#34;#fclose函数的作用&#34; class=&#34;headerlink&#34; title=&#34;fclose函数的作用&#34;&gt;&lt;/a&gt;&lt;strong&gt;fclose函数的作用&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;清空相关的缓冲区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以写文件为例,程序会先将文本信息存入缓冲区中,然后根据缓冲区刷新指令或者等缓冲区满了以后才向文件写入,那么我们如果不使用fclose()关闭流,就有可能有部分文本信息在缓冲区中没有写入到文本文件中,从而导致文本信息缺失.但是这东西看运气.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;释放内存&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们知道,如果我们不手动关闭这个流,系统会维持打开的状态,维持当然需要消耗一定的内存资源,本着苍蝇再小也是块肉的原则当然是要把它关掉了,其实如果有很多流在使用后没有关闭,这部分内存资源也是十分可观的.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;多次fclose-会发生什么&#34;&gt;&lt;a href=&#34;#多次fclose-会发生什么&#34; class=&#34;headerlink&#34; title=&#34;多次fclose()会发生什么&#34;&gt;&lt;/a&gt;多次fclose()会发生什么&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;  &lt;strong&gt;能不能多次对同一个文件描述符调用fclose？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;答案是不行的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;  为啥不行，我们需要看看fclose到底干了什么&lt;/p&gt;
&lt;p&gt;  fclose关闭的是一个文件流，当调用fclose时，将会使用户态（C库）缓冲区中的数据刷新到内核区域（或通过socket发送，或者仅仅写回硬盘）。&lt;br&gt;  于此同时，fclose会调用free来释放fp所指向的用户态buffer。&lt;/p&gt;
&lt;p&gt;  因此，如果多次调用fclose，会多次调用free来释放一块已经被释放的区域，而这个动作是危险的。&lt;br&gt;  很多解释是说，因为一旦被释放之后，这块区域就属于未知区域。有可能系统已经把该区域分给了其他进程，所以不能多次fclose。&lt;/p&gt;
&lt;p&gt;  但是我看过Linux关于close的内核源码，发现并不是这样，当第一次调用close时，将会把对应的文件描述符数组flip[fp] &amp;#x3D; NULL。如果再调用close时，会在前面判断该项是否为null，如果为null，return -EINVAL;因此，多次调用fclose时会报错，但不会影响系统其他进程。&lt;/p&gt;
&lt;p&gt;  &lt;a href=&#34;https://blog.csdn.net/zdavb/article/details/49069803&#34;&gt;来源CSDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;  *&lt;em&gt;调用fclose之后，FILE &lt;em&gt;fp会变成NULL吗？&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;  不会，没有什么机制把fp置空的动作，只是这个时候fp所指向的区域已经不再有效。&lt;/p&gt;
&lt;p&gt;  &lt;a href=&#34;https://blog.csdn.net/zdavb/article/details/49069803&#34;&gt;来源CSDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;fflush&#34;&gt;&lt;a href=&#34;#fflush&#34; class=&#34;headerlink&#34; title=&#34;fflush()&#34;&gt;&lt;/a&gt;fflush()&lt;/h3&gt;&lt;p&gt;刷新流 stream 的输出缓冲区，将数据刷新到内核缓冲。&lt;/p&gt;
&lt;h4 id=&#34;描述-1&#34;&gt;&lt;a href=&#34;#描述-1&#34; class=&#34;headerlink&#34; title=&#34;描述&#34;&gt;&lt;/a&gt;描述&lt;/h4&gt;&lt;p&gt;C 库函数 &lt;strong&gt;int fflush(FILE *stream)&lt;/strong&gt; 刷新流 stream 的输出缓冲区。&lt;/p&gt;
&lt;h4 id=&#34;声明-2&#34;&gt;&lt;a href=&#34;#声明-2&#34; class=&#34;headerlink&#34; title=&#34;声明&#34;&gt;&lt;/a&gt;声明&lt;/h4&gt;&lt;p&gt;下面是 fflush() 函数的声明。&lt;/p&gt;
&lt;figure class=&#34;highlight fortran&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs fortran&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;int&lt;/span&gt; fflush(&lt;span class=&#34;hljs-keyword&#34;&gt;FILE&lt;/span&gt; *stream)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;参数-2&#34;&gt;&lt;a href=&#34;#参数-2&#34; class=&#34;headerlink&#34; title=&#34;参数&#34;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;stream&lt;/strong&gt; – 这是指向 FILE 对象的指针，该 FILE 对象指定了一个缓冲流。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-2&#34;&gt;&lt;a href=&#34;#返回值-2&#34; class=&#34;headerlink&#34; title=&#34;返回值&#34;&gt;&lt;/a&gt;返回值&lt;/h4&gt;&lt;p&gt;如果成功，该函数返回零值。如果发生错误，则返回 EOF，且设置错误标识符（即 feof）。&lt;/p&gt;
&lt;h3 id=&#34;fsync&#34;&gt;&lt;a href=&#34;#fsync&#34; class=&#34;headerlink&#34; title=&#34;fsync()&#34;&gt;&lt;/a&gt;fsync()&lt;/h3&gt;&lt;p&gt;fsync函数同步内存中所有已修改的文件数据到储存设备。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// 头文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// 原型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;fsync&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; fd)&lt;/span&gt;;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// 参数&lt;/span&gt;&lt;br&gt;fd 是该进程打开来的文件描述符&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// 返回值&lt;/span&gt;&lt;br&gt;函数成功执行时，返回&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;。失败返回&lt;span class=&#34;hljs-number&#34;&gt;-1&lt;/span&gt;，errno被设为以下的某个值&lt;br&gt;EBADF：文件描述词无效&lt;br&gt;EIO：读写的过程中发生错误&lt;br&gt;EROFS, EINVAL：文件所在的文件系统不支持同步&lt;br&gt;调用 fsync 可以保证文件的修改时间也被更新。fsync 系统调用可以使您精确的强制每次写入都被更新到磁盘中。您也可以使用同步（synchronous）I/O 操作打开一个文件，这将引起所有写数据都立刻被提交到磁盘中。通过在 open 中指定 O_SYNC 标志启用同步I/O。&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;错误输出&#34;&gt;&lt;a href=&#34;#错误输出&#34; class=&#34;headerlink&#34; title=&#34;错误输出&#34;&gt;&lt;/a&gt;错误输出&lt;/h2&gt;&lt;h3 id=&#34;perror&#34;&gt;&lt;a href=&#34;#perror&#34; class=&#34;headerlink&#34; title=&#34;perror()&#34;&gt;&lt;/a&gt;perror()&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;  errno是一个错误编号，本质上是一个整形的变量，每个错误对应着一个错误编号，当你调用”&lt;strong&gt;某些&lt;/strong&gt;“函数出错时，这个函数会更新errno的值。&lt;/p&gt;
&lt;p&gt;  也就是说，并不是所有的函数都会将错误编号输出到errno变量中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C 库函数 &lt;strong&gt;void perror(const char *str)&lt;/strong&gt; 把一个描述性错误消息输出到标准错误 stderr。首先输出字符串 &lt;strong&gt;str&lt;/strong&gt;，后跟一个冒号，然后是一个空格。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;声明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面是 perror() 函数的声明。&lt;/p&gt;
&lt;figure class=&#34;highlight axapta&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs axapta&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;void&lt;/span&gt; perror(&lt;span class=&#34;hljs-keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;char&lt;/span&gt; *&lt;span class=&#34;hljs-built_in&#34;&gt;str&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;str&lt;/strong&gt; – 这是 C 字符串，包含了一个自定义消息，将显示在原本的错误消息之前。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;lt-stdlib-h-gt&#34;&gt;&lt;a href=&#34;#lt-stdlib-h-gt&#34; class=&#34;headerlink&#34; title=&#34;&amp;lt;stdlib.h&amp;gt;&#34;&gt;&lt;/a&gt;&amp;lt;stdlib.h&amp;gt;&lt;/h1&gt;&lt;h2 id=&#34;字符串-1&#34;&gt;&lt;a href=&#34;#字符串-1&#34; class=&#34;headerlink&#34; title=&#34;字符串&#34;&gt;&lt;/a&gt;字符串&lt;/h2&gt;&lt;h3 id=&#34;atoi-字符串转int&#34;&gt;&lt;a href=&#34;#atoi-字符串转int&#34; class=&#34;headerlink&#34; title=&#34;atoi() 字符串转int&#34;&gt;&lt;/a&gt;atoi() 字符串转int&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;atoi&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *str)&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;将字符串参数&lt;strong&gt;str&lt;/strong&gt;转换为整数（int 类型）。&lt;/p&gt;
&lt;p&gt;在字符串的开头，atoi() 方法忽略所有空格，转换紧跟在空格之后的单词，然后在遇到第一个非数字单词时停止。atoi() 模块实现了字符串的整数描述。&lt;/p&gt;
&lt;h4 id=&#34;参数-3&#34;&gt;&lt;a href=&#34;#参数-3&#34; class=&#34;headerlink&#34; title=&#34;参数&#34;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;str&lt;/strong&gt; – 这是整数的字符串表示形式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-3&#34;&gt;&lt;a href=&#34;#返回值-3&#34; class=&#34;headerlink&#34; title=&#34;返回值&#34;&gt;&lt;/a&gt;返回值&lt;/h4&gt;&lt;p&gt;此函数将转换后的整数作为 int 值返回。如果无法执行有效的转换，则返回零。&lt;/p&gt;
&lt;h4 id=&#34;实例-2&#34;&gt;&lt;a href=&#34;#实例-2&#34; class=&#34;headerlink&#34; title=&#34;实例&#34;&gt;&lt;/a&gt;实例&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;val = atoi(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;123456&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;lt-arpa-x2F-inet-h-gt&#34;&gt;&lt;a href=&#34;#lt-arpa-x2F-inet-h-gt&#34; class=&#34;headerlink&#34; title=&#34;&amp;lt;arpa&amp;#x2F;inet.h&amp;gt;&#34;&gt;&lt;/a&gt;&amp;lt;arpa&amp;#x2F;inet.h&amp;gt;&lt;/h1&gt;&lt;h3 id=&#34;inet-pton&#34;&gt;&lt;a href=&#34;#inet-pton&#34; class=&#34;headerlink&#34; title=&#34;inet_pton()&#34;&gt;&lt;/a&gt;inet_pton()&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;inet_pton&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; af, &lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *&lt;span class=&#34;hljs-keyword&#34;&gt;restrict&lt;/span&gt; src , &lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; *&lt;span class=&#34;hljs-keyword&#34;&gt;restrict&lt;/span&gt; dst )&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;  函数中的p和n分别代表&lt;strong&gt;表达式(presentation)&lt;strong&gt;和&lt;/strong&gt;数值(numeric)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  这里的表达式一般是指字符串，数值对于IPv4就是uint32&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;inet_pton()&lt;/code&gt; 转换网络主机地址表达式(presentation)为二进制数值(numeric)，支持IPv4 to IPv6，线程安全，可重入。&lt;/p&gt;
&lt;h4 id=&#34;参数-4&#34;&gt;&lt;a href=&#34;#参数-4&#34; class=&#34;headerlink&#34; title=&#34;参数&#34;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;af&lt;/code&gt; – 仅支持&lt;code&gt;AF_INET&lt;/code&gt;或&lt;code&gt;AF_INET6&lt;/code&gt;，IPv4 IPv6&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt; – 表达式(presentation)字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dst&lt;/code&gt; – 数值(numeric)指针&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-4&#34;&gt;&lt;a href=&#34;#返回值-4&#34; class=&#34;headerlink&#34; title=&#34;返回值&#34;&gt;&lt;/a&gt;返回值&lt;/h4&gt;&lt;p&gt;inet_pton () &lt;strong&gt;成功返回1&lt;/strong&gt;（网络地址转换成功）。如果src不包含表示指定地址族中有效网络地址的字符串，&lt;strong&gt;则返回 0&lt;/strong&gt; 。如果af不包含有效地址族，&lt;strong&gt;则返回 -1&lt;/strong&gt; 并将errno设置为EAFNOSUPPORT。&lt;/p&gt;
&lt;h4 id=&#34;示例&#34;&gt;&lt;a href=&#34;#示例&#34; class=&#34;headerlink&#34; title=&#34;示例&#34;&gt;&lt;/a&gt;示例&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; ip_str[] = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;8.8.8.8&amp;quot;&lt;/span&gt;;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;uint32_t&lt;/span&gt; ip_u32; &lt;br&gt;&lt;br&gt;result = inet_pton(AF_INET, ip_str, &amp;amp;ip_u32);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h3 id=&#34;inet-ntop&#34;&gt;&lt;a href=&#34;#inet-ntop&#34; class=&#34;headerlink&#34; title=&#34;inet_ntop()&#34;&gt;&lt;/a&gt;inet_ntop()&lt;/h3&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *&lt;span class=&#34;hljs-title function_&#34;&gt;inet_ntop&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; af, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;                      &lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; *&lt;span class=&#34;hljs-keyword&#34;&gt;restrict&lt;/span&gt; src, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;                      &lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; *&lt;span class=&#34;hljs-keyword&#34;&gt;restrict&lt;/span&gt; dst, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;                      &lt;span class=&#34;hljs-type&#34;&gt;socklen_t&lt;/span&gt; size)&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;inet_ntop()&lt;/code&gt; 函数转换二进制数值(numeric)为网络主机地址表达式(presentation)，支持IPv4 to IPv6，线程安全，可重入。&lt;/p&gt;
&lt;h4 id=&#34;参数-5&#34;&gt;&lt;a href=&#34;#参数-5&#34; class=&#34;headerlink&#34; title=&#34;参数&#34;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;af&lt;/code&gt; – 仅支持&lt;code&gt;AF_INET&lt;/code&gt;或&lt;code&gt;AF_INET6&lt;/code&gt;，IPv4 or IPv6&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt; – 数值(numeric)指针&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dst&lt;/code&gt; – 表达式(presentation)字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt; – 此缓冲区可用字节数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-5&#34;&gt;&lt;a href=&#34;#返回值-5&#34; class=&#34;headerlink&#34; title=&#34;返回值&#34;&gt;&lt;/a&gt;返回值&lt;/h4&gt;&lt;p&gt;成功时，inet_ntop() 返回一个指向 &lt;code&gt;dst&lt;/code&gt; 的&lt;strong&gt;非空指针&lt;/strong&gt;。如果有错误则返回&lt;code&gt;NULL&lt;/code&gt;，errno设置为指示错误。&lt;/p&gt;
&lt;h4 id=&#34;示例-1&#34;&gt;&lt;a href=&#34;#示例-1&#34; class=&#34;headerlink&#34; title=&#34;示例&#34;&gt;&lt;/a&gt;示例&lt;/h4&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;char&lt;/span&gt; ip_str[&lt;span class=&#34;hljs-number&#34;&gt;16&lt;/span&gt;];&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;uint32_t&lt;/span&gt; ip_u32 = &lt;span class=&#34;hljs-number&#34;&gt;0x08080808&lt;/span&gt;; &lt;br&gt;&lt;br&gt;result = inet_ntop(AF_INET, &amp;amp;ip_u32, ip_str, &lt;span class=&#34;hljs-keyword&#34;&gt;sizeof&lt;/span&gt;(ip_str));&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;Misc&#34;&gt;&lt;a href=&#34;#Misc&#34; class=&#34;headerlink&#34; title=&#34;Misc.&#34;&gt;&lt;/a&gt;Misc.&lt;/h1&gt;&lt;h3 id=&#34;assert-断言&#34;&gt;&lt;a href=&#34;#assert-断言&#34; class=&#34;headerlink&#34; title=&#34;assert() 断言&#34;&gt;&lt;/a&gt;assert() 断言&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://so.csdn.net/so/search?q=assert&amp;spm=1001.2101.3001.7020&#34;&gt;assert&lt;/a&gt;()是一个调试程序时经常使用的宏，在程序运行时它计算括号内的表达式，如果表达式为FALSE (0), 程序将报告错误，并终止执行。如果表达式不为0，则继续执行后面的语句，它的作用是&lt;strong&gt;终止程序以免导致严重后果，同时也便于查找错误&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;所需头文件：&lt;code&gt;#include &amp;lt;assert.h&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;报告错误的条件：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;   &lt;span class=&#34;hljs-type&#34;&gt;int&lt;/span&gt; expression&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-params&#34;&gt;)&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;参数：Expression (including pointers) that evaluates to nonzero or 0.（表达式【包括指针】是非零或零）&lt;/p&gt;
&lt;p&gt;原理：assert的作用是现计算表达式 expression ，如果其值为假（即为0），那么它先向stderr打印一条出错信息，然后通过调用 abort 来终止程序运行。&lt;br&gt;示例程序：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs c&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; *&lt;span class=&#34;hljs-title function_&#34;&gt;memcpy&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(&lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; *pvTo, &lt;span class=&#34;hljs-type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;void&lt;/span&gt; *pvFrom, &lt;span class=&#34;hljs-type&#34;&gt;size_t&lt;/span&gt; size)&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;	assert((pvTo != &lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;) &amp;amp;&amp;amp; (pvFrom != &lt;span class=&#34;hljs-literal&#34;&gt;NULL&lt;/span&gt;));   &lt;span class=&#34;hljs-comment&#34;&gt;// 使用断言&lt;/span&gt;&lt;br&gt;	&lt;span class=&#34;hljs-comment&#34;&gt;//...&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;在函数开始处检验传入参数的合法性&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;每个assert只检验一个条件,因为同时检验多个条件时,如果断言失败,无法直观的判断是哪个条件失败&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;不能使用改变环境的语句,因为assert只在DEBUG个生效,如果这么做,会使用程序在真正运行时遇到问题&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;assert和后面的语句应空一行,以形成逻辑和视觉上的一致感&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;有的地方,assert不能代替条件过滤&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ASSERT只有在Debug版本中才有效，如果编译为Release版本则被忽略掉。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;何时需要使用断言&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以在预计正常情况下程序不会到达的地方放置断言：ASSERT( FALSE );&lt;/li&gt;
&lt;li&gt;断言可以用于检查传递给私有方法的参数。（对于公有方法，因为是提供给外部的接口，所以必须在方法中有相应的参数检验才能保证代码的健壮性）&lt;/li&gt;
&lt;li&gt;使用断言测试方法执行的前置条件和后置条件&lt;/li&gt;
&lt;li&gt;使用断言检查类的不变状态，确保任何情况下，某个变量的状态必须满足。（如age属性应大于0小于某个合适值）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;什么地方不要使用断言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;断言语句不是永远会执行，可以屏蔽也可以启用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要使用断言作为公共方法的参数检查，公共方法的参数合法性永远都要执行&lt;/li&gt;
&lt;li&gt;断言语句不可以有任何边界效应，不要使用断言语句去修改变量和改变方法的返回值&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;Note&#34;&gt;&lt;a href=&#34;#Note&#34; class=&#34;headerlink&#34; title=&#34;Note&#34;&gt;&lt;/a&gt;Note&lt;/h1&gt;&lt;h2 id=&#34;sync、fsync、fdatasync、fflush对比&#34;&gt;&lt;a href=&#34;#sync、fsync、fdatasync、fflush对比&#34; class=&#34;headerlink&#34; title=&#34;sync、fsync、fdatasync、fflush对比&#34;&gt;&lt;/a&gt;sync、fsync、fdatasync、fflush对比&lt;/h2&gt;&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;  &lt;strong&gt;c库缓冲 —–fflush—–&amp;gt; 内核缓冲 —–fsync—–&amp;gt; 磁盘&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;void sync(void)  函数&lt;strong&gt;只是将所有修改过的块缓冲区排入写队列，然后就返回&lt;/strong&gt;，它&lt;strong&gt;并不等待实际写磁盘操作结束&lt;/strong&gt;。通常称为update的系统守护进程会周期性地（一般每隔30秒）调用sync函数。这就保证了定期冲洗内核的块缓冲区。命令sync(1)也调用sync函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int fsync(int fd)  函数是系统提供的系统调用。&lt;strong&gt;只对由文件描述符filedes指定的单一文件起作用，并且等待写磁盘操作结束，然后返回&lt;/strong&gt;。fsync可用于数据库这样的应用程序，这种应用程序需要确保将修改过的块立即写到磁盘上。fsync&lt;strong&gt;还会同步更新文件的属性&lt;/strong&gt;，即inode部分。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int fdatasync(int fd)  函数类似于fsync，但它&lt;strong&gt;只影响文件的数据部分&lt;/strong&gt;。它&lt;strong&gt;并不会更新文件的属性&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int fflush(FILE *stream)：标准I&amp;#x2F;O函数（如：fread，fwrite）会在内存建立缓冲，该函数&lt;strong&gt;刷新内存缓冲，将内容写入内核缓冲&lt;/strong&gt;，要想将其写入磁盘，还需要调用fsync（先调用fflush后调用fsync，否则不起作用）。fflush接受一个参数&lt;code&gt;FILE *&lt;/code&gt;。它还可以刷新标准输入输出。fclose函数在关闭文件之前也会做flush操作&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;关于缓冲&#34;&gt;&lt;a href=&#34;#关于缓冲&#34; class=&#34;headerlink&#34; title=&#34;关于缓冲.&#34;&gt;&lt;/a&gt;关于缓冲.&lt;/h2&gt;&lt;p&gt;C标准库的I&amp;#x2F;O缓冲区有三种类型:全缓冲、行缓冲和无缓冲。当用户程序调用库函数做写操作时, 不同类型的缓冲区具有不同特性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;全缓冲：如果缓冲区写满了就写回内核。&lt;strong&gt;常规文件通常是全缓冲的。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;行缓冲：如果用户程序写的数据中有换行符就把这一行写回内核,或者如果缓冲区写满了就写回内核。&lt;strong&gt;标准输入和标准输出对应终端设备时通常是行缓冲的。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;无缓冲：用户程序每次调库函数做写操作都要通过系统调用写回内核。&lt;strong&gt;标准错误输出通常是无缓冲的&lt;/strong&gt;，这样用户程序产生的错误信息可以尽快输出到设备。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;  虽然write系统调用位于C标准库I&amp;#x2F;O缓冲区的底层，被称为Unbuffered I&amp;#x2F;O函数，但在write的底层也可以分配一个内核I&amp;#x2F;O缓冲区，所以write 也不一定是直接写到文件的，也可能写到内核I&amp;#x2F;O缓冲区中。&lt;/p&gt;
&lt;p&gt;  可以使用fsync函数同步至磁盘文件，至于究竟写到了文件中还是内核缓冲区中对于进程来说是没有差别的，如果进程A和进程B打开同一文件，进程A写到内核I&amp;#x2F;O缓冲区中的数据从进程B也能读到，因为内核空间是进程共享的，而c标准库的I&amp;#x2F;O缓冲区则不具有这一特性，因为进程的用户空间是完全独立的。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="linux" />
        <updated>2023-03-26T08:26:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2023/efa34a49/</id>
        <title>speedtest.net 测速</title>
        <link rel="alternate" href="https://www.oikiou.top/2023/efa34a49/"/>
        <content type="html">&lt;h1 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;h2 id=&#34;Ubuntu&#34;&gt;&lt;a href=&#34;#Ubuntu&#34; class=&#34;headerlink&#34; title=&#34;Ubuntu&#34;&gt;&lt;/a&gt;Ubuntu&lt;/h2&gt;&lt;p&gt;对于以前安装过&lt;code&gt;speedtest-cli&lt;/code&gt;版本用户来说，需要先卸载原来的版本&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;sudo apt-get install curl&lt;br&gt;curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash&lt;br&gt;sudo apt-get install speedtest&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;Service-ID-List&#34;&gt;&lt;a href=&#34;#Service-ID-List&#34; class=&#34;headerlink&#34; title=&#34;Service ID List&#34;&gt;&lt;/a&gt;Service ID List&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://williamyaps.github.io/wlmjavascript/servercli.html&#34;&gt;Speedtest Server List (williamyaps.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  我们可以在&lt;code&gt;www.speedtest.net&lt;/code&gt;可以看到当前所选节点的ID，鼠标停留在当前节点名字上，浏览器会显示这个节点的链接，这个链接最后面的字段&lt;code&gt;id=xxxx&lt;/code&gt;就是这个节点的ID。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在有很多节点已经不能用了，下面的是2023.3.26测试可用的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中国电信&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;节点位置&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;服务器id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;上海&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3633&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;广东广州5G&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;27594&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;中国联通&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;节点位置&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;服务器id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;上海&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;24447&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;中国移动&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;节点位置&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;服务器id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;浙江 杭州 5G&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;54312&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;北京&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;25858&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;节点位置&lt;/th&gt;
&lt;th&gt;服务器id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;福州&lt;/td&gt;
&lt;td&gt;56354&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</content>
        <category term="speedtest" />
        <category term="tools" />
        <updated>2023-03-26T07:39:31.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2023/bb8e62be/</id>
        <title>Linux 应用编程 Zlib Minizip</title>
        <link rel="alternate" href="https://www.oikiou.top/2023/bb8e62be/"/>
        <content type="html">&lt;h1 id=&#34;linux-下-zlib-的c语言开发&#34;&gt;&lt;a href=&#34;#linux-下-zlib-的c语言开发&#34; class=&#34;headerlink&#34; title=&#34;linux 下 zlib 的c语言开发&#34;&gt;&lt;/a&gt;linux 下 zlib 的c语言开发&lt;/h1&gt;&lt;h1 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装库 注意其中名称中是 1g 不是 lg   dev是就Development&lt;/span&gt; &lt;br&gt;sudo apt install zlib1g-dev&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编译需要添加 -lz 参数&lt;/span&gt;&lt;br&gt;gcc ... -lz&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;使用&#34;&gt;&lt;a href=&#34;#使用&#34; class=&#34;headerlink&#34; title=&#34;使用&#34;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.zlib.net/zlib_how.html&#34;&gt;zlib Usage Example&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="linuxapp" />
        <category term="zlib" />
        <category term="minizip" />
        <updated>2023-03-25T09:26:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2023/52593829/</id>
        <title>Linux 应用编程 Curl Libcurl</title>
        <link rel="alternate" href="https://www.oikiou.top/2023/52593829/"/>
        <content type="html">&lt;h1 id=&#34;linux-下-curl-的c语言开发&#34;&gt;&lt;a href=&#34;#linux-下-curl-的c语言开发&#34; class=&#34;headerlink&#34; title=&#34;linux 下 curl 的c语言开发&#34;&gt;&lt;/a&gt;linux 下 curl 的c语言开发&lt;/h1&gt;&lt;h1 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;h2 id=&#34;从源码安装&#34;&gt;&lt;a href=&#34;#从源码安装&#34; class=&#34;headerlink&#34; title=&#34;从源码安装&#34;&gt;&lt;/a&gt;从源码安装&lt;/h2&gt;&lt;p&gt;Curl 的官网下载地址：&lt;a href=&#34;http://curl.haxx.se/download/&#34;&gt;http://curl.haxx.se/download/&lt;/a&gt;&lt;br&gt;Curl 的使用例子地址： &lt;a href=&#34;https://curl.haxx.se/libcurl/c/example.html&#34;&gt;https://curl.haxx.se/libcurl/c/example.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载、解压好后…..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置参数&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;./configure&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编译&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;make&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装到系统&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;sudo make install&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;检查安装&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;返回版本信息就是安装成功了&lt;/span&gt;&lt;br&gt;curl --version&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;从包管理器安装&#34;&gt;&lt;a href=&#34;#从包管理器安装&#34; class=&#34;headerlink&#34; title=&#34;从包管理器安装&#34;&gt;&lt;/a&gt;从包管理器安装&lt;/h2&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;如果出现找不到 curl.h 头文件 就需要安装libcurl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;成功执行将会在 /user/include/x86_64-linux-gnu/curl 下看到curl.h头文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;CentOS:执行以下命令：&lt;/span&gt;&lt;br&gt;yum install libcurl-dev libcurl-devel&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Ubuntu执行以下命令：&lt;/span&gt;&lt;br&gt;sudo apt-get install libcurl4-openssl-dev&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;编译&#34;&gt;&lt;a href=&#34;#编译&#34; class=&#34;headerlink&#34; title=&#34;编译&#34;&gt;&lt;/a&gt;编译&lt;/h2&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;-lcurl 指定链接库&lt;/span&gt;&lt;br&gt;gcc ... -l curl&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;使用&#34;&gt;&lt;a href=&#34;#使用&#34; class=&#34;headerlink&#34; title=&#34;使用&#34;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;p&gt;&amp;#x2F;&amp;#x2F; TODO&lt;/p&gt;
</content>
        <category term="linuxapp" />
        <category term="curl" />
        <category term="libcurl" />
        <updated>2023-03-24T06:26:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2023/79891ac1/</id>
        <title>License差异对比</title>
        <link rel="alternate" href="https://www.oikiou.top/2023/79891ac1/"/>
        <content type="html">&lt;h1 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://spdx.org/licenses/&#34;&gt;SPDX License List&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;strong&gt;SPDX 短格式标识符&lt;/strong&gt; 以简单、高效、便携和机器可读的方式 传达 FOSS 许可证信息&lt;/p&gt;
&lt;figure class=&#34;highlight awk&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs awk&#34;&gt;&lt;span class=&#34;hljs-regexp&#34;&gt;//&lt;/span&gt; SPDX-License-Identifier: MIT&lt;br&gt;&lt;span class=&#34;hljs-regexp&#34;&gt;/* SPDX-License-Identifier: MIT OR Apache-2.0 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# SPDX-License-Identifier: GPL-2.0-or-later&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;术语&#34;&gt;&lt;a href=&#34;#术语&#34; class=&#34;headerlink&#34; title=&#34;术语&#34;&gt;&lt;/a&gt;术语&lt;/h1&gt;&lt;h2 id=&#34;什么是“分发”？&#34;&gt;&lt;a href=&#34;#什么是“分发”？&#34; class=&#34;headerlink&#34; title=&#34;什么是“分发”？&#34;&gt;&lt;/a&gt;什么是“分发”？&lt;/h2&gt;&lt;p&gt;许可证授予的权利，允许你自由使用、修改、复制，但是&lt;strong&gt;在“分发”时就必须遵守许可证的约束&lt;/strong&gt;。换言之，如果不”分发”，就不需要遵守。&lt;/p&gt;
&lt;p&gt;分发就是指将版权作品从一个人转移到另一个人。这意味着，如果你是自己使用，不提供给他人，就没有分发。另外，这里的”人”也指”法人”，因此如果使用方是公司，且只在公司内部使用，也不需要遵守许可证[]。&lt;/p&gt;
&lt;p&gt;其中AGPL有个特例：AGPL定义，如果你使用开源软件&lt;strong&gt;提供网络交互服务，那么该行为也定义为“分发”&lt;/strong&gt;，即图中的“网络使用即分发”&lt;/p&gt;
&lt;h2 id=&#34;什么是“传染性”？&#34;&gt;&lt;a href=&#34;#什么是“传染性”？&#34; class=&#34;headerlink&#34; title=&#34;什么是“传染性”？&#34;&gt;&lt;/a&gt;什么是“传染性”？&lt;/h2&gt;&lt;p&gt;传染性来源于GPL，GPL的支持者确信自由软件世界应具有自我保护能力和可持续发展性——为了确保自由软件的演绎作品同样“自由”，所以要求只要使用了GPL的代码，那么整个项目都必须以GPL方式公开源代码&lt;/p&gt;
&lt;p&gt;LGPL 在这方面要求就没GPL那么严格，如果只是子系统&amp;#x2F;模块用了，那么只需要子系统&amp;#x2F;模块开源，整个工程不用开源；如果是以动态链接调用LGPL许可证的库，那么项目也不用开源。&lt;/p&gt;
&lt;p&gt;MPL 在这个方面就更宽松，哪个文件用了该许可证的代码，只需要这些文件开源即可，其他文件不受影响&lt;/p&gt;
&lt;p&gt;所以，GPL v2&amp;#x2F;v3、AGPL 属于工程级别的强传染性；LGPL属于库级别的若传染性；MPL 就是文件级别的，传染性可以忽略不计了&lt;/p&gt;
&lt;h2 id=&#34;GPL-系列的协议有何区别？&#34;&gt;&lt;a href=&#34;#GPL-系列的协议有何区别？&#34; class=&#34;headerlink&#34; title=&#34;GPL 系列的协议有何区别？&#34;&gt;&lt;/a&gt;GPL 系列的协议有何区别？&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;AGPL 和 GPL 的区别：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AGPL明确了GPL 2.0&amp;#x2F;3.0关于提供网络服务也属于分发限制的说明：使用GPL的自由软件，但是并不发布与网络之中，则可以自由的使用GPL协议确不开源自己私有的解决方案。AGPL则增加了对此做法的约束。比如使用了AGPL代码的软件是一个网络应用，那么这个软件的所有源码和修改代码也必须开源&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GPL v2 和 GPL v3的主要差异：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;a) GPLv3包含了明确的专利许可&lt;/p&gt;
&lt;p&gt;b) 添加了对数字版权管理和加密签名的限制，不仅要求用户公开源码，还要求公布相关硬件及必要的安装信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GPL 和LGPL的区别：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主要区别在于传染性方面，GPL是工程级别的强传染，LGPL是库级别的弱传染&lt;/p&gt;
&lt;h2 id=&#34;违反开源项目许可有何风险？&#34;&gt;&lt;a href=&#34;#违反开源项目许可有何风险？&#34; class=&#34;headerlink&#34; title=&#34;违反开源项目许可有何风险？&#34;&gt;&lt;/a&gt;违反开源项目许可有何风险？&lt;/h2&gt;&lt;p&gt;1.被许可人在违反许可证设定的义务时会构成合同违约&lt;/p&gt;
&lt;p&gt;2.开源软件受著作权保护，著作权法著作权法，但是开源许可证本质却是走在了版权保护的对立面，所以其法律效力并没有被明确认可，是否侵权可能需要法院视具体情况而定&lt;/p&gt;
&lt;p&gt;3.在中国，侵权责任和违约责任不能同时主张&lt;/p&gt;
&lt;p&gt;4.在中国，过往的判例都没有涉及开源软件许可证本身&lt;/p&gt;
&lt;p&gt;5.除了面临法律诉讼风险，违反许可证的行为会导致自由软件者和开源社区的排斥，某种程度上会影响违约公司的商业信誉&lt;/p&gt;
&lt;h1 id=&#34;差异&#34;&gt;&lt;a href=&#34;#差异&#34; class=&#34;headerlink&#34; title=&#34;差异&#34;&gt;&lt;/a&gt;差异&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;/2023/79891ac1/v2-3a460a2dad345fe0c2e0e79b626aacc9_720w.webp&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
</content>
        <category term="license" />
        <updated>2023-02-02T06:23:05.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2023/e7fefe87/</id>
        <title>Let’s Encrypt SSL 证书申请</title>
        <link rel="alternate" href="https://www.oikiou.top/2023/e7fefe87/"/>
        <content type="html">&lt;h1 id=&#34;Let’s-Encrypt-SSL-证书申请&#34;&gt;&lt;a href=&#34;#Let’s-Encrypt-SSL-证书申请&#34; class=&#34;headerlink&#34; title=&#34;Let’s Encrypt SSL 证书申请&#34;&gt;&lt;/a&gt;Let’s Encrypt SSL 证书申请&lt;/h1&gt;&lt;h1 id=&#34;为什么申请？&#34;&gt;&lt;a href=&#34;#为什么申请？&#34; class=&#34;headerlink&#34; title=&#34;为什么申请？&#34;&gt;&lt;/a&gt;为什么申请？&lt;/h1&gt;&lt;blockquote&gt;
&lt;h2 id=&#34;HTTP：未实施数据加密&#34;&gt;&lt;a href=&#34;#HTTP：未实施数据加密&#34; class=&#34;headerlink&#34; title=&#34;HTTP：未实施数据加密&#34;&gt;&lt;/a&gt;HTTP：未实施数据加密&lt;/h2&gt;&lt;p&gt;  每个以 HTTP 开头的 URL 链接都使用一种基本类型的“超文本传输协议”。由 Tim Berners-Lee 于 1990 年代初创建，当时互联网仍处于起步阶段，该网络协议标准允许 Web 浏览器和服务器通过数据交换进行通信。&lt;/p&gt;
&lt;p&gt;  HTTP 也被称为“无状态系统”，这意味着它可以按需连接。您单击一个链接，请求连接，您的 Web 浏览器将此请求发送到服务器，服务器通过打开页面进行响应。连接越快，数据呈现给您的速度就越快。&lt;/p&gt;
&lt;p&gt;  作为一种“应用层协议”，HTTP 仍然专注于呈现信息，但不太关心这些信息从一个地方传播到另一个地方的方式。不幸的是，这意味着 HTTP 可能会&lt;a href=&#34;https://www.globalsign.com/en/blog/what-is-a-man-in-the-middle-attack&#34;&gt;被拦截并可能被更改&lt;/a&gt;，从而使信息和信息接收者（即您）都容易受到攻击。&lt;/p&gt;
&lt;h2 id=&#34;HTTPS：加密连接&#34;&gt;&lt;a href=&#34;#HTTPS：加密连接&#34; class=&#34;headerlink&#34; title=&#34;HTTPS：加密连接&#34;&gt;&lt;/a&gt;HTTPS：加密连接&lt;/h2&gt;&lt;p&gt;  HTTPS 不是 HTTP 的对立面，而是它的表弟。两者本质上是相同的，因为它们都指的是相同的“超文本传输协议”，该协议使请求的 Web 数据能够显示在您的屏幕上。但是，HTTPS 仍然略有不同，更先进，也更安全。&lt;/p&gt;
&lt;p&gt;  简单的说，HTTPS协议是HTTP的扩展。缩写中的“S”来自 Secure 一词，它由传输层安全性 (TLS) [&lt;a href=&#34;https://www.globalsign.com/en/ssl-information-center/what-is-ssl/&#34;&gt;安全套接字层 (SSL)&lt;/a&gt;的后继者] 提供支持，这是一种在 Web 服务器和服务器之间建立加密连接的标准安全技术。浏览器。&lt;/p&gt;
&lt;p&gt;  如果没有 HTTPS，您输入网站的任何数据（例如您的用户名&amp;#x2F;密码、信用卡或银行详细信息、任何其他表单提交数据等）都将以明文形式发送，因此容易被拦截或窃听。因此，在输入任何信息之前，您应该始终检查站点是否使用 HTTPS。&lt;/p&gt;
&lt;p&gt;  除了加密服务器和您的浏览器之间传输的数据外，TLS 还验证您正在连接的服务器并保护传输的数据不被篡改。&lt;/p&gt;
&lt;p&gt;  这有助于我这样思考——HTTPS 中的 HTTP 相当于一个目的地，而 SSL 相当于一个旅程。第一个负责将数据显示到屏幕上，第二个负责管理数据到达那里的方式。通过联合力量，他们以安全的方式移动数据。  &lt;/p&gt;
&lt;p&gt;  &lt;a href=&#34;https://www.globalsign.com/en/blog/the-difference-between-http-and-https&#34;&gt;What’s the difference between HTTP and HTTPS?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;HTTPS 有助于确保网络安全。毫无疑问，它是比 HTTP 更好的网络协议解决方案。&lt;/p&gt;
&lt;p&gt;将网站开启HTTPS的服务是需要SSL的证书的，我们来看一下如何在Let’s Encrypt上申请免费的SSL证书。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  Let’s Encrypt 是免费、开放和自动化的证书颁发机构。由非盈利组织&lt;a href=&#34;https://www.abetterinternet.org/&#34;&gt;互联网安全研究小组（ISRG）&lt;/a&gt;运营。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;申请的前提条件&#34;&gt;&lt;a href=&#34;#申请的前提条件&#34; class=&#34;headerlink&#34; title=&#34;申请的前提条件&#34;&gt;&lt;/a&gt;申请的前提条件&lt;/h1&gt;&lt;p&gt;我们申请SSL证书的前提条件有下面这几个&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拥有域名，能够自主配置DNS。或者提供Web服务器做验证，在网站目录下放一个文件。&lt;/li&gt;
&lt;li&gt;获取证书的环境要能访问DNS服务器，因为会需要做DNS解析校验。&lt;/li&gt;
&lt;li&gt;需要有远程主机的权限，会需要更新和安装组件。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;申请步骤&#34;&gt;&lt;a href=&#34;#申请步骤&#34; class=&#34;headerlink&#34; title=&#34;申请步骤&#34;&gt;&lt;/a&gt;申请步骤&lt;/h1&gt;&lt;p&gt;Let’s Encrypt 的证书申请除去手动申请常见的主要有下面这几种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;acme.sh&lt;/code&gt;的方式&lt;em&gt;（我当时选取了这个方式）&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;docker 镜像获取&lt;/li&gt;
&lt;li&gt;&lt;code&gt;certbot&lt;/code&gt;方式获取证书&lt;em&gt;（官网建议使用这种方式获取证书，可以在不下线的状态下自动执行证书颁发和安装）&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;acme-sh脚本&#34;&gt;&lt;a href=&#34;#acme-sh脚本&#34; class=&#34;headerlink&#34; title=&#34;acme.sh脚本&#34;&gt;&lt;/a&gt;&lt;code&gt;acme.sh&lt;/code&gt;脚本&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh&#34;&gt;Github链接：An ACME Shell script: acme.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github的README其实介绍的其实很全面，这里copy一下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  &lt;strong&gt;acme.sh&lt;/strong&gt; 实现了 &lt;code&gt;acme&lt;/code&gt; 协议, 可以从 letsencrypt 生成免费的证书.&lt;/p&gt;
&lt;p&gt;  主要步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装 &lt;strong&gt;acme.sh&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;生成证书&lt;/li&gt;
&lt;li&gt;copy 证书到 nginx&amp;#x2F;apache 或者其他服务&lt;/li&gt;
&lt;li&gt;更新证书&lt;/li&gt;
&lt;li&gt;更新 &lt;strong&gt;acme.sh&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;出错怎么办, 如何调试&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  下面详细介绍.&lt;/p&gt;
&lt;h1 id=&#34;1-安装-acme-sh&#34;&gt;&lt;a href=&#34;#1-安装-acme-sh&#34; class=&#34;headerlink&#34; title=&#34;1. 安装 acme.sh&#34;&gt;&lt;/a&gt;1. 安装 &lt;strong&gt;acme.sh&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;  安装很简单, 一个命令:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  这里输入你的邮箱，这个邮箱有什么用倒是不太清楚&lt;/p&gt;
&lt;/blockquote&gt;
  &lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;curl https://get.acme.sh | sh -s email=my@example.com&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  普通用户和 root 用户都可以安装使用. 安装过程进行了以下几步:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把 acme.sh 安装到你的 &lt;strong&gt;home&lt;/strong&gt; 目录下:&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;~/.acme.sh/&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  并创建 一个 shell 的 alias, 例如 .bashrc，方便你的使用: &lt;code&gt;alias acme.sh=~/.acme.sh/acme.sh&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;自动为你创建 cronjob, 每天 0:00 点自动检测所有的证书, 如果快过期了, 需要更新, 则会自动更新证书.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  更高级的安装选项请参考: &lt;a href=&#34;https://github.com/Neilpang/acme.sh/wiki/How-to-install&#34;&gt;https://github.com/Neilpang/acme.sh/wiki/How-to-install&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;安装过程不会污染已有的系统任何功能和文件&lt;/strong&gt;, 所有的修改都限制在安装目录中: &lt;code&gt;~/.acme.sh/&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-生成证书&#34;&gt;&lt;a href=&#34;#2-生成证书&#34; class=&#34;headerlink&#34; title=&#34;2. 生成证书&#34;&gt;&lt;/a&gt;2. 生成证书&lt;/h1&gt;&lt;p&gt;  &lt;strong&gt;acme.sh&lt;/strong&gt; 实现了 &lt;strong&gt;acme&lt;/strong&gt; 协议支持的所有验证协议. 一般有两种方式验证: http 和 dns 验证.&lt;/p&gt;
&lt;h3 id=&#34;1-http-方式需要在你的网站根目录下放置一个文件-来验证你的域名所有权-完成验证-然后就可以生成证书了&#34;&gt;&lt;a href=&#34;#1-http-方式需要在你的网站根目录下放置一个文件-来验证你的域名所有权-完成验证-然后就可以生成证书了&#34; class=&#34;headerlink&#34; title=&#34;1. http 方式需要在你的网站根目录下放置一个文件, 来验证你的域名所有权,完成验证. 然后就可以生成证书了.&#34;&gt;&lt;/a&gt;1. http 方式需要在你的网站根目录下放置一个文件, 来验证你的域名所有权,完成验证. 然后就可以生成证书了.&lt;/h3&gt;  &lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;acme.sh --issue -d mydomain.com -d www.mydomain.com --webroot /home/wwwroot/mydomain.com/&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  只需要指定域名, 并指定域名所在的网站根目录. &lt;strong&gt;acme.sh&lt;/strong&gt; 会全自动的生成验证文件, 并放到网站的根目录, 然后自动完成验证. 最后会聪明的删除验证文件. 整个过程没有任何副作用.&lt;/p&gt;
&lt;p&gt;  如果你用的 &lt;strong&gt;apache&lt;/strong&gt;服务器, &lt;strong&gt;acme.sh&lt;/strong&gt; 还可以智能的从 &lt;strong&gt;apache&lt;/strong&gt;的配置中自动完成验证, 你不需要指定网站根目录:&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--issue&lt;/span&gt; -d mydomain&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--apache&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  如果你用的 &lt;strong&gt;nginx&lt;/strong&gt;服务器, 或者反代, &lt;strong&gt;acme.sh&lt;/strong&gt; 还可以智能的从 &lt;strong&gt;nginx&lt;/strong&gt;的配置中自动完成验证, 你不需要指定网站根目录:&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--issue&lt;/span&gt; -d mydomain&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--nginx&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  &lt;strong&gt;注意, 无论是 apache 还是 nginx 模式, acme.sh在完成验证之后, 会恢复到之前的状态, 都不会私自更改你本身的配置. 好处是你不用担心配置被搞坏, 也有一个缺点, 你需要自己配置 ssl 的配置, 否则只能成功生成证书, 你的网站还是无法访问https. 但是为了安全, 你还是自己手动改配置吧.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  如果你还没有运行任何 web 服务, &lt;strong&gt;80&lt;/strong&gt; 端口是空闲的, 那么 &lt;strong&gt;acme.sh&lt;/strong&gt; 还能假装自己是一个webserver, 临时听在&lt;strong&gt;80&lt;/strong&gt; 端口, 完成验证:&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--issue&lt;/span&gt; -d mydomain&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--standalone&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  更高级的用法请参考: &lt;a href=&#34;https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert&#34;&gt;https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-手动-dns-方式-手动在域名上添加一条-txt-解析记录-验证域名所有权&#34;&gt;&lt;a href=&#34;#2-手动-dns-方式-手动在域名上添加一条-txt-解析记录-验证域名所有权&#34; class=&#34;headerlink&#34; title=&#34;2. 手动 dns 方式, 手动在域名上添加一条 txt 解析记录, 验证域名所有权.&#34;&gt;&lt;/a&gt;2. 手动 dns 方式, 手动在域名上添加一条 txt 解析记录, 验证域名所有权.&lt;/h3&gt;&lt;p&gt;  这种方式的好处是, 你不需要任何服务器, 不需要任何公网 ip, 只需要 dns 的解析记录即可完成验证. 坏处是，如果不同时配置 Automatic DNS API，使用这种方式 acme.sh 将无法自动更新证书，每次都需要手动再次重新解析验证域名所有权。&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--issue&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--dns&lt;/span&gt; -d mydomain&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt; \&lt;br&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--yes-I-know-dns-manual-mode-enough-go-ahead-please&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  然后, &lt;strong&gt;acme.sh&lt;/strong&gt; 会生成相应的解析记录显示出来, 你只需要在你的域名管理面板中添加这条 txt 记录即可.&lt;/p&gt;
&lt;p&gt;  等待解析完成之后, 重新生成证书:&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--renew&lt;/span&gt; -d mydomain&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt; \&lt;br&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--yes-I-know-dns-manual-mode-enough-go-ahead-please&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  注意第二次这里用的是 &lt;code&gt;--renew&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;  dns 方式的真正强大之处在于可以使用域名解析商提供的 api 自动添加 txt 记录完成验证.&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;acme.sh&lt;/strong&gt; 目前支持 cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的自动集成.&lt;/p&gt;
&lt;p&gt;  以 dnspod 为例, 你需要先登录到 dnspod 账号, 生成你的 api id 和 api key, 都是免费的. 然后:&lt;/p&gt;
  &lt;figure class=&#34;highlight routeros&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs routeros&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;hljs-attribute&#34;&gt;DP_Id&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1234&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;hljs-attribute&#34;&gt;DP_Key&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;sADDsdasdgdsf&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;br&gt;acme.sh --issue --dns dns_dp -d aa.com -d www.aa.com&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  证书就会自动生成了. 这里给出的 api id 和 api key 会被自动记录下来, 将来你在使用 dnspod api 的时候, 就不需要再次指定了. 直接生成就好了:&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--issue&lt;/span&gt; -d mydomain2&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--dns&lt;/span&gt;  dns_dp&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  更详细的 api 用法: &lt;a href=&#34;https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md&#34;&gt;https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-copy-x2F-安装-证书&#34;&gt;&lt;a href=&#34;#3-copy-x2F-安装-证书&#34; class=&#34;headerlink&#34; title=&#34;3. copy&amp;#x2F;安装 证书&#34;&gt;&lt;/a&gt;3. copy&amp;#x2F;安装 证书&lt;/h1&gt;&lt;p&gt;  前面证书生成以后, 接下来需要把证书 copy 到真正需要用它的地方.&lt;/p&gt;
&lt;p&gt;  注意, 默认生成的证书都放在安装目录下: &lt;code&gt;~/.acme.sh/&lt;/code&gt;, &lt;strong&gt;请不要直接使用此目录下的文件,&lt;/strong&gt; 例如: 不要直接让 nginx&amp;#x2F;apache 的配置文件使用这下面的文件. 这里面的文件都是内部使用, 而且目录结构可能会变化.&lt;/p&gt;
&lt;p&gt;  正确的使用方法是使用 &lt;code&gt;--install-cert&lt;/code&gt; 命令,并指定目标位置, 然后证书文件会被copy到相应的位置, 例如:&lt;/p&gt;
&lt;h2 id=&#34;Apache-example&#34;&gt;&lt;a href=&#34;#Apache-example&#34; class=&#34;headerlink&#34; title=&#34;Apache example:&#34;&gt;&lt;/a&gt;Apache example:&lt;/h2&gt;  &lt;figure class=&#34;highlight gradle&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs gradle&#34;&gt;acme.sh --install-cert -d example.com \&lt;br&gt;--cert-&lt;span class=&#34;hljs-keyword&#34;&gt;file&lt;/span&gt;      &lt;span class=&#34;hljs-regexp&#34;&gt;/path/&lt;/span&gt;to&lt;span class=&#34;hljs-regexp&#34;&gt;/certfile/i&lt;/span&gt;n&lt;span class=&#34;hljs-regexp&#34;&gt;/apache/&lt;/span&gt;cert.pem  \&lt;br&gt;--key-&lt;span class=&#34;hljs-keyword&#34;&gt;file&lt;/span&gt;       &lt;span class=&#34;hljs-regexp&#34;&gt;/path/&lt;/span&gt;to&lt;span class=&#34;hljs-regexp&#34;&gt;/keyfile/i&lt;/span&gt;n&lt;span class=&#34;hljs-regexp&#34;&gt;/apache/&lt;/span&gt;key.pem  \&lt;br&gt;--fullchain-&lt;span class=&#34;hljs-keyword&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;hljs-regexp&#34;&gt;/path/&lt;/span&gt;to&lt;span class=&#34;hljs-regexp&#34;&gt;/fullchain/&lt;/span&gt;certfile&lt;span class=&#34;hljs-regexp&#34;&gt;/apache/&lt;/span&gt;fullchain.pem \&lt;br&gt;--reloadcmd     &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;service apache2 force-reload&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Nginx-example&#34;&gt;&lt;a href=&#34;#Nginx-example&#34; class=&#34;headerlink&#34; title=&#34;Nginx example:&#34;&gt;&lt;/a&gt;Nginx example:&lt;/h2&gt;  &lt;figure class=&#34;highlight gradle&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs gradle&#34;&gt;acme.sh --install-cert -d example.com \&lt;br&gt;--key-&lt;span class=&#34;hljs-keyword&#34;&gt;file&lt;/span&gt;       &lt;span class=&#34;hljs-regexp&#34;&gt;/path/&lt;/span&gt;to&lt;span class=&#34;hljs-regexp&#34;&gt;/keyfile/i&lt;/span&gt;n&lt;span class=&#34;hljs-regexp&#34;&gt;/nginx/&lt;/span&gt;key.pem  \&lt;br&gt;--fullchain-&lt;span class=&#34;hljs-keyword&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;hljs-regexp&#34;&gt;/path/&lt;/span&gt;to&lt;span class=&#34;hljs-regexp&#34;&gt;/fullchain/&lt;/span&gt;nginx/cert.pem \&lt;br&gt;--reloadcmd     &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;service nginx force-reload&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  (一个小提醒, 这里用的是 &lt;code&gt;service nginx force-reload&lt;/code&gt;, 不是 &lt;code&gt;service nginx reload&lt;/code&gt;, 据测试, &lt;code&gt;reload&lt;/code&gt; 并不会重新加载证书, 所以用的 &lt;code&gt;force-reload&lt;/code&gt;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  我当时使用这个命令的时候发现用 &lt;code&gt;service nginx force-reload&lt;/code&gt;  报没有权限，然后是将当前用户&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  Nginx 的配置 &lt;code&gt;ssl_certificate&lt;/code&gt; 使用 &lt;code&gt;/etc/nginx/ssl/fullchain.cer&lt;/code&gt; ，而非 &lt;code&gt;/etc/nginx/ssl/&amp;lt;domain&amp;gt;.cer&lt;/code&gt; ，否则 &lt;a href=&#34;https://www.ssllabs.com/ssltest/&#34;&gt;SSL Labs&lt;/a&gt; 的测试会报 &lt;code&gt;Chain issues Incomplete&lt;/code&gt; 错误。&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;--install-cert&lt;/code&gt;命令可以携带很多参数, 来指定目标文件. 并且可以指定 reloadcmd, 当证书更新以后, reloadcmd会被自动调用,让服务器生效.&lt;/p&gt;
&lt;p&gt;  详细参数请参考: &lt;a href=&#34;https://github.com/Neilpang/acme.sh#3-install-the-issued-cert-to-apachenginx-etc&#34;&gt;https://github.com/Neilpang/acme.sh#3-install-the-issued-cert-to-apachenginx-etc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  值得注意的是, 这里指定的所有参数都会被自动记录下来, 并在将来证书自动更新以后, 被再次自动调用.&lt;/p&gt;
&lt;h1 id=&#34;4-查看已安装证书信息&#34;&gt;&lt;a href=&#34;#4-查看已安装证书信息&#34; class=&#34;headerlink&#34; title=&#34;4. 查看已安装证书信息&#34;&gt;&lt;/a&gt;4. 查看已安装证书信息&lt;/h1&gt;  &lt;figure class=&#34;highlight routeros&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs routeros&#34;&gt;acme.sh --&lt;span class=&#34;hljs-built_in&#34;&gt;info&lt;/span&gt; -d example.com&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 会输出如下内容：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;DOMAIN_CONF&lt;/span&gt;=/root/.acme.sh/example.com/example.com.conf&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_Domain&lt;/span&gt;=example.com&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_Alt&lt;/span&gt;=&lt;span class=&#34;hljs-literal&#34;&gt;no&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_Webroot&lt;/span&gt;=dns_ali&lt;br&gt;Le_PreHook=&lt;br&gt;Le_PostHook=&lt;br&gt;Le_RenewHook=&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_API&lt;/span&gt;=https://acme-v02.api.letsencrypt.org/directory&lt;br&gt;Le_Keylength=&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_OrderFinalize&lt;/span&gt;=https://acme-v02.api.letsencrypt.org/acme/finalize/23xxxx150/781xxxx4310&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_LinkOrder&lt;/span&gt;=https://acme-v02.api.letsencrypt.org/acme/order/233xxx150/781xxxx4310&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_LinkCert&lt;/span&gt;=https://acme-v02.api.letsencrypt.org/acme/cert/04cbd28xxxxxx349ecaea8d07&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_CertCreateTime&lt;/span&gt;=1649358725&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_CertCreateTimeStr&lt;/span&gt;=Thu Apr  7 19:12:05 UTC 2022&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_NextRenewTimeStr&lt;/span&gt;=Mon Jun  6 19:12:05 UTC 2022&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_NextRenewTime&lt;/span&gt;=1654456325&lt;br&gt;Le_RealCertPath=&lt;br&gt;Le_RealCACertPath=&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_RealKeyPath&lt;/span&gt;=/etc/acme/example.com/privkey.pem&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_ReloadCmd&lt;/span&gt;=service nginx force-reload&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Le_RealFullChainPath&lt;/span&gt;=/etc/acme/example.com/chain.pem&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;5-更新证书&#34;&gt;&lt;a href=&#34;#5-更新证书&#34; class=&#34;headerlink&#34; title=&#34;5. 更新证书&#34;&gt;&lt;/a&gt;5. 更新证书&lt;/h1&gt;&lt;p&gt;  目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.&lt;/p&gt;
&lt;p&gt;  请确保 cronjob 正确安装, 看起来是类似这样的:&lt;/p&gt;
  &lt;figure class=&#34;highlight gradle&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs gradle&#34;&gt;crontab  -l&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;56&lt;/span&gt; * * * * &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;/root/.acme.sh&amp;quot;&lt;/span&gt;&lt;span class=&#34;hljs-regexp&#34;&gt;/acme.sh --cron --home &amp;quot;/&lt;/span&gt;root&lt;span class=&#34;hljs-regexp&#34;&gt;/.acme.sh&amp;quot; &amp;gt; /&lt;/span&gt;dev/&lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;6-关于修改ReloadCmd&#34;&gt;&lt;a href=&#34;#6-关于修改ReloadCmd&#34; class=&#34;headerlink&#34; title=&#34;6. 关于修改ReloadCmd&#34;&gt;&lt;/a&gt;6. 关于修改ReloadCmd&lt;/h1&gt;&lt;p&gt;  目前修改&lt;code&gt;ReloadCmd&lt;/code&gt;没有专门的命令，可以通过重新安装证书来实现修改&lt;code&gt;reloadCmd&lt;/code&gt;的目的。 此外，安装证书后，相关信息是保存在&lt;code&gt;~/.acme.sh/example.com/example.conf&lt;/code&gt;文件下的，内容就是&lt;code&gt;acme.sh --info -d example.com&lt;/code&gt;输出的信息，不过&lt;code&gt;ReloadCmd&lt;/code&gt;在文件中使用了Base64编码。理论上可以通过直接修改该文件来修改&lt;code&gt;ReloadCmd&lt;/code&gt;，且修改时，无需Base64编码，直接写命令原文&lt;code&gt;acme.sh&lt;/code&gt;也可以识别。 不过，&lt;code&gt;example.conf&lt;/code&gt;文件的位置和内容格式以后可能会改变！&lt;code&gt;example.conf&lt;/code&gt;一直都是内部使用, 后面有可能会改为用 sqlite 或者mysql 格式存储. 所以一般不建议自己修改。&lt;/p&gt;
&lt;h1 id=&#34;7-更新-acme-sh&#34;&gt;&lt;a href=&#34;#7-更新-acme-sh&#34; class=&#34;headerlink&#34; title=&#34;7. 更新 acme.sh&#34;&gt;&lt;/a&gt;7. 更新 acme.sh&lt;/h1&gt;&lt;p&gt;  目前由于 acme 协议和 letsencrypt CA 都在频繁的更新, 因此 acme.sh 也经常更新以保持同步.&lt;/p&gt;
&lt;p&gt;  升级 acme.sh 到最新版 :&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--upgrade&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  如果你不想手动升级, 可以开启自动升级:&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--upgrade&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--auto-upgrade&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  之后, acme.sh 就会自动保持更新了.&lt;/p&gt;
&lt;p&gt;  你也可以随时关闭自动更新:&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--upgrade&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--auto-upgrade&lt;/span&gt;  &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;8-出错怎么办：&#34;&gt;&lt;a href=&#34;#8-出错怎么办：&#34; class=&#34;headerlink&#34; title=&#34;8. 出错怎么办：&#34;&gt;&lt;/a&gt;8. 出错怎么办：&lt;/h1&gt;&lt;p&gt;  如果出错, 请添加 debug log：&lt;/p&gt;
  &lt;figure class=&#34;highlight jboss-cli&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs jboss-cli&#34;&gt;acme.sh &lt;span class=&#34;hljs-params&#34;&gt;--issue&lt;/span&gt;  &lt;span class=&#34;hljs-string&#34;&gt;.....&lt;/span&gt;  &lt;span class=&#34;hljs-params&#34;&gt;--debug&lt;/span&gt; &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  或者：&lt;/p&gt;
  &lt;figure class=&#34;highlight jboss-cli&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs jboss-cli&#34;&gt;acme.sh &lt;span class=&#34;hljs-params&#34;&gt;--issue&lt;/span&gt;  &lt;span class=&#34;hljs-string&#34;&gt;.....&lt;/span&gt;  &lt;span class=&#34;hljs-params&#34;&gt;--debug&lt;/span&gt;  2&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  请参考： &lt;a href=&#34;https://github.com/Neilpang/acme.sh/wiki/How-to-debug-acme.sh&#34;&gt;https://github.com/Neilpang/acme.sh/wiki/How-to-debug-acme.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  最后, 本文并非完全的使用说明, 还有很多高级的功能, 更高级的用法请参看其他 wiki 页面.&lt;/p&gt;
&lt;p&gt;  &lt;a href=&#34;https://github.com/Neilpang/acme.sh/wiki&#34;&gt;https://github.com/Neilpang/acme.sh/wiki&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;Docker&#34;&gt;&lt;a href=&#34;#Docker&#34; class=&#34;headerlink&#34; title=&#34;Docker&#34;&gt;&lt;/a&gt;Docker&lt;/h2&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;docker run --rm  -itd  \&lt;br&gt;  -v &amp;quot;$(pwd)/out&amp;quot;:/acme.sh  \&lt;br&gt;  -e Ali_Key=&amp;quot;xxxxxx&amp;quot; \&lt;br&gt;  -e Ali_Secret=&amp;quot;xxxx&amp;quot; \&lt;br&gt;  neilpang/acme.sh  --issue --dns dns_ali -d domain.cn -d *.domain.cn&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;详细用法，可以参考：&lt;a href=&#34;https://github.com/Neilpang/acme.sh/wiki/Run-acme.sh-in-docker&#34;&gt;传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h1 id=&#34;acme-sh-💕-docker&#34;&gt;&lt;a href=&#34;#acme-sh-💕-docker&#34; class=&#34;headerlink&#34; title=&#34;acme.sh 💕 docker&#34;&gt;&lt;/a&gt;acme.sh 💕 docker&lt;/h1&gt;&lt;p&gt;  作为 docker 的忠实粉丝之一，我知道我们讨厌在 docker 主机上安装任何东西，即使它只是复制一个 shell 脚本。&lt;/p&gt;
&lt;p&gt;  用于 letsencrypt ssl 证书的带有 acme.sh 的自动化 nginx 反向代理 docker 图像： https: &lt;a href=&#34;https://github.com/Neilpang/letsproxy&#34;&gt;&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;Neilpang&amp;#x2F;letsproxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  部署到 docker 容器并重新加载它：&lt;a href=&#34;https://github.com/Neilpang/acme.sh/wiki/deploy-to-docker-containers&#34;&gt;https :&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;Neilpang&amp;#x2F;acme.sh&amp;#x2F;wiki&amp;#x2F;deploy-to-docker-containers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  所以，这里出现了“docker 中的 acme.sh”。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基于&lt;strong&gt;alpine&lt;/strong&gt;，只有 5MB 大小。&lt;/li&gt;
&lt;li&gt;作为可执行文件运行或作为守护进程运行&lt;/li&gt;
&lt;li&gt;支持所有命令行参数。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;1-说“Hello-World”&#34;&gt;&lt;a href=&#34;#1-说“Hello-World”&#34; class=&#34;headerlink&#34; title=&#34;1.说“Hello World”&#34;&gt;&lt;/a&gt;1.说“Hello World”&lt;/h1&gt;  &lt;figure class=&#34;highlight dockerfile&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs dockerfile&#34;&gt;docker &lt;span class=&#34;hljs-keyword&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; --&lt;span class=&#34;hljs-built_in&#34;&gt;rm&lt;/span&gt; neilpang/acme.sh&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;2-用作可执行文件：&#34;&gt;&lt;a href=&#34;#2-用作可执行文件：&#34; class=&#34;headerlink&#34; title=&#34;2.用作可执行文件：&#34;&gt;&lt;/a&gt;2.用作可执行文件：&lt;/h1&gt;  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;docker run &lt;span class=&#34;hljs-attr&#34;&gt;--rm&lt;/span&gt;  -it  \&lt;br&gt;  -v &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;$(pwd)/out&amp;quot;&lt;/span&gt;:/acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt;  \&lt;br&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--net&lt;/span&gt;=host \&lt;br&gt;  neilpang/acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--issue&lt;/span&gt; -d example&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--standalone&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  您可以在此处使用&lt;strong&gt;acme.sh&lt;/strong&gt;支持的&lt;strong&gt;任何命令&lt;/strong&gt;，其他示例：&lt;/p&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;&lt;span class=&#34;hljs-selector-id&#34;&gt;#revoke&lt;/span&gt; &lt;span class=&#34;hljs-selector-tag&#34;&gt;a&lt;/span&gt; cert&lt;br&gt;docker run &lt;span class=&#34;hljs-attr&#34;&gt;--rm&lt;/span&gt;  -it  \&lt;br&gt;  -v &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;$(pwd)/out&amp;quot;&lt;/span&gt;:/acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt;  \&lt;br&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--net&lt;/span&gt;=host \&lt;br&gt;  neilpang/acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--revoke&lt;/span&gt; -d example&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-selector-id&#34;&gt;#use&lt;/span&gt; dns mode&lt;br&gt;docker run &lt;span class=&#34;hljs-attr&#34;&gt;--rm&lt;/span&gt;  -it  \&lt;br&gt;  -v &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;$(pwd)/out&amp;quot;&lt;/span&gt;:/acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt;  \&lt;br&gt;  neilpang/acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--issue&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--dns&lt;/span&gt; -d example&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-selector-id&#34;&gt;#run&lt;/span&gt; cron job&lt;br&gt;docker run &lt;span class=&#34;hljs-attr&#34;&gt;--rm&lt;/span&gt;  -it  \&lt;br&gt;  -v &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;$(pwd)/out&amp;quot;&lt;/span&gt;:/acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt;  \&lt;br&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--net&lt;/span&gt;=host \&lt;br&gt;  neilpang/acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--cron&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  无论如何，您可以像调用真正的 shell 脚本一样调用&lt;strong&gt;neilpang&amp;#x2F;acme.sh。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-将-acme-sh-作为-docker-守护进程运行。&#34;&gt;&lt;a href=&#34;#3-将-acme-sh-作为-docker-守护进程运行。&#34; class=&#34;headerlink&#34; title=&#34;3. 将 acme.sh 作为 docker 守护进程运行。&#34;&gt;&lt;/a&gt;3. 将 acme.sh 作为 docker 守护进程运行。&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;将 acme.sh 作为 docker 守护进程运行，以便它可以自动处理更新 cronjob。&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight routeros&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs routeros&#34;&gt;docker &lt;span class=&#34;hljs-built_in&#34;&gt;run&lt;/span&gt; --rm  -itd  \&lt;br&gt;  -v &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;$(pwd)&lt;/span&gt;/out&amp;quot;&lt;/span&gt;:/acme.sh  \&lt;br&gt;  &lt;span class=&#34;hljs-attribute&#34;&gt;--net&lt;/span&gt;=host \&lt;br&gt;  &lt;span class=&#34;hljs-attribute&#34;&gt;--name&lt;/span&gt;=acme.sh \&lt;br&gt;  neilpang/acme.sh daemon&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;然后你就可以使用&lt;code&gt;docker exec&lt;/code&gt;来执行任何acme.sh 命令了。&lt;/li&gt;
&lt;/ol&gt;
  &lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;docker  exec  acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--help&lt;/span&gt;&lt;br&gt;docker  exec  acme&lt;span class=&#34;hljs-selector-class&#34;&gt;.sh&lt;/span&gt; &lt;span class=&#34;hljs-attr&#34;&gt;--issue&lt;/span&gt; -d example&lt;span class=&#34;hljs-selector-class&#34;&gt;.com&lt;/span&gt;  &lt;span class=&#34;hljs-attr&#34;&gt;--standalone&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  是的，再次强调，您可以在此处使用&lt;strong&gt;acme.sh&lt;/strong&gt;支持的&lt;strong&gt;任何命令&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;Certbot&#34;&gt;&lt;a href=&#34;#Certbot&#34; class=&#34;headerlink&#34; title=&#34;Certbot&#34;&gt;&lt;/a&gt;Certbot&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://certbot.eff.org/&#34;&gt;https://certbot.eff.org/&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="ssl" />
        <category term="https" />
        <updated>2023-01-12T04:08:08.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/a2c49dae/</id>
        <title>PowerShell</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/a2c49dae/"/>
        <content type="html">&lt;h1 id=&#34;PowerShell&#34;&gt;&lt;a href=&#34;#PowerShell&#34; class=&#34;headerlink&#34; title=&#34;PowerShell&#34;&gt;&lt;/a&gt;PowerShell&lt;/h1&gt;&lt;h1 id=&#34;Note&#34;&gt;&lt;a href=&#34;#Note&#34; class=&#34;headerlink&#34; title=&#34;Note&#34;&gt;&lt;/a&gt;Note&lt;/h1&gt;&lt;h2 id=&#34;PowerShell-Oh-My-Posh-美化&#34;&gt;&lt;a href=&#34;#PowerShell-Oh-My-Posh-美化&#34; class=&#34;headerlink&#34; title=&#34;PowerShell + Oh My Posh 美化&#34;&gt;&lt;/a&gt;PowerShell + Oh My Posh 美化&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.edgeless.top/PowerShell%E7%BE%8E%E5%8C%96/&#34;&gt;参考 PowerShell美化&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;PowerShell-获取当前文件夹名称-仅获取当前文件夹名&#34;&gt;&lt;a href=&#34;#PowerShell-获取当前文件夹名称-仅获取当前文件夹名&#34; class=&#34;headerlink&#34; title=&#34;PowerShell 获取当前文件夹名称 仅获取当前文件夹名&#34;&gt;&lt;/a&gt;PowerShell 获取当前文件夹名称 仅获取当前文件夹名&lt;/h2&gt;&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs powershell&#34;&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;get-item&lt;/span&gt; .).name&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Powershell获取当前时间&#34;&gt;&lt;a href=&#34;#Powershell获取当前时间&#34; class=&#34;headerlink&#34; title=&#34;Powershell获取当前时间&#34;&gt;&lt;/a&gt;Powershell获取当前时间&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;http://www.splaybow.com/post/powershell-get-date.html&#34;&gt;参考 PowerShell使用Get-Date获取日期和时间&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在PowerShell中直接调用&lt;code&gt;Get-Date&lt;/code&gt;，可以返回当前的日期和时间，包括年、月、日、时、分、秒。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs powershell&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;PS&lt;/span&gt; &amp;gt; &lt;span class=&#34;hljs-built_in&#34;&gt;Get-Date&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;2022&lt;/span&gt;年&lt;span class=&#34;hljs-number&#34;&gt;12&lt;/span&gt;月&lt;span class=&#34;hljs-number&#34;&gt;19&lt;/span&gt;日 &lt;span class=&#34;hljs-number&#34;&gt;21&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;使用&lt;code&gt;-Format&lt;/code&gt;参数来获取&lt;code&gt;Get-Date&lt;/code&gt;中的年、月、日、时、分、秒。&lt;/p&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs txt&#34;&gt;yyyy 年&lt;br&gt;M    月&lt;br&gt;d    日&lt;br&gt;h    小时（12小时制）&lt;br&gt;H    小时（24小时制）&lt;br&gt;m    分钟&lt;br&gt;s    秒&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs powershell&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;PS&lt;/span&gt; &amp;gt; &lt;span class=&#34;hljs-built_in&#34;&gt;Get-Date&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;-Format&lt;/span&gt; HH:mm:ss&lt;br&gt;&lt;span class=&#34;hljs-number&#34;&gt;21&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;34&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Powershell-ANSI颜色&#34;&gt;&lt;a href=&#34;#Powershell-ANSI颜色&#34; class=&#34;headerlink&#34; title=&#34;Powershell ANSI颜色&#34;&gt;&lt;/a&gt;Powershell ANSI颜色&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/6920241597846126599&#34;&gt;参考: 了解 ANSI 转义码的 color 设置&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  To use one of the ANSI escape codes, we need a literal &lt;a href=&#34;https://en.wikipedia.org/wiki/Escape_character#ASCII_escape_character&#34;&gt;ESC character&lt;/a&gt;. This is octal 033, or decimal 27. In Bash, you would use &lt;code&gt;&amp;quot;\033&amp;quot;&lt;/code&gt; or &lt;code&gt;&amp;quot;\e&amp;quot;&lt;/code&gt;; There’s no direct equivalent sequence in PowerShell but you can instead embed an expression: &lt;code&gt;&amp;quot;$([char]27)&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;  PowerShell 中没有直接等效的序列，但您可以改为嵌入一个表达式：&lt;code&gt;&amp;quot;$([char]27)&amp;quot;&lt;/code&gt;，也就是说要将&lt;code&gt;\e&lt;/code&gt;修改为&lt;code&gt;$([char]27)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;  例如&lt;code&gt;\e[32;1m text \e[0m&lt;/code&gt; 修改为 &lt;code&gt;$([char]27)[32;1m text $([char]27)[0m&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;ANSI Escape code编码中有专门控制字符颜色的控制符，&lt;/strong&gt;例如：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;\e[37;44;3;1m&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\e&lt;/code&gt; 代表开始ANSI Escape code&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[&lt;/code&gt; 代表转义序列开始符 CSI，Control Sequence Introducer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;37;44;4;1&lt;/code&gt; 代表以&lt;code&gt;; &lt;/code&gt;分隔的文本样式控制符，其中 37 代表文本前景色为白色，44代表背景为蓝色，3代表斜体，1代表加粗，&lt;code&gt;;&lt;/code&gt;的数量不做限制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;m&lt;/code&gt; 代表结束控制符序列&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;常用文本样式控制符&#34;&gt;&lt;a href=&#34;#常用文本样式控制符&#34; class=&#34;headerlink&#34; title=&#34;常用文本样式控制符&#34;&gt;&lt;/a&gt;常用文本样式控制符&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;代码&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;重置&amp;#x2F;正常&lt;/td&gt;
&lt;td&gt;关闭所有属性。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;粗体或增加强度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;弱化（降低强度）&lt;/td&gt;
&lt;td&gt;未广泛支持。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;斜体&lt;/td&gt;
&lt;td&gt;未广泛支持。有时视为反相显示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;下划线&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;缓慢闪烁&lt;/td&gt;
&lt;td&gt;低于每分钟150次。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;快速闪烁&lt;/td&gt;
&lt;td&gt;MS-DOS ANSI.SYS；每分钟150以上；未广泛支持。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;反显&lt;/td&gt;
&lt;td&gt;前景色与背景色交换。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;隐藏&lt;/td&gt;
&lt;td&gt;未广泛支持。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;划除&lt;/td&gt;
&lt;td&gt;字符清晰，但标记为删除。未广泛支持。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;主要（默认）字体&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11–19&lt;/td&gt;
&lt;td&gt;替代字体&lt;/td&gt;
&lt;td&gt;选择替代字体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;尖角体&lt;/td&gt;
&lt;td&gt;几乎无支持。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;关闭粗体或双下划线&lt;/td&gt;
&lt;td&gt;关闭粗体未广泛支持；双下划线几乎无支持。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;正常颜色或强度&lt;/td&gt;
&lt;td&gt;不强不弱。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;非斜体、非尖角体&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;关闭下划线&lt;/td&gt;
&lt;td&gt;去掉单双下划线。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;关闭闪烁&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;关闭反显&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;关闭隐藏&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;关闭划除&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30–37&lt;/td&gt;
&lt;td&gt;设置前景色&lt;/td&gt;
&lt;td&gt;参见下面的颜色表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;设置前景色&lt;/td&gt;
&lt;td&gt;下一个参数是5;n或2;r;g;b，见下。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;默认前景色&lt;/td&gt;
&lt;td&gt;由具体实现定义（按照标准）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40–47&lt;/td&gt;
&lt;td&gt;设置背景色&lt;/td&gt;
&lt;td&gt;参见下面的颜色表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;设置背景色&lt;/td&gt;
&lt;td&gt;下一个参数是5;n或2;r;g;b，见下。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;默认背景色&lt;/td&gt;
&lt;td&gt;由具体实现定义（按照标准）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;Framed&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;Encircled&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;上划线&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;54&lt;/td&gt;
&lt;td&gt;Not framed or encircled&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;td&gt;关闭上划线&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;表意文字下划线或右边线&lt;/td&gt;
&lt;td&gt;几乎无支持。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61&lt;/td&gt;
&lt;td&gt;表意文字双下划线或双右边线&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;表意文字上划线或左边线&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;td&gt;表意文字双上划线或双左边线&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;表意文字着重标志&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;td&gt;表意文字属性关闭&lt;/td&gt;
&lt;td&gt;重置60–64的所有效果。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;90–97&lt;/td&gt;
&lt;td&gt;设置明亮的前景色&lt;/td&gt;
&lt;td&gt;aixterm（非标准）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100–107&lt;/td&gt;
&lt;td&gt;设置明亮的背景色&lt;/td&gt;
&lt;td&gt;aixterm（非标准）。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;颜色对照表&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/a2c49dae/e9436bb4998a4fbf9bd5abbe74121ccdtplv-k3u1fbpfcp-zoom-in-crop-mark4536000.awebp&#34; alt=&#34;3bit-color&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Powershell-修改提示符的文字内容和颜色&#34;&gt;&lt;a href=&#34;#Powershell-修改提示符的文字内容和颜色&#34; class=&#34;headerlink&#34; title=&#34;Powershell 修改提示符的文字内容和颜色&#34;&gt;&lt;/a&gt;Powershell 修改提示符的文字内容和颜色&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.lfhacks.com/tech/powershell-prompt-customization/&#34;&gt;参考: Powershell 修改提示符的文字内容和颜色&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/&#34;&gt;参考: 为 Windows PowerShell 设置 User Alias （命令别名）&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先我们先找到Powershell的配置文件的路径, 我们输入命令&lt;code&gt;echo $profile&lt;/code&gt;就能显示.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果这个文件不存在, 我们输入命令&lt;code&gt;notepad $Profile&lt;/code&gt;或者&lt;code&gt;code $Profile&lt;/code&gt;去新建一个文件.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Powershell 有一个特殊的函数： &lt;code&gt;prompt&lt;/code&gt; 函数，这个函数规定了提示符的内容和外观。&lt;/p&gt;
&lt;p&gt;我们可以利用下面的命令可以查看当前使用的 &lt;code&gt;prompt&lt;/code&gt; 函数的内容：&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs powershell&#34;&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;Get-Command&lt;/span&gt; Prompt).ScriptBlock&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过 &lt;code&gt;prompt&lt;/code&gt; 函数的返回值我们就能自定义提示符。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs powershell&#34;&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;prompt&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;br&gt;  &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;$&lt;/span&gt;([char]27)[32m&amp;quot;&lt;/span&gt; + &lt;span class=&#34;hljs-variable&#34;&gt;$&lt;/span&gt;(&lt;span class=&#34;hljs-built_in&#34;&gt;Get-Date&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;-Format&lt;/span&gt; HH:mm:ss) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;$&lt;/span&gt;([char]27)[0m&amp;quot;&lt;/span&gt; +&lt;br&gt;  &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;$&lt;/span&gt;([char]27)[95m&amp;quot;&lt;/span&gt; + &lt;span class=&#34;hljs-variable&#34;&gt;$&lt;/span&gt;((&lt;span class=&#34;hljs-built_in&#34;&gt;get-item&lt;/span&gt; .).name) + &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;$&lt;/span&gt;([char]27)[0m&amp;quot;&lt;/span&gt; +&lt;br&gt;  &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;$&lt;/span&gt;([char]27)[33m&amp;gt;&lt;span class=&#34;hljs-variable&#34;&gt;$&lt;/span&gt;([char]27)[0m&amp;quot;&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;  第一行 &lt;code&gt;Get-Date&lt;/code&gt;获取当前系统的时间, &lt;code&gt;-Format&lt;/code&gt;格式化使用&lt;code&gt;HH:mm:ss&lt;/code&gt;的格式, 前后使用了ANSI颜色转义将前景色设置为深绿色&lt;/p&gt;
&lt;p&gt;  第二行 &lt;code&gt;(get-item .).name&lt;/code&gt;获取了当前文件夹的名称, 并设置前景色为深紫色&lt;/p&gt;
&lt;p&gt;  第三行 输出一个深黄色的&lt;code&gt;&amp;gt;&lt;/code&gt;符号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入 &lt;code&gt;. $Profile&lt;/code&gt; 命令生效。(注意这里是大小写不敏感的)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;Powershell-起别名-User-Alias-命令别名&#34;&gt;&lt;a href=&#34;#Powershell-起别名-User-Alias-命令别名&#34; class=&#34;headerlink&#34; title=&#34;Powershell 起别名(User Alias) 命令别名&#34;&gt;&lt;/a&gt;Powershell 起别名(User Alias) 命令别名&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://blog.vvzero.com/2019/07/22/set-user-alias-for-windows-PowerShell/&#34;&gt;参考 为 Windows PowerShell 设置 User Alias （命令别名）&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  我们的思路就是将命令设置成为一个&lt;code&gt;function&lt;/code&gt;, 运行这个&lt;code&gt;function&lt;/code&gt;执行特定的指令即可.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;两个思路:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;New-Alias&lt;/code&gt;指令, 添加到Powershell的&lt;code&gt;$Profile&lt;/code&gt;文件里面, 每次启动运行一次. 这个命令里面不能含有空格.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/new-alias?view=powershell-7.3&#34;&gt;参考 Microsoft的Powershell文档&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs powershell&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 此命令创建一个名为 List 的别名来表示 Get-ChildItem cmdlet。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;New-Alias&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;List&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;Get-ChildItem&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 为notepad++ 设置别名 np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;New-Alias&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;np&amp;quot;&lt;/span&gt; notepad++.exe&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;function&lt;/code&gt;指令, 添加到Powershell的&lt;code&gt;$Profile&lt;/code&gt;文件里面, 把指令当作&lt;code&gt;function&lt;/code&gt;的名称来调用, 这样命令可以带有空格.&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs powershell&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 带参数的function&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-function&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;np&lt;/span&gt;+&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;param&lt;/span&gt; (&lt;br&gt;        &lt;span class=&#34;hljs-variable&#34;&gt;$ComputerName&lt;/span&gt;&lt;br&gt;    )&lt;br&gt;    notepad++.exe &lt;span class=&#34;hljs-variable&#34;&gt;$ComputerName&lt;/span&gt;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="ps" />
        <category term="powershell" />
        <updated>2022-12-19T12:48:05.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/d911b12b/</id>
        <title>Zsh 安装 配置</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/d911b12b/"/>
        <content type="html">&lt;h1 id=&#34;zsh&#34;&gt;&lt;a href=&#34;#zsh&#34; class=&#34;headerlink&#34; title=&#34;zsh&#34;&gt;&lt;/a&gt;zsh&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Zsh&lt;/strong&gt;是一个为交互使用而设计的shell，它也是一种强大的脚本语言。&lt;em&gt;bash&lt;/em&gt;、ksh 和 &lt;em&gt;tcsh&lt;/em&gt; 的许多有用特性都被合并到 &lt;em&gt;zsh&lt;/em&gt; 中; 添加了许多原始功能。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;Ubuntu&lt;/span&gt; &lt;br&gt;sudo apt-get install zsh&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;  zsh非常强大，同时它的配置也是较为繁杂，所以我们使用“oh my zsh”这个框架来简化我们的配置流程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;cat /etc/shells&lt;/code&gt; 查看当前系统有哪些shell版本&lt;br&gt;&lt;code&gt;echo @SHELL&lt;/code&gt; 查看当前使用的shell版本&lt;/p&gt;
&lt;p&gt;安装完成后会在&lt;code&gt;~&lt;/code&gt;目录下产生一个&lt;code&gt;.zshrc&lt;/code&gt;这个跟&lt;code&gt;.bashrc&lt;/code&gt;是一样的文件，只是配置的对象不一样。&lt;code&gt;rc&lt;/code&gt;就是启动的意思，启动zsh读取的配置就是这个文件。&lt;/p&gt;
&lt;h1 id=&#34;Oh-My-Zsh&#34;&gt;&lt;a href=&#34;#Oh-My-Zsh&#34; class=&#34;headerlink&#34; title=&#34;Oh My Zsh&#34;&gt;&lt;/a&gt;Oh My Zsh&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://ohmyz.sh/&#34;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Oh My Zsh 是一个令人愉快的、开源的、社区驱动的框架，用于管理你的 Zsh 配置。它捆绑了数千个有用的功能、助手、插件、主题和一些东西 让你大喊大叫… “Oh My ZSH!”&lt;/p&gt;
&lt;h2 id=&#34;安装-1&#34;&gt;&lt;a href=&#34;#安装-1&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;sh -c &amp;quot;$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&amp;quot;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装完成后发现&lt;code&gt;~&lt;/code&gt;目录下会有一个&lt;code&gt;.oh-my-zsh&lt;/code&gt;文件夹，文件夹内的一些文件主要用处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;themes&lt;/code&gt; 一些主题文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plugins&lt;/code&gt; 插件，我们的插件就下载放在这个文件夹里面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Powerlevel10k 是用于 Zsh 美化的一个非常酷的主题，它强调速度、 灵活性和开箱即用的体验。&lt;/p&gt;
&lt;h2 id=&#34;插件&#34;&gt;&lt;a href=&#34;#插件&#34; class=&#34;headerlink&#34; title=&#34;插件&#34;&gt;&lt;/a&gt;插件&lt;/h2&gt;&lt;h3 id=&#34;zsh-syntax-highlighting-语法高亮&#34;&gt;&lt;a href=&#34;#zsh-syntax-highlighting-语法高亮&#34; class=&#34;headerlink&#34; title=&#34;zsh-syntax-highlighting 语法高亮&#34;&gt;&lt;/a&gt;zsh-syntax-highlighting 语法高亮&lt;/h3&gt;&lt;p&gt;插件功能：这个包为&lt;code&gt;shell zsh&lt;/code&gt;提供语法突出显示。它允许高亮显示在&lt;code&gt;zsh&lt;/code&gt;提示符下输入到交互式终端的命令。这有助于在运行命令之前检查它们，特别是在捕获语法错误方面。&lt;br&gt;例：在你输入某个命令时，如果该命令不存在，那么它显示为红色；否则，它会变成绿色。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&amp;#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&amp;#125;/plugins/zsh-syntax-highlighting&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;将 &lt;code&gt;zsh-syntax-highlighting&lt;/code&gt; 添加到 &lt;code&gt;~/.zshrc&lt;/code&gt; 中&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs text&#34;&gt;plugins=(--other-- zsh-syntax-highlighting)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;zsh-autosuggestions-自动补全&#34;&gt;&lt;a href=&#34;#zsh-autosuggestions-自动补全&#34; class=&#34;headerlink&#34; title=&#34;zsh-autosuggestions 自动补全&#34;&gt;&lt;/a&gt;zsh-autosuggestions 自动补全&lt;/h3&gt;&lt;p&gt;插件功能：输入命令时可提示自动补全（灰色部分），按tab键（→ ）即可补全。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;git clone https://github.com/zsh-users/zsh-autosuggestions $&amp;#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&amp;#125;/plugins/zsh-autosuggestions&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;将 &lt;code&gt;zsh-autosuggestions&lt;/code&gt; 添加到 &lt;code&gt;~/.zshrc&lt;/code&gt; 中&lt;/p&gt;
&lt;figure class=&#34;highlight abnf&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs abnf&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt;(--other-- zsh-autosuggestions)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;Powerlevel10k&#34;&gt;&lt;a href=&#34;#Powerlevel10k&#34; class=&#34;headerlink&#34; title=&#34;Powerlevel10k&#34;&gt;&lt;/a&gt;Powerlevel10k&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/romkatv/powerlevel10k&#34;&gt;https://github.com/romkatv/powerlevel10k&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装-2&#34;&gt;&lt;a href=&#34;#安装-2&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;h3 id=&#34;安装字体&#34;&gt;&lt;a href=&#34;#安装字体&#34; class=&#34;headerlink&#34; title=&#34;安装字体&#34;&gt;&lt;/a&gt;安装字体&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;  powerlevel10k里面使用了很多的图标，而这些图标只有一些特定的字体才能显示，所以我们需要安装这些字体这样才能正常显示，我们称这些有很多图标的字体为&lt;code&gt;Nerd Fonts&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先我们需要先安装一下字体，我们先下载官方推荐的&lt;code&gt;MesloLGS NF&lt;/code&gt;字体来配置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download these four ttf files:&lt;ul&gt;
&lt;li&gt;[MesloLGS NF Regular.ttf](&lt;a href=&#34;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS&#34;&gt;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS&lt;/a&gt; NF Regular.ttf)&lt;/li&gt;
&lt;li&gt;[MesloLGS NF Bold.ttf](&lt;a href=&#34;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS&#34;&gt;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS&lt;/a&gt; NF Bold.ttf)&lt;/li&gt;
&lt;li&gt;[MesloLGS NF Italic.ttf](&lt;a href=&#34;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS&#34;&gt;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS&lt;/a&gt; NF Italic.ttf)&lt;/li&gt;
&lt;li&gt;[MesloLGS NF Bold Italic.ttf](&lt;a href=&#34;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS&#34;&gt;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS&lt;/a&gt; NF Bold Italic.ttf)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double-click on each file and click “Install”. This will make &lt;code&gt;MesloLGS NF&lt;/code&gt; font available to all applications on your system.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;  我们如果是在ssh配置远程主机的时候，是在本地的主机上安装这个字体。&lt;/p&gt;
&lt;p&gt;  字体影响的是显示，ssh显示是在本地渲染的，所以肯定是在本地主机上安装字体。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;其他的Nerd-Fonts字体&#34;&gt;&lt;a href=&#34;#其他的Nerd-Fonts字体&#34; class=&#34;headerlink&#34; title=&#34;其他的Nerd Fonts字体&#34;&gt;&lt;/a&gt;其他的&lt;code&gt;Nerd Fonts&lt;/code&gt;字体&lt;/h4&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts&#34;&gt;https://github.com/ryanoasis/nerd-fonts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们可以在这里下载一些打过补丁的热门字体。&lt;/p&gt;
&lt;h3 id=&#34;安装Powerlevel10k&#34;&gt;&lt;a href=&#34;#安装Powerlevel10k&#34; class=&#34;headerlink&#34; title=&#34;安装Powerlevel10k&#34;&gt;&lt;/a&gt;安装Powerlevel10k&lt;/h3&gt;&lt;p&gt;官方的README文档提出了几种安装方式，它推荐使用手动安装方式。&lt;/p&gt;
&lt;h4 id=&#34;Manual&#34;&gt;&lt;a href=&#34;#Manual&#34; class=&#34;headerlink&#34; title=&#34;Manual&#34;&gt;&lt;/a&gt;Manual&lt;/h4&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k&lt;br&gt;echo &amp;#x27;source ~/powerlevel10k/powerlevel10k.zsh-theme&amp;#x27; &amp;gt;&amp;gt;~/.zshrc&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;Oh-My-Zsh-1&#34;&gt;&lt;a href=&#34;#Oh-My-Zsh-1&#34; class=&#34;headerlink&#34; title=&#34;Oh My Zsh&#34;&gt;&lt;/a&gt;Oh My Zsh&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Clone the repository:&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $&amp;#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&amp;#125;/themes/powerlevel10k&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;~/.zshrc&lt;/code&gt;文件中，设置&lt;code&gt;ZSH_THEME=&amp;quot;powerlevel10k/powerlevel10k&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;配置&#34;&gt;&lt;a href=&#34;#配置&#34; class=&#34;headerlink&#34; title=&#34;配置&#34;&gt;&lt;/a&gt;配置&lt;/h3&gt;&lt;p&gt;安装好后我们启动zsh，在zsh环境下输入&lt;code&gt;p10k configure&lt;/code&gt;用于配置p10k&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  这一步我在&lt;code&gt;MobaXterm&lt;/code&gt;下进行，发现可配置的选项缺失很多，后面在&lt;code&gt;Windows Terminal&lt;/code&gt;重新配置发现显示是正常的。&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;MobaXterm&lt;/code&gt;下&lt;code&gt;Fira Code&lt;/code&gt;字体似乎显示也有些问题，&lt;code&gt;MesloLGS NF&lt;/code&gt;就是正常的。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="zsh" />
        <category term="shell" />
        <category term="linux" />
        <updated>2022-12-12T14:57:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/4dd4ea8a/</id>
        <title>Ip 转换成 Location 的Api</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/4dd4ea8a/"/>
        <content type="html">&lt;h1 id=&#34;ip-to-location&#34;&gt;&lt;a href=&#34;#ip-to-location&#34; class=&#34;headerlink&#34; title=&#34;ip to location&#34;&gt;&lt;/a&gt;ip to location&lt;/h1&gt;&lt;h2 id=&#34;ipwhois&#34;&gt;&lt;a href=&#34;#ipwhois&#34; class=&#34;headerlink&#34; title=&#34;ipwhois&#34;&gt;&lt;/a&gt;ipwhois&lt;/h2&gt;&lt;p&gt;IPWHOIS.IO的IP地理定位API的URL格式很简单。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;http://ipwhois.app/json/&amp;#123;IP&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;例如，我们可以用以下IP地址发出API请求：47.9.123.84。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/4dd4ea8a/ipwhois-api.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考链接:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/ip-geolocation-api/&#34;&gt;IP Geolocation API – IPWHOIS.IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/how-to-integrate-ip-geolocation-api-with-php/&#34;&gt;How to Integrate IP Geolocation API with PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/scrape-search-result-data-using-serpapi-with-python/&#34;&gt;Scrape Search Result Data using SerpApi with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/get-geocoding-using-positionstack-api-with-php/&#34;&gt;Get Geocoding using Positionstack API with PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/flight-data-using-aviationstack-api-with-php/&#34;&gt;Flight Data using Aviationstack API with PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/get-address-information-using-geocode-api-with-php/&#34;&gt;Get Address Information using Geocode API with PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/review-scraping-using-reviewapi-with-php/&#34;&gt;Review Scraping using ReviewAPI with PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/simple-web-scraping-with-zenscrape-api-using-php/&#34;&gt;Simple Web Scraping with Zenscrape API using PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/scrape-search-result-with-zenserp-api-using-php/&#34;&gt;Scrape Search Result with Zenserp API using PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/build-user-agent-lookup-system-using-userstack-api-with-php/&#34;&gt;Build User Agent Lookup System using Userstack API with PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/build-ip-lookup-website-using-ipapi-with-php/&#34;&gt;Build IP Lookup Website using ipapi with PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/build-weather-website-with-weatherstack-api-using-php/&#34;&gt;Build Weather Website with Weatherstack API using PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/get-website-visitors-info-using-ipstack-api-with-php/&#34;&gt;Get Website Visitors Info using IPStack API with PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webdamn.com/scrape-serp-data-using-serpstack-api-with-python/&#34;&gt;Scrape SERP Data using SerpStack API with Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="ip" />
        <category term="location" />
        <category term="api" />
        <updated>2022-11-08T15:24:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/6fb71d96/</id>
        <title>单位换算</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/6fb71d96/"/>
        <content type="html">&lt;h1 id=&#34;单位换算&#34;&gt;&lt;a href=&#34;#单位换算&#34; class=&#34;headerlink&#34; title=&#34;单位换算&#34;&gt;&lt;/a&gt;单位换算&lt;/h1&gt;&lt;h1 id=&#34;长度&#34;&gt;&lt;a href=&#34;#长度&#34; class=&#34;headerlink&#34; title=&#34;长度&#34;&gt;&lt;/a&gt;长度&lt;/h1&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;★ -----------------&lt;/span&gt;&lt;br&gt;1 km = 1000 m&lt;br&gt;1 m  = 100  cm&lt;br&gt;1 cm = 10   mm&lt;br&gt;1 mm = 1000 um&lt;br&gt;&lt;br&gt;1    inch = 2.54 cm&lt;br&gt;1/10 inch = 2.54 mm&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;--------------------&lt;/span&gt;&lt;br&gt;1 km = 1000 m&lt;br&gt;1 m  = 10   dm&lt;br&gt;1 dm = 10   cm&lt;br&gt;1 cm = 10   mm&lt;br&gt;1 m  = 1000 mm&lt;br&gt;1 mm = 1000 um&lt;br&gt;1 um = 1000 nm&lt;br&gt;1 nm = 1000 pm &lt;br&gt;1 pm = 1000 fm&lt;br&gt;1 fm = 1000 am&lt;br&gt;...&lt;br&gt;1 inch              = 2.54 cm&lt;br&gt;1 cm                = 0.3937008 inch&lt;br&gt;...&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;language-bash&#34;&gt;1 海里(nautical mile) = 1852 m = 1.852 km&lt;/span&gt;&lt;br&gt;1 km                = 0.5399568 海里(nautical mile)&lt;br&gt;...&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;英制长度单位&lt;/span&gt;&lt;br&gt;1 英里(mile)          = 1.609344 km&lt;br&gt;1 km                = 0.6213712 英里(mile)&lt;br&gt;...&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;天文学长度单位&lt;/span&gt;&lt;br&gt;1 光年                = 9.4653×10^12 km&lt;br&gt;1 天文单位 ≈ 1.496亿 千米&lt;br&gt;...&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;我国传统的长度单位&lt;/span&gt;&lt;br&gt;1 km                = 2 里&lt;br&gt;1 里                 = 150 丈 = 500 米&lt;br&gt;1 丈                 = 10尺&lt;br&gt;1 丈                 = 3.33米&lt;br&gt;1 尺                 = 3.33分米&lt;br&gt;1 m                 = 0.3 丈 = 3 尺 = 30 寸&lt;br&gt;1 cm                = 3 分 = 30 厘&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;时间单位&#34;&gt;&lt;a href=&#34;#时间单位&#34; class=&#34;headerlink&#34; title=&#34;时间单位&#34;&gt;&lt;/a&gt;时间单位&lt;/h1&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;★ -----------------&lt;/span&gt;&lt;br&gt;1 s  = 1000 ms&lt;br&gt;1 ms = 1000 us&lt;br&gt;1 us = 1000 ns&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;   -----------------&lt;/span&gt;&lt;br&gt;1 minute = 60 s&lt;br&gt;1 s  = 1000 ms&lt;br&gt;1 ms = 1000 us&lt;br&gt;1 us = 1000 ns&lt;br&gt;1 ns = 1000 ps&lt;br&gt;&lt;br&gt;100年      = 1世纪&lt;br&gt;365.25天   = 1年&lt;br&gt;1平太阳日     = 24小时3分56.555秒&lt;br&gt;1恒星日      = 23小时56分4.091秒&lt;br&gt;1太阳年(回归年) = 365.2422天(= 365天5小时48分46秒)&lt;br&gt;1恒星年      = 365.2564天(= 365天6小时9分9.5秒)&lt;br&gt;1朔望月      = 29.5306天&lt;br&gt;1恒星月      = 27.3712天&lt;br&gt;1太阳年      = 12个朔望日 = 354.36天&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;速度&#34;&gt;&lt;a href=&#34;#速度&#34; class=&#34;headerlink&#34; title=&#34;速度&#34;&gt;&lt;/a&gt;速度&lt;/h1&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;★ -----------------&lt;/span&gt;&lt;br&gt;1 m/s  = 3.6 km/h&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;   -----------------&lt;/span&gt;&lt;br&gt;1 mph  = 1.609344 km/h&lt;br&gt;1 km/h = 0.6213712 mph&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;温度&#34;&gt;&lt;a href=&#34;#温度&#34; class=&#34;headerlink&#34; title=&#34;温度&#34;&gt;&lt;/a&gt;温度&lt;/h1&gt;&lt;p&gt;$$&lt;br&gt;℉ &amp;#x3D; ℃ * (9&amp;#x2F;5) + 32&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;℃ &amp;#x3D; (℉ - 32)*(5&amp;#x2F;9)&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;K &amp;#x3D; ℃ + 273.15&lt;br&gt;$$&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;℃ &amp;#x3D; K - 273.15&lt;br&gt;$$&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;25 ℃ = 298.15 K = 77 F&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;





&lt;h1 id=&#34;电容单位&#34;&gt;&lt;a href=&#34;#电容单位&#34; class=&#34;headerlink&#34; title=&#34;电容单位&#34;&gt;&lt;/a&gt;电容单位&lt;/h1&gt;&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs shell&#34;&gt;&lt;br&gt;1 F  = 1000 mF&lt;br&gt;1 mF = 1000 uF&lt;br&gt;1 uF = 1000 nF&lt;br&gt;1 nF = 1000 pF&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2022/6fb71d96/tutorials068_001_zh.gif&#34; alt=&#34;C&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数值中的&lt;code&gt;R&lt;/code&gt;代表小数点&lt;code&gt;.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;标示&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;电阻&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;电容&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;电感&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;120&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;12Ω&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;12pF&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;12μH&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;122&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.2kΩ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.2nF&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.2mH&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;124&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;120kΩ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;120nF&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;120mH&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;126&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;12MΩ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;12μF&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;12H&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;R15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.15Ω&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.15pF&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.15μH&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1R5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.5Ω&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.5pF&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.5μH&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;误差符号&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;误差&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Ｆ&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;±1％&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Ｇ&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;±2％&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Ｊ&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;±5％&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Ｋ&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;±10％&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Ｍ&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;±20％&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Ｚ&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;80%,－20%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</content>
        <category term="unit" />
        <category term="m" />
        <category term="cm" />
        <category term="mm" />
        <category term="s" />
        <category term="us" />
        <updated>2022-11-01T14:57:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/3db44d04/</id>
        <title>Android 文件传输模式 电脑无法识别</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/3db44d04/"/>
        <content type="html">&lt;h1 id=&#34;android-文件传输模式-电脑无法识别&#34;&gt;&lt;a href=&#34;#android-文件传输模式-电脑无法识别&#34; class=&#34;headerlink&#34; title=&#34;android 文件传输模式 电脑无法识别&#34;&gt;&lt;/a&gt;android 文件传输模式 电脑无法识别&lt;/h1&gt;&lt;p&gt;最近android手机连接电脑选择传输文件模式，电脑不再识别手机。选择照片模式就没有问题。&lt;/p&gt;
&lt;p&gt;手机选择文件传输模式后 选择自动搜索驱动程序 安装后会 提示“这个inf中的服务安装段落无效”。&lt;/p&gt;
&lt;h2 id=&#34;步骤&#34;&gt;&lt;a href=&#34;#步骤&#34; class=&#34;headerlink&#34; title=&#34;步骤&#34;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;按“Win+X” 点击 “设备管理器”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在设备管理器中找到你的手机，名字可能是你的手机型号，可能是未知设备 ，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;右键选择更新驱动程序.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选择 “浏览计算机以查找驱动程序软件”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选择 “让我从计算机上的可用驱动程序列表中选取”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在列表里面找到“便携设备” (可能没有这一步操作)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选择 “MTP USB 设备”&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/3db44d04/1636599848857.png&#34; alt=&#34;win10系统识别不了USB设备解决方法介绍-Win10系统识别不了USB设备怎么办-53系统之家&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 “下一步”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回到设备管理器看到设备已经可用正确运作了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/studio/run/oem-usb&#34;&gt;安装原始设备制造商 (OEM) USB 驱动程序&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.android.com/studio/run/win-usb&#34;&gt;获取 Google USB 驱动程序&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="windows" />
        <category term="android" />
        <category term="mtp" />
        <category term="pc" />
        <category term="driver" />
        <updated>2022-10-10T14:57:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/9d389561/</id>
        <title>Tmux 终端复用器(Terminal Multiplexer)</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/9d389561/"/>
        <content type="html">&lt;h1 id=&#34;tmux-终端复用器-terminal-multiplexer&#34;&gt;&lt;a href=&#34;#tmux-终端复用器-terminal-multiplexer&#34; class=&#34;headerlink&#34; title=&#34;tmux 终端复用器(terminal multiplexer)&#34;&gt;&lt;/a&gt;tmux 终端复用器(terminal multiplexer)&lt;/h1&gt;&lt;p&gt;☆为重要内容&lt;/p&gt;
&lt;h1 id=&#34;Tmux-简介&#34;&gt;&lt;a href=&#34;#Tmux-简介&#34; class=&#34;headerlink&#34; title=&#34;Tmux 简介&#34;&gt;&lt;/a&gt;Tmux 简介&lt;/h1&gt;&lt;p&gt;tmux 终端复用器(terminal multiplexer)&lt;/p&gt;
&lt;h2 id=&#34;tmux-能干什么&#34;&gt;&lt;a href=&#34;#tmux-能干什么&#34; class=&#34;headerlink&#34; title=&#34;tmux 能干什么&#34;&gt;&lt;/a&gt;tmux 能干什么&lt;/h2&gt;&lt;p&gt;命令行的典型使用方式是，打开一个终端窗口（terminal window，以下简称”窗口”），在里面输入命令。&lt;strong&gt;用户与计算机的这种临时的交互，称为一次”会话”（session）&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;会话的一个重要特点是，窗口与其中启动的进程是&lt;a href=&#34;https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html&#34;&gt;连在一起&lt;/a&gt;的。打开窗口，会话开始；关闭窗口，会话结束，会话内部的进程也会随之终止，不管有没有运行完。&lt;/p&gt;
&lt;p&gt;一个典型的例子就是，&lt;a href=&#34;https://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html&#34;&gt;SSH 登录&lt;/a&gt;远程计算机，打开一个远程窗口执行一个命令例如&lt;code&gt;iperf3 -s&lt;/code&gt;。这时，关掉SSH，会发现&lt;code&gt;iperf3&lt;/code&gt;进程也被关掉了。这是因为&lt;code&gt;iperf3&lt;/code&gt;属于SSH的子进程，SSH作为父进程，如果父进程关掉了，子进程也就关掉了。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，会话与窗口可以”解绑”：窗口关闭时，会话并不终止，而是继续运行，等到以后需要的时候，再让会话”绑定”其他窗口。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tmux 就是会话与窗口的”解绑”工具，将它们彻底分离。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用。&lt;/li&gt;
&lt;li&gt;它可以让新窗口”接入”已经存在的会话。&lt;/li&gt;
&lt;li&gt;它允许每个会话有多个连接窗口，因此可以多人实时共享会话。&lt;/li&gt;
&lt;li&gt;它还支持窗口任意的垂直和水平拆分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;类似的终端复用器还有 GNU Screen。Tmux 与它功能相似，但是更易用，也更强大。&lt;/p&gt;
&lt;h1 id=&#34;基本使用&#34;&gt;&lt;a href=&#34;#基本使用&#34; class=&#34;headerlink&#34; title=&#34;基本使用&#34;&gt;&lt;/a&gt;基本使用&lt;/h1&gt;&lt;p&gt;Tmux 一般需要自己安装。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# Ubuntu 或 Debian&lt;/span&gt;&lt;br&gt;$ sudo apt-get install tmux&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 启动&lt;/span&gt;&lt;br&gt;$ tmux&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 退出&lt;/span&gt;&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;exit&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;启动后底部&lt;u&gt;左边&lt;/u&gt;是&lt;strong&gt;窗口&lt;/strong&gt;信息（编号和名称），&lt;u&gt;右侧&lt;/u&gt;是系统信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/9d389561/image-20220929235001871.png&#34; alt=&#34;image-20220929235001871&#34;&gt;&lt;/p&gt;
&lt;p&gt;按下&lt;code&gt;Ctrl+d&lt;/code&gt;或者显式输入&lt;code&gt;exit&lt;/code&gt;命令，就可以退出 Tmux 窗口。&lt;/p&gt;
&lt;h2 id=&#34;前缀键☆&#34;&gt;&lt;a href=&#34;#前缀键☆&#34; class=&#34;headerlink&#34; title=&#34;前缀键☆&#34;&gt;&lt;/a&gt;&lt;strong&gt;前缀键&lt;/strong&gt;☆&lt;/h2&gt;&lt;p&gt;Tmux 窗口有大量的快捷键。所有快捷键都要通过前缀键唤起。默认的前缀键是&lt;code&gt;Ctrl+b&lt;/code&gt;，即先按下&lt;code&gt;Ctrl+b&lt;/code&gt;，快捷键才会生效。&lt;/p&gt;
&lt;p&gt;举例来说，帮助命令的快捷键是&lt;code&gt;Ctrl+b ?&lt;/code&gt;。它的用法是，在 Tmux 窗口中，先按下&lt;code&gt;Ctrl+b&lt;/code&gt;，再按下&lt;code&gt;?&lt;/code&gt;，就会显示帮助信息。&lt;/p&gt;
&lt;p&gt;然后，按下 ESC 键或&lt;code&gt;q&lt;/code&gt;键，就可以退出帮助。&lt;/p&gt;
&lt;h2 id=&#34;会话-窗格-窗口-的概念☆&#34;&gt;&lt;a href=&#34;#会话-窗格-窗口-的概念☆&#34; class=&#34;headerlink&#34; title=&#34;会话  窗格  窗口  的概念☆&#34;&gt;&lt;/a&gt;&lt;strong&gt;会话  窗格  窗口  的概念&lt;/strong&gt;☆&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  会话 session&lt;br&gt;  窗口 windows&lt;br&gt;  窗格 pane&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tmux new&lt;/code&gt;的是会话, 会话可以包括多个窗口, 窗口内可以有多个窗格&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tmux ls&lt;/code&gt; 列出的是会话&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/2022/9d389561/image-20220930003505311.png&#34; alt=&#34;image-20220930003505311&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;会话的管理&#34;&gt;&lt;a href=&#34;#会话的管理&#34; class=&#34;headerlink&#34; title=&#34;会话的管理&#34;&gt;&lt;/a&gt;会话的管理&lt;/h1&gt;&lt;h2 id=&#34;快捷键☆&#34;&gt;&lt;a href=&#34;#快捷键☆&#34; class=&#34;headerlink&#34; title=&#34;快捷键☆&#34;&gt;&lt;/a&gt;快捷键☆&lt;/h2&gt;&lt;p&gt;下面是一些会话相关的快捷键。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b d&lt;/code&gt;：分离当前会话。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b s&lt;/code&gt;：列出所有会话。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b $&lt;/code&gt;：重命名当前会话。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;3-1-new新建会话☆&#34;&gt;&lt;a href=&#34;#3-1-new新建会话☆&#34; class=&#34;headerlink&#34; title=&#34;3.1 new新建会话☆&#34;&gt;&lt;/a&gt;3.1 new新建会话☆&lt;/h2&gt;&lt;p&gt;第一个启动的 Tmux 窗口，编号是&lt;code&gt;0&lt;/code&gt;，第二个窗口的编号是&lt;code&gt;1&lt;/code&gt;，以此类推。这些窗口对应的会话，就是 0 号会话、1 号会话。&lt;/p&gt;
&lt;p&gt;使用编号区分会话，不太直观，更好的方法是为会话起名。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 直接新建一个&lt;/span&gt;&lt;br&gt;$ tmux&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 新建并设置一个名字&lt;/span&gt;&lt;br&gt;$ tmux new -s &amp;lt;session-name&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面命令新建一个指定名称的会话。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;tmux&lt;/code&gt;内应该是无法执行这个指令的, 需要分屏参考下面的窗格操作章节.&lt;/p&gt;
&lt;h2 id=&#34;3-2-detach分离会话☆&#34;&gt;&lt;a href=&#34;#3-2-detach分离会话☆&#34; class=&#34;headerlink&#34; title=&#34;3.2 detach分离会话☆&#34;&gt;&lt;/a&gt;3.2 detach分离会话☆&lt;/h2&gt;&lt;p&gt;在 Tmux 窗口中，按下&lt;code&gt;Ctrl+b d&lt;/code&gt;或者输入&lt;code&gt;tmux detach&lt;/code&gt;命令，就会将当前会话与窗口分离。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;$ tmux detach&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面命令执行后，就会退出当前 Tmux 窗口，但是会话和里面的进程仍然在后台运行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tmux ls&lt;/code&gt;命令可以查看当前所有的 Tmux 会话。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;$ tmux &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# or&lt;/span&gt;&lt;br&gt;$ tmux list-session&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;3-3-attach接入会话☆&#34;&gt;&lt;a href=&#34;#3-3-attach接入会话☆&#34; class=&#34;headerlink&#34; title=&#34;3.3 attach接入会话☆&#34;&gt;&lt;/a&gt;3.3 attach接入会话☆&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux attach&lt;/code&gt;命令用于重新接入某个已存在的会话。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 使用会话编号&lt;/span&gt;&lt;br&gt;$ tmux attach -t 0&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 使用会话名称&lt;/span&gt;&lt;br&gt;$ tmux attach -t &amp;lt;session-name&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;3-4-kill-session杀死会话☆&#34;&gt;&lt;a href=&#34;#3-4-kill-session杀死会话☆&#34; class=&#34;headerlink&#34; title=&#34;3.4 kill-session杀死会话☆&#34;&gt;&lt;/a&gt;3.4 kill-session杀死会话☆&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux kill-session&lt;/code&gt;命令用于杀死某个会话。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 使用会话编号&lt;/span&gt;&lt;br&gt;$ tmux kill-session -t 0&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 使用会话名称&lt;/span&gt;&lt;br&gt;$ tmux kill-session -t &amp;lt;session-name&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;3-5-切换会话&#34;&gt;&lt;a href=&#34;#3-5-切换会话&#34; class=&#34;headerlink&#34; title=&#34;3.5 切换会话&#34;&gt;&lt;/a&gt;3.5 切换会话&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux switch&lt;/code&gt;命令用于切换会话。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 使用会话编号&lt;/span&gt;&lt;br&gt;$ tmux switch -t 0&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 使用会话名称&lt;/span&gt;&lt;br&gt;$ tmux switch -t &amp;lt;session-name&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;3-6-重命名会话&#34;&gt;&lt;a href=&#34;#3-6-重命名会话&#34; class=&#34;headerlink&#34; title=&#34;3.6 重命名会话&#34;&gt;&lt;/a&gt;3.6 重命名会话&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux rename-session&lt;/code&gt;命令用于重命名会话。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;$ tmux rename-session -t 0 &amp;lt;new-name&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面命令将0号会话重命名。&lt;/p&gt;
&lt;h1 id=&#34;窗格操作&#34;&gt;&lt;a href=&#34;#窗格操作&#34; class=&#34;headerlink&#34; title=&#34;窗格操作&#34;&gt;&lt;/a&gt;窗格操作&lt;/h1&gt;&lt;h2 id=&#34;快捷键☆-1&#34;&gt;&lt;a href=&#34;#快捷键☆-1&#34; class=&#34;headerlink&#34; title=&#34;快捷键☆&#34;&gt;&lt;/a&gt;快捷键☆&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b %&lt;/code&gt;：划分左右两个窗格。☆&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b &amp;quot;&lt;/code&gt;：划分上下两个窗格。☆&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b &amp;lt;arrow key&amp;gt;&lt;/code&gt;：光标切换到其他窗格。&lt;code&gt;&amp;lt;arrow key&amp;gt;&lt;/code&gt;是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键&lt;code&gt;↓&lt;/code&gt;。☆&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b ;&lt;/code&gt;：光标切换到上一个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b o&lt;/code&gt;：光标切换到下一个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b &amp;#123;&lt;/code&gt;：当前窗格与上一个窗格交换位置。☆&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b &amp;#125;&lt;/code&gt;：当前窗格与下一个窗格交换位置。☆&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b Ctrl+o&lt;/code&gt;：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b Alt+o&lt;/code&gt;：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b x&lt;/code&gt;：关闭当前窗格。☆&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b !&lt;/code&gt;：将当前窗格拆分为一个独立窗口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b z&lt;/code&gt;：当前窗格全屏显示，再使用一次会变回原来大小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b Ctrl+&amp;lt;arrow key&amp;gt;&lt;/code&gt;：按箭头方向调整窗格大小。☆&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b q&lt;/code&gt;：显示窗格编号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;5-1-划分窗格&#34;&gt;&lt;a href=&#34;#5-1-划分窗格&#34; class=&#34;headerlink&#34; title=&#34;5.1 划分窗格&#34;&gt;&lt;/a&gt;5.1 划分窗格&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux split-window&lt;/code&gt;命令用来划分窗格。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 划分上下两个窗格&lt;/span&gt;&lt;br&gt;$ tmux split-window&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 划分左右两个窗格&lt;/span&gt;&lt;br&gt;$ tmux split-window -h&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;5-2-移动光标&#34;&gt;&lt;a href=&#34;#5-2-移动光标&#34; class=&#34;headerlink&#34; title=&#34;5.2 移动光标&#34;&gt;&lt;/a&gt;5.2 移动光标&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux select-pane&lt;/code&gt;命令用来移动光标位置。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 光标切换到上方窗格&lt;/span&gt;&lt;br&gt;$ tmux select-pane -U&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 光标切换到下方窗格&lt;/span&gt;&lt;br&gt;$ tmux select-pane -D&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 光标切换到左边窗格&lt;/span&gt;&lt;br&gt;$ tmux select-pane -L&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 光标切换到右边窗格&lt;/span&gt;&lt;br&gt;$ tmux select-pane -R&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;5-3-交换窗格位置&#34;&gt;&lt;a href=&#34;#5-3-交换窗格位置&#34; class=&#34;headerlink&#34; title=&#34;5.3 交换窗格位置&#34;&gt;&lt;/a&gt;5.3 交换窗格位置&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux swap-pane&lt;/code&gt;命令用来交换窗格位置。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 当前窗格上移&lt;/span&gt;&lt;br&gt;$ tmux swap-pane -U&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 当前窗格下移&lt;/span&gt;&lt;br&gt;$ tmux swap-pane -D&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;窗口管理&#34;&gt;&lt;a href=&#34;#窗口管理&#34; class=&#34;headerlink&#34; title=&#34;窗口管理&#34;&gt;&lt;/a&gt;窗口管理&lt;/h1&gt;&lt;h2 id=&#34;快捷键☆-2&#34;&gt;&lt;a href=&#34;#快捷键☆-2&#34; class=&#34;headerlink&#34; title=&#34;快捷键☆&#34;&gt;&lt;/a&gt;快捷键☆&lt;/h2&gt;&lt;p&gt;下面是一些窗口操作的快捷键。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b c&lt;/code&gt;：创建一个新窗口，状态栏会显示多个窗口的信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b p&lt;/code&gt;：切换到上一个窗口（按照状态栏上的顺序）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b n&lt;/code&gt;：切换到下一个窗口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b &amp;lt;number&amp;gt;&lt;/code&gt;：切换到指定编号的窗口，其中的&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;是状态栏上的窗口编号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b w&lt;/code&gt;：从列表中选择窗口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b ,&lt;/code&gt;：窗口重命名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;6-1-新建窗口&#34;&gt;&lt;a href=&#34;#6-1-新建窗口&#34; class=&#34;headerlink&#34; title=&#34;6.1 新建窗口&#34;&gt;&lt;/a&gt;6.1 新建窗口&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux new-window&lt;/code&gt;命令用来创建新窗口。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;$ tmux new-window&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 新建一个指定名称的窗口&lt;/span&gt;&lt;br&gt;$ tmux new-window -n &amp;lt;window-name&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;6-2-切换窗口&#34;&gt;&lt;a href=&#34;#6-2-切换窗口&#34; class=&#34;headerlink&#34; title=&#34;6.2 切换窗口&#34;&gt;&lt;/a&gt;6.2 切换窗口&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux select-window&lt;/code&gt;命令用来切换窗口。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 切换到指定编号的窗口&lt;/span&gt;&lt;br&gt;$ tmux select-window -t &amp;lt;window-number&amp;gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 切换到指定名称的窗口&lt;/span&gt;&lt;br&gt;$ tmux select-window -t &amp;lt;window-name&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;6-3-重命名窗口&#34;&gt;&lt;a href=&#34;#6-3-重命名窗口&#34; class=&#34;headerlink&#34; title=&#34;6.3 重命名窗口&#34;&gt;&lt;/a&gt;6.3 重命名窗口&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux rename-window&lt;/code&gt;命令用于为当前窗口起名（或重命名）。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;$ tmux rename-window &amp;lt;new-name&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;Note&#34;&gt;&lt;a href=&#34;#Note&#34; class=&#34;headerlink&#34; title=&#34;Note&#34;&gt;&lt;/a&gt;Note&lt;/h1&gt;&lt;h2 id=&#34;一些其他的快捷键&#34;&gt;&lt;a href=&#34;#一些其他的快捷键&#34; class=&#34;headerlink&#34; title=&#34;一些其他的快捷键&#34;&gt;&lt;/a&gt;一些其他的快捷键&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 列出所有快捷键，及其对应的 Tmux 命令&lt;/span&gt;&lt;br&gt;$ tmux list-keys&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 列出所有 Tmux 命令及其参数&lt;/span&gt;&lt;br&gt;$ tmux list-commands&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 列出当前所有 Tmux 会话的信息&lt;/span&gt;&lt;br&gt;$ tmux info&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 重新加载当前的 Tmux 配置&lt;/span&gt;&lt;br&gt;$ tmux source-file ~/.tmux.conf&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;开启鼠标支持&#34;&gt;&lt;a href=&#34;#开启鼠标支持&#34; class=&#34;headerlink&#34; title=&#34;开启鼠标支持&#34;&gt;&lt;/a&gt;开启鼠标支持&lt;/h2&gt;&lt;p&gt;tmux2 以上版本和 tmux2 以上版本有所不同&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  查看版本&lt;code&gt;tmux -V&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;  注意大写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;tmux2-以上&#34;&gt;&lt;a href=&#34;#tmux2-以上&#34; class=&#34;headerlink&#34; title=&#34;tmux2 以上&#34;&gt;&lt;/a&gt;tmux2 以上&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;写入配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;~/.tmux.conf&lt;/code&gt;中加入：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# Enable mouse mode (tmux 2.1 and above)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;set&lt;/span&gt; -g mouse on&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# Mouse based copy&lt;/span&gt;&lt;br&gt;bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;reattach-to-user-namespace pbcopy&amp;quot;&lt;/span&gt;&lt;br&gt;bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;reattach-to-user-namespace pbcopy&amp;quot;&lt;/span&gt; &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;临时使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;按完前缀ctrl+B后，再按冒号：进入&lt;code&gt;命令行&lt;/code&gt;模式，输入&lt;code&gt;set -g mouse on&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;tmux2-以下&#34;&gt;&lt;a href=&#34;#tmux2-以下&#34; class=&#34;headerlink&#34; title=&#34;tmux2 以下&#34;&gt;&lt;/a&gt;tmux2 以下&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;写入配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;~/.tmux.conf&lt;/code&gt;中加入：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;setw -g mouse-resize-pane on&lt;br&gt;setw -g mouse-select-pane on&lt;br&gt;setw -g mouse-select-window on&lt;br&gt;setw -g mode-mouse on&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;  这几行的作用分别是:&lt;br&gt;  开启用鼠标拖动调节pane的大小（拖动位置是pane之间的分隔线）&lt;br&gt;  开启用鼠标点击pane来激活该pane&lt;br&gt;  开启用鼠标点击来切换活动window（点击位置是状态栏的窗口名称）&lt;br&gt;  开启window&amp;#x2F;pane里面的鼠标支持（也即可以用鼠标滚轮回滚显示窗口内容，此时还可以用鼠标选取文本）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/&#34;&gt;A Quick and Easy Guide to tmux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://danielmiessler.com/study/tmux/&#34;&gt;Tactical tmux: The 10 Most Important Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxize.com/post/getting-started-with-tmux/&#34;&gt;Getting started with Tmux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2019/10/tmux.html&#34;&gt;阮一峰&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="linux" />
        <category term="tmux" />
        <updated>2022-09-29T15:57:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/a1ed3941/</id>
        <title>我的工作法</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/a1ed3941/"/>
        <content type="html">&lt;h1 id=&#34;我的工作法&#34;&gt;&lt;a href=&#34;#我的工作法&#34; class=&#34;headerlink&#34; title=&#34;我的工作法&#34;&gt;&lt;/a&gt;我的工作法&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://unknwon.cn/2021/211013-boring-methodology-to-be-productive/&#34;&gt;高效工作法的朴素方法论 -By无闻&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/42694082&#34;&gt;逗总出品：GTD最全面教程，从入门到精通&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;出来玩最重要的是出来&#34;&gt;&lt;a href=&#34;#出来玩最重要的是出来&#34; class=&#34;headerlink&#34; title=&#34;出来玩最重要的是出来&#34;&gt;&lt;/a&gt;出来玩最重要的是出来&lt;/h1&gt;&lt;p&gt;不管今天一天做什么惊天地的大事, 第一步都是先起床.&lt;/p&gt;
&lt;h2 id=&#34;花三分钟安排一天&#34;&gt;&lt;a href=&#34;#花三分钟安排一天&#34; class=&#34;headerlink&#34; title=&#34;花三分钟安排一天&#34;&gt;&lt;/a&gt;花三分钟安排一天&lt;/h2&gt;&lt;p&gt;每天开始，先梳理一遍今日视图里的所有任务&lt;/p&gt;
&lt;p&gt;梳理任务的关键在于对于自己实际的产出效率和可用时间上的正确评判&lt;/p&gt;
&lt;h2 id=&#34;创造仪式感&#34;&gt;&lt;a href=&#34;#创造仪式感&#34; class=&#34;headerlink&#34; title=&#34;创造仪式感&#34;&gt;&lt;/a&gt;创造仪式感&lt;/h2&gt;&lt;p&gt;有的人喜欢喝咖啡, 比如倒好一杯咖啡之后就放下手机, 避免去接触任何和当前手上事务不相关的内容(放下手机并让它远离自己).&lt;/p&gt;
&lt;h1 id=&#34;推送通知是互联网时代的毒药&#34;&gt;&lt;a href=&#34;#推送通知是互联网时代的毒药&#34; class=&#34;headerlink&#34; title=&#34;推送通知是互联网时代的毒药&#34;&gt;&lt;/a&gt;推送通知是互联网时代的毒药&lt;/h1&gt;&lt;p&gt;我注意到推送通知经常会带给人们焦虑的情绪，尤其是工作上的，我对此也深恶痛绝。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在工作时间(专注的时间)关掉它们(尤其是手机), 别让他们打断你的工作节奏&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;异步沟通是健康的协作方式&#34;&gt;&lt;a href=&#34;#异步沟通是健康的协作方式&#34; class=&#34;headerlink&#34; title=&#34;异步沟通是健康的协作方式&#34;&gt;&lt;/a&gt;异步沟通是健康的协作方式&lt;/h1&gt;&lt;p&gt;实时沟通会打断各自的计划, 能够以异步沟通完成的事, 千万不要去同步沟通.  &lt;/p&gt;
&lt;p&gt;马斯克同样推崇异步沟通&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kLscv2VAQEE&#34;&gt;https://www.youtube.com/watch?v=kLscv2VAQEE&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;给自己放个假&#34;&gt;&lt;a href=&#34;#给自己放个假&#34; class=&#34;headerlink&#34; title=&#34;给自己放个假&#34;&gt;&lt;/a&gt;给自己放个假&lt;/h1&gt;&lt;p&gt;软件类属创造性工作，而人类大脑又是世界上最复杂、最精密的仪器。&lt;/p&gt;
&lt;p&gt;超时长工作并不会使得大脑变得更具创造性，因为每个机械师都知道零部件需要定期检查和维护。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;恐怕你也无法想象你的航空公司会告诉你某架次飞机会因为长期没有检修而飞得更快吧？&lt;/strong&gt;&lt;/p&gt;
</content>
        <category term="life" />
        <category term="workflow" />
        <updated>2022-09-19T12:54:03.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/bc4a75ff/</id>
        <title>JPEG JPEG2000 WebP PNG GIF对比</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/bc4a75ff/"/>
        <content type="html">&lt;h1 id=&#34;图像的显示原理&#34;&gt;&lt;a href=&#34;#图像的显示原理&#34; class=&#34;headerlink&#34; title=&#34;图像的显示原理&#34;&gt;&lt;/a&gt;图像的显示原理&lt;/h1&gt;&lt;h2 id=&#34;有损-x2F-无损压缩&#34;&gt;&lt;a href=&#34;#有损-x2F-无损压缩&#34; class=&#34;headerlink&#34; title=&#34;有损&amp;#x2F;无损压缩&#34;&gt;&lt;/a&gt;有损&amp;#x2F;无损压缩&lt;/h2&gt;&lt;p&gt;图片文件格式有可能会对图片的文件大小进行不同程度的压缩，图片的压缩分为有损压缩和无损压缩两种。&lt;/p&gt;
&lt;h3 id=&#34;有损压缩&#34;&gt;&lt;a href=&#34;#有损压缩&#34; class=&#34;headerlink&#34; title=&#34;有损压缩&#34;&gt;&lt;/a&gt;有损压缩&lt;/h3&gt;&lt;p&gt;对图像本身的改变，在保存图像时保留了较多的亮度信息，而将色相和色纯度的信息和周围的像素进行合并，合并的比例不同，压缩的比例也不同，由于信息量减少了，所以压缩比可以很高，图像质量也会相应的下降。并且这种损失是不可逆的，我们不可能从有一个有损压缩过的图片中恢复出全来的图片。常见的有损压缩手段，是按照一定的算法将临近的像素点进行合并。&lt;br&gt;&lt;strong&gt;有损压缩的原理：&lt;/strong&gt; &lt;em&gt;删除景物边缘的某些颜色部分，当人们在屏幕上观看这个场景图片，大脑会利用在景物上看到的颜色填补所丢失的颜色部分。&lt;/em&gt;&lt;br&gt;&lt;strong&gt;有损压缩的优缺点：&lt;/strong&gt; &lt;em&gt;是保持颜色的逐渐变化，删除图像中颜色的突然变化。生物学中的大量实验证明，人类大脑会利用与附近最接近的颜色来填补所丢失的颜色。例如，对于蓝色天空背景上的一朵白云，有损压缩的方法就是删除图像中景物边缘的某些颜色部分。当在·屏幕上看这幅图时，大脑会利用在景物上看到的颜色填补所丢失的颜色部分。利用有损压缩技术，某些数据被有意地删除了，而被取消的数据也不再恢复。 无可否认，利用有损压缩技术可以大大地压缩文件的数据，但是会影响图像质量。如果使用了有损压缩的图像仅在屏幕上显示，可能对图像质量影响不太大，至少对于人类眼睛的识别程度来说区别不大。可是，如果要把一幅经过有损压缩技术处理的图像用高分辨率打印机打印出来，那么图像质量就会有明显的受损痕迹。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;无损压缩&#34;&gt;&lt;a href=&#34;#无损压缩&#34; class=&#34;headerlink&#34; title=&#34;无损压缩&#34;&gt;&lt;/a&gt;无损压缩&lt;/h3&gt;&lt;p&gt;无损压缩的基本原理是相同的颜色信息只需保存一次。压缩图像的软件首先会确定图像中哪些区域是相同的，哪些是不同的。包括了重复数据的图像(如蓝天) 就可以被压缩，只有蓝天的起始点和终结点需要被记录下来。但是蓝色可能还会有不同的深浅，天空有时也可能被树木、山峰或其他的对象掩盖，这些就需要另外记录。从本质上看，无损压缩的方法可以删除一些重复数据，大大减少要在磁盘上保存的图像尺寸。但是，无损压缩的方法并不能减少图像的内存占用量，这是因为，当从磁盘上读取图像时，软件又会把丢失的像素用适当的颜色信息填充进来。如果要减少图像占用内存的容量，就必须使用有损压缩方法。&lt;br&gt;&lt;strong&gt;无损压缩的特点：&lt;/strong&gt; &lt;em&gt;相同的颜色信息只需保存一次。&lt;/em&gt;&lt;br&gt;&lt;strong&gt;无损压缩的原理：&lt;/strong&gt; &lt;em&gt;首先辨别出相同颜色的区域，然后把这些相同的数据信息进行压缩记录，也就是记录它的颜色信息、起始和终止位置。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;索引色-x2F-直接色&#34;&gt;&lt;a href=&#34;#索引色-x2F-直接色&#34; class=&#34;headerlink&#34; title=&#34;索引色&amp;#x2F;直接色&#34;&gt;&lt;/a&gt;索引色&amp;#x2F;直接色&lt;/h2&gt;&lt;p&gt;计算机在表示颜色的时候，有两种形式，一种称作索引颜色(Index Color)，一种称作直接颜色(Direct Color)。&lt;/p&gt;
&lt;h3 id=&#34;索引色。&#34;&gt;&lt;a href=&#34;#索引色。&#34; class=&#34;headerlink&#34; title=&#34;索引色。&#34;&gt;&lt;/a&gt;索引色。&lt;/h3&gt;&lt;p&gt;是一种以有限的方式管理数字图像颜色的技术，以节省计算机内存和文件存储，同时加速显示刷新和文件传输。即用一个数字来代表（索引）一种颜色，在存储图片的时候，存储一个数字的组合，同时存储数字到图片颜色的映射。这种方式只能存储有限种颜色，通常是256种颜色，对应到计算机系统中，使用一个字节的数字来索引一种颜色。&lt;/p&gt;
&lt;h3 id=&#34;直接色。&#34;&gt;&lt;a href=&#34;#直接色。&#34; class=&#34;headerlink&#34; title=&#34;直接色。&#34;&gt;&lt;/a&gt;直接色。&lt;/h3&gt;&lt;p&gt;使用四个数字来代表一种颜色，这四个数字分别代表这个颜色中红色、绿色、蓝色以及透明度（即rgba）。现在流行的显示设备可以在这四个维度分别支持256种变化，所以直接色可以表示2的32次方种颜色。当然并非所有的直接色都支持这么多种，为压缩空间使用，有可能只有表达红、绿、蓝的三个数字，每个数字也可能不支持256种变化之多&lt;/p&gt;
&lt;h2 id=&#34;位图-x2F-矢量图&#34;&gt;&lt;a href=&#34;#位图-x2F-矢量图&#34; class=&#34;headerlink&#34; title=&#34;位图&amp;#x2F;矢量图&#34;&gt;&lt;/a&gt;位图&amp;#x2F;矢量图&lt;/h2&gt;&lt;h3 id=&#34;位图。&#34;&gt;&lt;a href=&#34;#位图。&#34; class=&#34;headerlink&#34; title=&#34;位图。&#34;&gt;&lt;/a&gt;位图。&lt;/h3&gt;&lt;p&gt;位图也叫做点阵图，栅格图像，像素图。简单的说，就是最小单位由像素构成的图，缩放会失真。构成位图的最小单位是像素，位图就是由像素阵列的排列来实现其显示效果的，每个像素有自己的颜色信息，在对位图图像进行编辑操作的时候，可操作的对象是每个像素，我们可以改变图像的色相、饱和度、明度，从而改变图像的显示效果。举个例子来说，位图图像就好比在巨大的沙盘上画好的画，当你从远处看的时候，画面细腻多彩，但是当你靠的非常近的时候，你就能看到组成画面的每粒沙子以及每个沙粒单纯的不可变化颜色。&lt;/p&gt;
&lt;h3 id=&#34;矢量图，&#34;&gt;&lt;a href=&#34;#矢量图，&#34; class=&#34;headerlink&#34; title=&#34;矢量图，&#34;&gt;&lt;/a&gt;矢量图，&lt;/h3&gt;&lt;p&gt;也叫做向量图。矢量图并不纪录画面上每一点的信息，而是纪录了元素形状及颜色的算法，当你打开一付矢量图的时候，软件对图形象对应的函数进行运算，将运算结果[图形的形状和颜色]显示给你看。无论显示画面是大还是小，画面上的对象对应的算法是不变的，所以，即使对画面进行倍数相当大的缩放，其显示效果仍然相同(不失真)。&lt;/p&gt;
&lt;h1 id=&#34;JPEG-JPEG2000-WebP&#34;&gt;&lt;a href=&#34;#JPEG-JPEG2000-WebP&#34; class=&#34;headerlink&#34; title=&#34;JPEG JPEG2000 WebP&#34;&gt;&lt;/a&gt;JPEG JPEG2000 WebP&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;  摘录自知乎: &lt;/p&gt;
&lt;p&gt;  原文: &lt;a href=&#34;https://zhuanlan.zhihu.com/p/19586108&#34;&gt;https://zhuanlan.zhihu.com/p/19586108&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  作者: &lt;a href=&#34;https://www.zhihu.com/people/xhacker&#34;&gt;柳东原&lt;/a&gt; This Xhacker has super Big Cat power.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;压缩性能综合看来，WebP 略好于 JPEG2000，而这两者都明显好于 JPEG。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;前段时间测试了一下这三种有损图像压缩算法的质量。（WebP 也能支持无损，不过这里只测试有损。）&lt;/p&gt;
&lt;p&gt;测试结果（&lt;a href=&#34;https://link.zhihu.com/?target=http://en.wikipedia.org/wiki/Structural_similarity&#34;&gt;SSIM Index&lt;/a&gt; 可理解为图片与原图片的相似度）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/bc4a75ff/6dd37790364b1a5e709f8e67adab81d3_r.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/bc4a75ff/868c8f801447ee85c0867556cdb1f705_r.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/bc4a75ff/85ab2ef874126a10072e4669d9cd7c90_720w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/bc4a75ff/ea62d92a63b45aa121eb0ccfce4a97fd_720w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/bc4a75ff/6cdab6a9efdf3df3fba2657314d81734_720w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/bc4a75ff/323465387e562470441127b8f0cc992e_720w.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试细节：对于 JPEG 使用 libjpeg 压缩，JPEG 2000 使用 OpenJPEG，WebP 使用 libwebp。&lt;/p&gt;
&lt;h1 id=&#34;JPEG-PNG-GIF-WEBP&#34;&gt;&lt;a href=&#34;#JPEG-PNG-GIF-WEBP&#34; class=&#34;headerlink&#34; title=&#34;JPEG PNG GIF WEBP&#34;&gt;&lt;/a&gt;JPEG PNG GIF WEBP&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;综合看来&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PNG 可以保存透明信息, 比较适合颜色单一, 主要是纯色的图像, ( logo&amp;#x2F;icon&amp;#x2F;透明图 )&lt;/li&gt;
&lt;li&gt;JPEG 适用颜色种类多样 且颜色变化明显的图片 ( 一般照片 )&lt;/li&gt;
&lt;li&gt;GIF 支持动画,透明, 只有8位颜色 ( 动图 )&lt;/li&gt;
&lt;li&gt;WEBP 文件小, 支持透明, 有损无损压缩, 支持动画, 兼容性不好 ( 网页图像 )&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;JPEG&#34;&gt;&lt;a href=&#34;#JPEG&#34; class=&#34;headerlink&#34; title=&#34;JPEG&#34;&gt;&lt;/a&gt;JPEG&lt;/h2&gt;&lt;p&gt;JPEG是有损的、采用直接色的、位图。JPEG也是一种针对照片影像而广泛使用的有损压缩标准方法。JPEG图片格式的设计目标，是在不影响人类可分辨的图片质量的前提下，尽可能的压缩文件大小。这意味着JPEG去掉了一部分图片的原始信息，也即是进行了有损压缩。JPEG的图片的优点，是采用了直接色，得益于更丰富的色彩，JPEG非常适合用来存储照片，用来表达更生动的图像效果，比如颜色渐变。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特性：适用于存储色彩丰富、层次分明的图片，不适合于线条绘图（drawing）和其他文字或图标（iconic）的图形，因为它的压缩方法用在这些类型的图形上，得到的结果并不好(PNG和GIF通常是用来存储这类的图形)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;PNG&#34;&gt;&lt;a href=&#34;#PNG&#34; class=&#34;headerlink&#34; title=&#34;PNG&#34;&gt;&lt;/a&gt;PNG&lt;/h2&gt;&lt;p&gt;便携式网络图形是一种无损压缩的位图图形格式，支持索引、灰度、RGB三种颜色方案以及Alpha通道等特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特性：如果保存文本，线条或类似的边缘清晰，有大块相同颜色区域的图像，PNG格式的压缩效果就要比JPEG好很多，并且不会出现JPEG那样的高对比度区域的图像有损。如果图像既有清晰边缘，又有照片图像的特点，就需要在这两种格式之间权衡一下了。JPEG不支持透明度。&lt;br&gt;PNG格式有8位、24位、32位三种形式,其中8位PNG支持两种不同 的透明形式（索引透明和alpha透明）,24位PNG不支持透明,32位 PNG 在24位基础上增加了8位透明通道（32-24&amp;#x3D;&amp;#x3D;&amp;#x3D;8）,因此可展现256级透明程度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;PNG8&#34;&gt;&lt;a href=&#34;#PNG8&#34; class=&#34;headerlink&#34; title=&#34;PNG8&#34;&gt;&lt;/a&gt;PNG8&lt;/h3&gt;&lt;p&gt;PNG8是&lt;strong&gt;无损的、使用索引色的、点阵图&lt;/strong&gt;,支持不透明、索引透明、Alpha透明，都最多只能展示256（2的8次方）种颜色，所以“PNG8”格式更适合那些颜色比较单一的图像，例如纯色、logo、图标等；因为颜色数量少，所以图片的体积也会更小；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PNG8(不透明),默认PNG8&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PNG8(索引色透明),简单说可以理解为静态的GIF&lt;br&gt;指定一个像素点是不是透明&lt;br&gt;但是PNG由于算法的优势,体积比较少&lt;br&gt;所以,静态GIF完全可用PNG8取代&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PNG8(Alpha透明),牛逼在可指定像素点的透明度,例如50%透明度&lt;br&gt;这种优点在于比PNG24&amp;#x2F;32体积小,因为也只有256色嘛&lt;br&gt;缺点在于IE6支持不好,会把半透明的像素点显示成全透明&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;PNG24&#34;&gt;&lt;a href=&#34;#PNG24&#34; class=&#34;headerlink&#34; title=&#34;PNG24&#34;&gt;&lt;/a&gt;PNG24&lt;/h3&gt;&lt;p&gt;是PNG的直接色版本。PNG24是&lt;strong&gt;无损的、使用直接色的、点阵图&lt;/strong&gt;,支持2的24次方种颜色，表现为不透明。用三个8bits分别去表示 R（红）、G（绿）、B（蓝）。R(0255),G(0255),B(0~255)，可以表达256乘以256乘以256&amp;#x3D;16777216种颜色的图片，这样PNG24就能比PNG8表示色彩更丰富的图片,图片的清晰度也会更好，图片质量更高，当然图片的大小也会相应增加，所以“PNG24”的图片比较适合像摄影作品之类颜色比较丰富的图片&lt;br&gt;PNG24与JPG一样能表达丰富的图片细节，但并不能替代JPG。图片存储为PNG24比存储为JPG，文件大小至少是JPG的5倍，但在图片品质上的提升却微乎其微。所以除非对品质的要求极高，否则色彩丰富的网络图片还是推荐使用JPG&lt;/p&gt;
&lt;h3 id=&#34;PNG32&#34;&gt;&lt;a href=&#34;#PNG32&#34; class=&#34;headerlink&#34; title=&#34;PNG32&#34;&gt;&lt;/a&gt;PNG32&lt;/h3&gt;&lt;p&gt;支持2的32次方种颜色，32位是我们最常使用的格式，它是在PNG在24位的PNG基础上增加了8位的透明信息，支持不同程度的半透效果&lt;/p&gt;
&lt;h3 id=&#34;PNG8-PNG24-PNG32三者的区别在于：&#34;&gt;&lt;a href=&#34;#PNG8-PNG24-PNG32三者的区别在于：&#34; class=&#34;headerlink&#34; title=&#34;PNG8\PNG24\PNG32三者的区别在于：&#34;&gt;&lt;/a&gt;PNG8\PNG24\PNG32三者的区别在于：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;PNG-32每个像素的深度为32bits，其中RGBA四个通道各占8bits。所谓的RGBA四个通道，就是红，绿，蓝，透明 这四种色值各自的大小，都用8bits来表示（0～255）。&lt;/li&gt;
&lt;li&gt;PNG-24的像素深度为24bits，其中RGB三个通道各占8bits。&lt;/li&gt;
&lt;li&gt;PNG-8则是使用8位的索引色。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;GIF&#34;&gt;&lt;a href=&#34;#GIF&#34; class=&#34;headerlink&#34; title=&#34;GIF&#34;&gt;&lt;/a&gt;GIF&lt;/h2&gt;&lt;p&gt;GIF是一种&lt;strong&gt;无损、使用于索引色的、位图&lt;/strong&gt;。由于采用了无损压缩，相比古老的bmp格式，尺寸较小，而且支持透明和动画。缺点是由于gif只存储8位索引（也就是最多能表达2^8&amp;#x3D;256种颜色），色彩复杂、细节丰富的图片不适合保存为gif格式。色彩简单的logo、icon、线框图适合采用gif格式。&lt;/p&gt;
&lt;p&gt;静态GIF完全可用PNG8取代&lt;/p&gt;
&lt;h2 id=&#34;WEBP&#34;&gt;&lt;a href=&#34;#WEBP&#34; class=&#34;headerlink&#34; title=&#34;WEBP&#34;&gt;&lt;/a&gt;WEBP&lt;/h2&gt;&lt;p&gt;WebP图片是一种同时提供了&lt;strong&gt;有损压缩与无损压缩、使用直接色的、位图&lt;/strong&gt;，由Google开发。与png、jpg相比，相同的视觉体验下，WebP图像的尺寸缩小了大约30％。另外，WebP图像格式还支持有损压缩、无损压缩、透明和动画。理论上完全可以替代png、jpg、gif等图片格式，当然目前webp的还没有得到全面的支持。&lt;/p&gt;
&lt;p&gt;WEBP与PNG压缩对比&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/bc4a75ff/formatpng.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以得出结论：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  PNG 转 WebP 的压缩率要高于 PNG 原图压缩率，同样支持有损与无损压缩&lt;br&gt;  转换后的 WebP 体积大幅减少，图片质量也得到保障（同时肉眼几乎无法看出差异）&lt;br&gt;  转换后的 WebP 支持 Alpha 透明和 24-bit 颜色数，不存在 PNG8 色彩不够丰富和在浏览器中可能会出现毛边的问题&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="jpeg" />
        <category term="webp" />
        <category term="jpeg2000" />
        <category term="image" />
        <updated>2022-09-18T05:47:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/631793c8/</id>
        <title>文件后缀与文件</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/631793c8/"/>
        <content type="html">&lt;h1 id=&#34;文件后缀与文件&#34;&gt;&lt;a href=&#34;#文件后缀与文件&#34; class=&#34;headerlink&#34; title=&#34;文件后缀与文件&#34;&gt;&lt;/a&gt;文件后缀与文件&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;后缀&lt;/th&gt;
&lt;th&gt;名称描述&lt;/th&gt;
&lt;th&gt;简述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.DS_Store&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Desktop Services Store&lt;/td&gt;
&lt;td&gt;Mac OS X操作系统所创造的隐藏文件，类似&lt;code&gt;desktop.ini&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;编辑历史&#34;&gt;&lt;a href=&#34;#编辑历史&#34; class=&#34;headerlink&#34; title=&#34;编辑历史&#34;&gt;&lt;/a&gt;编辑历史&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;date&lt;/th&gt;
&lt;th&gt;note&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;2022.9.15&lt;/td&gt;
&lt;td&gt;First Version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;DS-Store&#34;&gt;&lt;a href=&#34;#DS-Store&#34; class=&#34;headerlink&#34; title=&#34;.DS_Store&#34;&gt;&lt;/a&gt;.DS_Store&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  DS_Store，英文全称是 Desktop Services Store（桌面服务存储），开头的 DS 是 Desktop Services（桌面服务） 的缩写。它是一种由macOS系统自动创建的隐藏文件，存在于每一个用「Finder」打开过的文件夹下面。&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;.DS_Store&lt;/code&gt; 是一种由苹果公司的Mac OS X操作系统所创造的隐藏文件，目的在于存贮目录的自定义属性，例如文件们的图标位置或者是背景色的选择。该文件由&lt;code&gt;Finder&lt;/code&gt;创建并维护，类似于&lt;code&gt;Microsoft Windows&lt;/code&gt;中的&lt;code&gt;desktop.ini&lt;/code&gt;文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;RTF&#34;&gt;&lt;a href=&#34;#RTF&#34; class=&#34;headerlink&#34; title=&#34;.RTF&#34;&gt;&lt;/a&gt;.RTF&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  &lt;strong&gt;富文本格式&lt;/strong&gt;（&lt;strong&gt;Rich Text Format&lt;/strong&gt;）即&lt;strong&gt;RTF格式&lt;/strong&gt;，又称&lt;strong&gt;多文本格式&lt;/strong&gt;，是由&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%BE%AE%E8%BD%AF&#34;&gt;微软&lt;/a&gt;公司开发的跨平台&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%96%87%E6%A1%A3&#34;&gt;文档&lt;/a&gt;格式。大多数的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%96%87%E5%AD%97%E5%A4%84%E7%90%86&#34;&gt;文字处理&lt;/a&gt;软件都能读取和保存RTF文档。&lt;/p&gt;
&lt;h2 id=&#34;支持软件&#34;&gt;&lt;a href=&#34;#支持软件&#34; class=&#34;headerlink&#34; title=&#34;支持软件&#34;&gt;&lt;/a&gt;支持软件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/WordPad&#34;&gt;WordPad&lt;/a&gt;（&lt;a href=&#34;https://zh.wikipedia.org/wiki/Microsoft_Windows&#34;&gt;Microsoft Windows&lt;/a&gt;）&amp;#x2F; &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%96%87%E5%AD%97%E7%B7%A8%E8%BC%AF_(%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F)&#34;&gt;文本编辑&lt;/a&gt;（&lt;a href=&#34;https://zh.wikipedia.org/wiki/Mac_OS&#34;&gt;Mac OS&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/Microsoft_Word&#34;&gt;Microsoft Word&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/Apache_OpenOffice&#34;&gt;Apache OpenOffice&lt;/a&gt; &amp;#x2F; &lt;a href=&#34;https://zh.wikipedia.org/wiki/LibreOffice&#34;&gt;LibreOffice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/zh-cn/WPS_Office&#34;&gt;WPS Office&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/EIOffice&#34;&gt;EIOffice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
        <category term="DS_Store" />
        <category term="rtf" />
        <category term="后缀" />
        <updated>2022-09-15T09:47:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/613d8edd/</id>
        <title>Zip Gzip Bzip2 Tar 的区别和差异</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/613d8edd/"/>
        <content type="html">&lt;h1 id=&#34;zip-gzip-bzip2-tar-命令的区别和差异&#34;&gt;&lt;a href=&#34;#zip-gzip-bzip2-tar-命令的区别和差异&#34; class=&#34;headerlink&#34; title=&#34;zip gzip bzip2 tar 命令的区别和差异&#34;&gt;&lt;/a&gt;zip gzip bzip2 tar 命令的区别和差异&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gzip&lt;/code&gt; 和 &lt;code&gt;bzip2&lt;/code&gt;用于压缩单个文件。bzip2 比 gzip 具有更高的压缩率，同样的也会需要&lt;strong&gt;更多更多更多&lt;/strong&gt;时间来进行压缩。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tar&lt;/code&gt;格式的包只是将文件归档在一起, 并不会有任何压缩。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zip&lt;/code&gt; 和 &lt;code&gt;tar&lt;/code&gt; 命令用于压缩和归档文件夹。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;zip&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.zip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;可以压缩目录&lt;/td&gt;
&lt;td&gt;源文件会保留&lt;/td&gt;
&lt;td&gt;专门的压缩命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gzip&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.gz&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;只能压缩文件&lt;/td&gt;
&lt;td&gt;压缩后源文件会被删除&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bzip2&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.bz2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;只能压缩文件&lt;/td&gt;
&lt;td&gt;加&lt;code&gt;-k&lt;/code&gt;参数源文件可以保留&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tar&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.tar&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;可以压缩目录&lt;/td&gt;
&lt;td&gt;源文件会保留&lt;/td&gt;
&lt;td&gt;linux包大多是这形态&lt;br&gt;将目录打包成一个文件&lt;code&gt;Tape archive&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xz&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.xz&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;zip&#34;&gt;&lt;a href=&#34;#zip&#34; class=&#34;headerlink&#34; title=&#34;zip&#34;&gt;&lt;/a&gt;zip&lt;/h2&gt;&lt;h2 id=&#34;gzip&#34;&gt;&lt;a href=&#34;#gzip&#34; class=&#34;headerlink&#34; title=&#34;gzip&#34;&gt;&lt;/a&gt;gzip&lt;/h2&gt;&lt;p&gt;该&lt;code&gt;gzip&lt;/code&gt;程序用于压缩一个或多个文件。执行时，它将原始文件替换为原始文件的压缩版本。使用 gzip 压缩的文件具有扩展名&lt;code&gt;.gz&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;bzip2&#34;&gt;&lt;a href=&#34;#bzip2&#34; class=&#34;headerlink&#34; title=&#34;bzip2&#34;&gt;&lt;/a&gt;bzip2&lt;/h2&gt;&lt;p&gt;该&lt;code&gt;bzip2&lt;/code&gt;命令类似于 gzip，但使用不同的压缩算法，以牺牲压缩速度为代价归档更高级别的压缩。使用 bzip2 压缩的文件具有扩展名&lt;code&gt;.bz2&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;tar&#34;&gt;&lt;a href=&#34;#tar&#34; class=&#34;headerlink&#34; title=&#34;tar&#34;&gt;&lt;/a&gt;tar&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tar&lt;/code&gt;命令，首字母缩略词&lt;em&gt;&lt;strong&gt;Tape archive&lt;/strong&gt;&lt;/em&gt;用于创建存档文件。tar 存档可以由单独的文件、一个或多个目录层次结构或两者的混合组成。tar 文件有扩展名&lt;code&gt;.tar&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;xz&#34;&gt;&lt;a href=&#34;#xz&#34; class=&#34;headerlink&#34; title=&#34;xz&#34;&gt;&lt;/a&gt;xz&lt;/h2&gt;&lt;p&gt;&lt;code&gt;xz&lt;/code&gt;是一个通用的数据压缩工具，命令行语法类似于 gzip 和 bzip2 。它根据选择的操作模式压缩或解压缩每个文件。用 xz 压缩的文件具有扩展名&lt;code&gt;.xz&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;Zip-和-Unzip&#34;&gt;&lt;a href=&#34;#Zip-和-Unzip&#34; class=&#34;headerlink&#34; title=&#34;Zip 和 Unzip&#34;&gt;&lt;/a&gt;Zip 和 Unzip&lt;/h1&gt;&lt;h2 id=&#34;zip-1&#34;&gt;&lt;a href=&#34;#zip-1&#34; class=&#34;headerlink&#34; title=&#34;zip&#34;&gt;&lt;/a&gt;zip&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;命令格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs text&#34;&gt;zip [-r] [压缩后文件名] [文件或目录]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;命令描述&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zip&lt;/code&gt;命令用来对文件进行打包操作。zip是个使用广泛的压缩程序，文件经它压缩后会另外产生具有“.zip”扩展名的压缩文件；&lt;/li&gt;
&lt;li&gt;在linux压缩后的文件，基本都可以在Windows系统中解压；Windows中压缩的文件，在Linux中不一定可用，但是zip格式的压缩文件，可以做到可用；&lt;/li&gt;
&lt;li&gt;zip的压缩比不是很高；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 压缩文件&lt;/span&gt;&lt;br&gt;$ zip a.zip a.txt&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 查看压缩后的文件&lt;/span&gt;&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;a.txt  a.zip  &lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 2. -r：压缩文件夹&lt;/span&gt;&lt;br&gt;$ zip -r test.zip testDir/&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;testDir  test.zip&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 3. -x 排除文件&lt;/span&gt;&lt;br&gt;$ zip -r test2.zip testDir/ -x &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;testDir/hello*&amp;quot;&lt;/span&gt; -x &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;testDir/dir/*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;unzip-解压&#34;&gt;&lt;a href=&#34;#unzip-解压&#34; class=&#34;headerlink&#34; title=&#34;unzip 解压&#34;&gt;&lt;/a&gt;unzip 解压&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;命令格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs text&#34;&gt;unzip [选项] 文件名&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;命令描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;unzip&lt;/code&gt;命令用于解压缩由zip命令压缩的“.zip”压缩包。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-n：解压缩时不要覆盖原有的文件；&lt;/li&gt;
&lt;li&gt;-o：不必先询问用户，unzip执行后覆盖原有的文件；&lt;/li&gt;
&lt;li&gt;-d &amp;lt;目录&amp;gt;：指定文件解压缩后所要存储的目录(不指定目录，默认解压到当前目录)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 解压文件到家目录&lt;/span&gt;&lt;br&gt;$ unzip test.zip -d ~&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h1 id=&#34;Gzip-和-Gunzip&#34;&gt;&lt;a href=&#34;#Gzip-和-Gunzip&#34; class=&#34;headerlink&#34; title=&#34;Gzip 和 Gunzip&#34;&gt;&lt;/a&gt;Gzip 和 Gunzip&lt;/h1&gt;&lt;h2 id=&#34;gzip-1&#34;&gt;&lt;a href=&#34;#gzip-1&#34; class=&#34;headerlink&#34; title=&#34;gzip&#34;&gt;&lt;/a&gt;&lt;strong&gt;gzip&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;命令格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs text&#34;&gt;gzip [文件]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;命令描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gzip&lt;/code&gt;命令 用来压缩文件。gzip是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多处“&lt;code&gt;.gz&lt;/code&gt;”扩展名。&lt;code&gt;gzip&lt;/code&gt;只能压缩文件，不能压缩文件夹，压缩后原文件会被删除&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gzip&lt;/code&gt;是在Linux系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。gzip不仅可以用来压缩大的、较少使用的文件以节省磁盘空间，还可以和tar命令一起构成Linux操作系统中比较流行的压缩文件格式。据统计，gzip命令对文本文件有60%～70%的压缩率。减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 压缩文件&lt;/span&gt;&lt;br&gt;$ gzip a.txt&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 查看压缩后的文件，源文件被删除&lt;/span&gt;&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;a.txt.gz&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;gunzip-解压&#34;&gt;&lt;a href=&#34;#gunzip-解压&#34; class=&#34;headerlink&#34; title=&#34;gunzip 解压&#34;&gt;&lt;/a&gt;gunzip 解压&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;命令格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs text&#34;&gt;gzip [文件]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;命令描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gunzip&lt;/code&gt;命令用来解压缩文件。gunzip是个使用广泛的解压缩程序，它用于解开被gzip压缩过的文件，这些压缩文件预设最后的扩展名为&lt;code&gt;.gz&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 解压文件，解压后压缩文件被删除&lt;/span&gt;&lt;br&gt;$ gunzip a.txt.gz&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;a.txt &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;Bzip2&#34;&gt;&lt;a href=&#34;#Bzip2&#34; class=&#34;headerlink&#34; title=&#34;Bzip2&#34;&gt;&lt;/a&gt;Bzip2&lt;/h1&gt;&lt;h2 id=&#34;bzip2-1&#34;&gt;&lt;a href=&#34;#bzip2-1&#34; class=&#34;headerlink&#34; title=&#34;bzip2&#34;&gt;&lt;/a&gt;bzip2&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;命令格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs text&#34;&gt;bzip2 [选项] [文件]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;命令描述&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bzip2命令用于压缩“&lt;code&gt;.bz2&lt;/code&gt;”格式的压缩包，是&lt;code&gt;gzip&lt;/code&gt;的升级版本，可以保留原文件；&lt;/li&gt;
&lt;li&gt;bzip2的压缩比比较高，可用于压缩较大文件的压缩；&lt;/li&gt;
&lt;li&gt;bzip2也是只对文件进行压缩，如果相对目录进行压缩的话，可以配合 &lt;code&gt;tar&lt;/code&gt;命令使用，使用 &lt;code&gt;tar -jcvf&lt;/code&gt; 文件名 完成打包压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;-k（keep）：保留原文件（不删除原文件）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# bzip2 压缩文件&lt;/span&gt;&lt;br&gt;$ bzip2 -k a.txt&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;a.txt  a.txt.bz2&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 配合使用tar 命令，完成打包压缩&lt;/span&gt;&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;mkdir&lt;/span&gt; music&lt;br&gt;$ tar -jcvf music.tar.bz2 music/&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;music  music.tar.bz2&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;bunzip2-解压&#34;&gt;&lt;a href=&#34;#bunzip2-解压&#34; class=&#34;headerlink&#34; title=&#34;bunzip2 解压&#34;&gt;&lt;/a&gt;bunzip2 解压&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;命令格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs text&#34;&gt;bunzip2 [选项] [文件]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;命令描述&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解压缩“&lt;code&gt;.bz2&lt;/code&gt;”格式的压缩文件；&lt;/li&gt;
&lt;li&gt;gunzip的升级版，可以使用&lt;code&gt;-k&lt;/code&gt;保留原文件；&lt;/li&gt;
&lt;li&gt;可以配合使用tar命令，完成解压缩解包： &lt;code&gt;tar -jxvf 文件名&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;-k（keep）：保留原文件（不删除原文件）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;a.txt.bz2  music.tar.bz2&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 解压缩文件&lt;/span&gt;&lt;br&gt;$ bunzip2 -k a.txt.bz2&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;a.txt  a.txt.bz2  music.tar.bz2&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 使用tar完成解压解包&lt;/span&gt;&lt;br&gt;$ tar -jxvf music.tar.bz2&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;a.txt  a.txt.bz2  music  music.tar.bz2&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;tar-1&#34;&gt;&lt;a href=&#34;#tar-1&#34; class=&#34;headerlink&#34; title=&#34;tar&#34;&gt;&lt;/a&gt;tar&lt;/h1&gt;&lt;h2 id=&#34;tar-2&#34;&gt;&lt;a href=&#34;#tar-2&#34; class=&#34;headerlink&#34; title=&#34;tar&#34;&gt;&lt;/a&gt;tar&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;命令格式&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight text&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs text&#34;&gt;tar [选项] [压缩后文件名] [目录]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;命令描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打包目录，将目录打包成一个文件，同时可以压缩，压缩后的拓展名为&lt;code&gt;.tar.gz&lt;/code&gt;，这个拓展名在下载Linux相关安装包时很常见。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;tar&lt;/code&gt;命令时，如果想要打包并压缩一个目录，可以有两种方法进行：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先利用tar命令打包目录为一个文件，然后使用gzip压缩&lt;/li&gt;
&lt;li&gt;直接利用tar命令打包并压缩 (简单方便，推荐使用)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解压时也有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先使用gunzip解压缩，再使用tar解包&lt;/li&gt;
&lt;li&gt;直接利用tar命令解压缩并解包 (简单方便，推荐使用)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;选项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-c：打包(将所有文件变成一个文件 Create  a new archive)&lt;/li&gt;
&lt;li&gt;-x：解包&lt;/li&gt;
&lt;li&gt;-v：显示详细信息&lt;/li&gt;
&lt;li&gt;-f：指定文件名&lt;/li&gt;
&lt;li&gt;-z：打包同时压缩&amp;#x2F;解压缩  ，gzip压缩&lt;/li&gt;
&lt;li&gt;-j：生成压缩文件 ，bzip2压缩&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 压缩&lt;/span&gt;&lt;br&gt;tar -zcvf movie2.tar.gz movie&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 解压&lt;/span&gt;&lt;br&gt;tar -zxvf movie2.tar.gz&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 1、2为    打包压缩    的两种方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 1. 使用 tar -cvf 打包，然后使用gzip压缩&lt;/span&gt;&lt;br&gt;$ tar -cvf movie.tar movie/&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;movie  movie.tar&lt;br&gt;$ gzip movie.tar&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;movie  movie.tar.gz&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 2. 使用 tar -zcvf 打包并压缩&lt;/span&gt;&lt;br&gt;$ tar -zcvf movie2.tar.gz movie&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;movie  movie2.tar.gz&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 3、4为     解压缩并解包     的两种方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 3. 先使用gunzip解压缩，然后 tar -xvf解包&lt;/span&gt;&lt;br&gt;$ gunzip movie.tar.gz&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;movie2.tar.gz  movie.tar&lt;br&gt;$ tar -xvf movie.tar&lt;br&gt;movie/&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;movie  movie2.tar.gz  movie.tar&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 4. 使用tar -zxvf 解压缩并解包&lt;/span&gt;&lt;br&gt;$ tar -zxvf movie2.tar.gz&lt;br&gt;$ &lt;span class=&#34;hljs-built_in&#34;&gt;ls&lt;/span&gt;&lt;br&gt;movie  movie2.tar.gz  movie.tar&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://techviewleo.com/compress-uncompress-files-tar-gzip-bzip2-xz-linux/&#34;&gt;LPIC 101 – Compress and Uncompress Files Using tar, gzip, bzip2 and xz on Linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_archive_formats#Comparison&#34;&gt;List of archive formats&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="zip" />
        <category term="gzip" />
        <category term="bzip" />
        <category term="tar" />
        <updated>2022-09-14T16:20:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/45a589a3/</id>
        <title>MD5</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/45a589a3/"/>
        <content type="html">&lt;h1 id=&#34;MD5&#34;&gt;&lt;a href=&#34;#MD5&#34; class=&#34;headerlink&#34; title=&#34;MD5&#34;&gt;&lt;/a&gt;MD5&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;MD5消息摘要算法&lt;/strong&gt;（英语：MD5 Message-Digest Algorithm），一种被广泛使用的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A2%BC%E9%9B%9C%E6%B9%8A%E5%87%BD%E6%95%B8&#34;&gt;密码散列函数&lt;/a&gt;，可以产生出一个128位（16个字符(BYTES)）的散列值（hash value），用于确保信息传输完整一致。将&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE&#34;&gt;数据&lt;/a&gt;（如一段文字）运算变为另一固定长度值，是散列算法的基础原理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/121492822&#34;&gt;MD5破解的几种方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/MD5&#34;&gt;Wiki MD5&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;特性&#34;&gt;&lt;a href=&#34;#特性&#34; class=&#34;headerlink&#34; title=&#34;特性&#34;&gt;&lt;/a&gt;特性&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不可逆向的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  我们没办法把MD5码还原对应的原文。道理很简单，任意长度的数据经过MD5处理后，所包含的信息量已经大大减少，那是不可能再次还原成为原始信息的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;原文中作一个小变化其散列也会发生巨大的变化&lt;/p&gt;
&lt;blockquote&gt;
  &lt;figure class=&#34;highlight excel&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs excel&#34;&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;MD5&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;The quick brown fox jumps over the lazy dog&amp;quot;&lt;/span&gt;)&lt;br&gt;= &lt;span class=&#34;hljs-number&#34;&gt;9&lt;/span&gt;e107d9d372bb6826bd81d3542a419d6&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;  比如用c取代d, 其MD5值发生了巨大的变化&lt;/p&gt;
  &lt;figure class=&#34;highlight excel&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs excel&#34;&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;MD5&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;The quick brown fox jumps over the lazy cog&amp;quot;&lt;/span&gt;)&lt;br&gt;= &lt;span class=&#34;hljs-number&#34;&gt;1055&lt;/span&gt;d3e698d289f2af8663725127bd4b&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;已被破解&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  通俗点讲就是，可以找到一个A和一个B，使hash（A）&amp;#x3D;hash（B），而真正有用的是给定一个A能得到B，使hash（A）&amp;#x3D;hash（B），而王小云能做到这样&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;应用&#34;&gt;&lt;a href=&#34;#应用&#34; class=&#34;headerlink&#34; title=&#34;应用&#34;&gt;&lt;/a&gt;应用&lt;/h1&gt;&lt;p&gt;MD5 摘要已在&lt;a href=&#34;https://en.wikipedia.org/wiki/Software&#34;&gt;软件&lt;/a&gt;世界中广泛使用，以确保传输的文件已完好无损地到达。例如，文件服务器通常会为文件提供预先计算的 MD5（称为&lt;a href=&#34;https://en.wikipedia.org/wiki/Md5sum&#34;&gt;md5sum&lt;/a&gt;）&lt;a href=&#34;https://en.wikipedia.org/wiki/Checksum&#34;&gt;校验和&lt;/a&gt;，以便用户可以将下载文件的校验和与其进行比较。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/45a589a3/350px-CPT-Hashing-File-Transmission.png&#34; alt=&#34;350px-CPT-Hashing-File-Transmission.svg&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于很容易产生 MD5 冲突，因此创建文件的人可能会创建具有相同校验和的第二个文件，因此该技术无法防止某些形式的恶意篡改。&lt;/p&gt;
&lt;p&gt;在某些情况下，校验和是不可信的（例如，如果它是通过与下载文件相同的渠道获得的，他人可能修改了文件后再次修改了MD5，使得MD5并不可信），在这种情况下，MD5 只能提供错误检查功能：“它会识别损坏或不完整的下载，这变成下载较大文件时更有可能。”&lt;/p&gt;
&lt;h1 id=&#34;破解&#34;&gt;&lt;a href=&#34;#破解&#34; class=&#34;headerlink&#34; title=&#34;破解&#34;&gt;&lt;/a&gt;破解&lt;/h1&gt;&lt;h2 id=&#34;穷举法-amp-字典法&#34;&gt;&lt;a href=&#34;#穷举法-amp-字典法&#34; class=&#34;headerlink&#34; title=&#34;穷举法&amp;amp;字典法&#34;&gt;&lt;/a&gt;穷举法&amp;amp;字典法&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;穷举法非常简单，就是不停地尝试各种字符的排列组合，看哪一个组合的MD5码能对上。&lt;/strong&gt;可惜缺点是太耗费时间了。我们举个栗子，假设我们要破解一个6位大小写字母和数字混合的密码，那么一共有(26+26+10)&lt;sup&gt;6&lt;/sup&gt; 种组合。这个数的大小超过500亿。&lt;/p&gt;
&lt;p&gt;既然计算如此费时，能不能考虑&lt;strong&gt;把计算结果以映射表的形式存放起来，一个萝卜一个坑&lt;/strong&gt;，一个原文对应着一个MD5码呢？可以呀！这就是传说中的“字典法”。将已知的MD5码查表，直接反查出原文。&lt;strong&gt;字典法体现了算法设计的“以空间换时间”的思想。&lt;/strong&gt;缺点是比较耗费空间。不过现在硬盘的价格变得白菜价了，空间开销不算什么。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cmd5.com/password.aspx&#34;&gt;CMD5 反查网站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.somd5.com/&#34;&gt;SMD5 反查网站&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;哈希链表-amp-彩虹表法&#34;&gt;&lt;a href=&#34;#哈希链表-amp-彩虹表法&#34; class=&#34;headerlink&#34; title=&#34;哈希链表&amp;amp;彩虹表法&#34;&gt;&lt;/a&gt;哈希链表&amp;amp;彩虹表法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;  如果说穷举法太耗费时间，字典法太耗费存储空间的话，我们能不能考虑在时间消耗和空间消耗之间折中呢？我们可以考虑用链表将一系列有意义的原文和MD5码串起来。&lt;/p&gt;
&lt;p&gt;  要构造这样的链表，我们需要两个函数：哈希函数H(x)和衰减函数（reduction function）R(x)。哈希函数可以是MD5，也可以是其他的消息摘要算法。H(x)的值域是R(x)的定义域，R(x)的值域是H(x)的定义域。&lt;strong&gt;R(x)不是H(x)的反函数。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  将一个原文不停地使用H(x)和R(x)交替进行运算k次，再将原文本身和运算结果以链表的形式串接起来，就可以得到结点个数为2k+1的链表。实际存放的时候只存放首端和末端两个原文即可。&lt;strong&gt;这种链表叫做“哈希链表”，体现了算法设计的“时空权衡”（Space and Time Tradeoffs）。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  举个栗子，假设原文s&amp;#x3D;abcabc，经过2次交替运算，得到以下的链表：&lt;/p&gt;
&lt;p&gt;  abcabc-&amp;gt;H(x)-&amp;gt;3C8B0D7A-&amp;gt;R(x)-&amp;gt;eopmca-&amp;gt;H(x)-&amp;gt;7E9F216C-&amp;gt;R(x)-&amp;gt;rapper&lt;/p&gt;
&lt;p&gt;  以上数据均为举例编造的，仅为说明原理使用。那我们存放这个链表的时候，只需要记录abcabc和rapper两个原文即可。&lt;/p&gt;
&lt;p&gt;  假设我们要破解的摘要值（哈希链表的H(x)不一定是MD5算法，这里用更准确的说法代替MD5码）是7E9F216C，经过R(x)运算得到rapper，说明我们要寻找的原文就在以rapper为末端的哈希链表中。从首端开始经过多次运算，我们发现eopmca的摘要值就是7E9F216C。于是就反查出7E9F216C对应的原文是eopmca。&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;如果在生成哈希链表的时候依次使用多个不一样的R(x)，此时的哈希链表就是“彩虹表”。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  这里有已经计算好的彩虹表：&lt;a href=&#34;https://link.zhihu.com/?target=http://project-rainbowcrack.com/table.htm&#34;&gt;http://project-rainbowcrack.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;差分攻击&#34;&gt;&lt;a href=&#34;#差分攻击&#34; class=&#34;headerlink&#34; title=&#34;差分攻击&#34;&gt;&lt;/a&gt;差分攻击&lt;/h2&gt;&lt;p&gt;上面介绍的穷举法、字典法和彩虹表法都是暴力破解，适用于任何的消息摘要算法。&lt;/p&gt;
&lt;p&gt;真正意义上MD5算法的破解，是2004年山东大学王小云教授提出的MD5碰撞方法。她所用到的方法正是差分攻击。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sohu.com/a/501560600_121106869&#34;&gt;她是这样的“中国密码女神”！&lt;/a&gt; &lt;/p&gt;
</content>
        <category term="md5" />
        <updated>2022-09-14T14:57:15.000Z</updated>
    </entry>
    <entry>
        <id>https://www.oikiou.top/2022/471570a6/</id>
        <title>SpaceDesk手机用作电脑屏幕</title>
        <link rel="alternate" href="https://www.oikiou.top/2022/471570a6/"/>
        <content type="html">&lt;h1 id=&#34;SpaceDesk&#34;&gt;&lt;a href=&#34;#SpaceDesk&#34; class=&#34;headerlink&#34; title=&#34;SpaceDesk&#34;&gt;&lt;/a&gt;SpaceDesk&lt;/h1&gt;&lt;p&gt;在windows主机上虚拟出一块屏幕, 通过网络传输到其他带屏设备上.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;投屏到手机支持触摸&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下载&#34;&gt;&lt;a href=&#34;#下载&#34; class=&#34;headerlink&#34; title=&#34;下载&#34;&gt;&lt;/a&gt;下载&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://www.spacedesk.net/&#34;&gt;https://www.spacedesk.net/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;Note&#34;&gt;&lt;a href=&#34;#Note&#34; class=&#34;headerlink&#34; title=&#34;Note&#34;&gt;&lt;/a&gt;Note&lt;/h1&gt;&lt;h2 id=&#34;软件没有验证功能-不安全&#34;&gt;&lt;a href=&#34;#软件没有验证功能-不安全&#34; class=&#34;headerlink&#34; title=&#34;软件没有验证功能(不安全)&#34;&gt;&lt;/a&gt;软件没有验证功能(不安全)&lt;/h2&gt;&lt;p&gt;有一次在公司用手机客户端, 直接连接上了公司其他同事的电脑屏幕.&lt;/p&gt;
&lt;p&gt;公司的网络ip是dhcp的无法固定, 而且网络质量并不好, 所以我选择电脑开热点 手机连电脑热点.&lt;/p&gt;
&lt;p&gt;防火墙加规则,只允许热点网段的IP入站.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/471570a6/image-20220811195054454.png&#34; alt=&#34;image-20220811195054454&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2022/471570a6/image-20220811194925793.png&#34; alt=&#34;image-20220811194925793&#34;&gt;&lt;/p&gt;
</content>
        <category term="windows" />
        <category term="spacedesk" />
        <category term="投屏" />
        <updated>2022-08-29T14:57:15.000Z</updated>
    </entry>
</feed>
